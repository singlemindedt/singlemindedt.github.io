<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://singlemindedt.github.io/"/>
  <updated>2019-09-04T04:27:10.788Z</updated>
  <id>https://singlemindedt.github.io/</id>
  
  <author>
    <name>Smtsec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>代码审计</title>
    <link href="https://singlemindedt.github.io/2019/09/03/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1ONE/"/>
    <id>https://singlemindedt.github.io/2019/09/03/代码审计ONE/</id>
    <published>2019-09-03T14:35:18.000Z</published>
    <updated>2019-09-04T04:27:10.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h1><p>（来源：实验吧  解题链接： <a href="http://ctf5.shiyanbar.com/DUTCTF/index.php）" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php）</a><br><img src="https://img-blog.csdnimg.cn/20190903224633314.png" alt="在这里插入图片描述"><br>点开链接只有如上一句话。<br>根据提示 直接访问： index.php.txt<br>        （即：<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php.txt）" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php.txt）</a><br>得到如下页面：<br><img src="https://img-blog.csdnimg.cn/20190903224649753.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>分析代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;      <span class="comment">//对id进行字符串匹配，若$_GET[id]中有hacker DJ则</span></span><br><span class="line">    <span class="comment">//出not allowed!并终止正在执行的进程;</span></span><br><span class="line">      <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">      <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    $_GET[id] = urldecode($_GET[id]);    <span class="comment">//urldecode对字符串进行URL解码;将解码后的//$_GET[id]赋值给$_GET[id];</span></span><br><span class="line">    <span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)            <span class="comment">//若$_GET[id]的值等于hackerDJ，输出Access granted! //并给出flag: *****************&#125;</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">Can you authenticate to this website?</span><br></pre></td></tr></table></figure><hr>   <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$_GET</span><br><span class="line">说明</span><br><span class="line">通过 URL 参数传递给当前脚本的变量的数组</span><br><span class="line">Example <span class="comment">#1$_GET范例</span></span><br><span class="line">     <span class="meta">&lt;?php</span>          <span class="keyword">echo</span> <span class="string">'Hello '</span> . htmlspecialchars($_GET[<span class="string">"name"</span>]) . <span class="string">'!'</span>;     <span class="meta">?&gt;</span></span><br><span class="line">假设用户访问的是 http:<span class="comment">//example.com/?name=Hannes</span></span><br><span class="line">以上例程的输出类似于：</span><br><span class="line">                       Hello Hannes!</span><br></pre></td></tr></table></figure><h2 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h2><p>有$_GET[id] 所以应该是可以用 ?id= 来构造URL<br>id变量是一个url解码函数前不包含hackerDJ，url解码函数后为hackerDJ的变量，即id在进入url解码函数前必须是hackerDJ的url编码形式</p><p> <strong>注意：</strong>由于在浏览器输入url后会进行一次decode，这段代码中又进行一次decode，所以应对hackerDJ进行两次encode。只进行一次encode，浏览器自动解码后即为hackerDJ,被eregi()拦住，所以要进行二次编码，即对%68%61%63%6B%65%72%44%4A进行url编码。</p><p>①　<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%68%61%63%6B%65%72%44%4A" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%68%61%63%6B%65%72%44%4A</a></p><p>②　<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%25%36%38%25%36%31%25%36%33%25%36%42%25%36%35%25%37%32%25%34%34%25%34%41" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%25%36%38%25%36%31%25%36%33%25%36%42%25%36%35%25%37%32%25%34%34%25%34%41</a> </p><p>或者直接对其中的一个字母进行二次编码： h –&gt; %68 –&gt; %2568<br>构造url: index.php?id=%2568ackerDJ</p><hr><h1 id="Very-easy"><a href="#Very-easy" class="headerlink" title="Very easy"></a>Very easy</h1><p>打开链接直接得到如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$what=$_GET[<span class="string">'what'</span>];</span><br><span class="line"><span class="keyword">echo</span> $what;</span><br><span class="line"><span class="keyword">if</span>($what==<span class="string">'flag'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'flag&#123;****&#125;'</span>;</span><br></pre></td></tr></table></figure><p>分析：如果$what等于flag,则给出flag。<br>解决：<a href="http://123.206.87.240:8002/get/?what=flag" target="_blank" rel="noopener">http://123.206.87.240:8002/get/?what=flag</a> 得到flag。</p><hr><h1 id="Experiment-1"><a href="#Experiment-1" class="headerlink" title="Experiment 1"></a>Experiment 1</h1><p>打开链接直接出现PHP代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'money'</span>])) &#123;</span><br><span class="line">        $money=$_GET[<span class="string">'money'</span>];</span><br><span class="line">        <span class="keyword">if</span>(strlen($money)&lt;=<span class="number">4</span>&amp;&amp;$money&gt;time()&amp;&amp;!is_array($money))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;!--By:daoyuan--&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"Wrong Answer!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"Wrong Answer!"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="代码分析："><a href="#代码分析：" class="headerlink" title="代码分析："></a>代码分析：</h2><p>第一行:告诉我们flag应该就在flag.php中<br>第二行：highlight_file() 函数对文件进行 PHP 语法高亮显示。语法通过使用 HTML 标签进行高亮。</p><p>提示：用于高亮的颜色可通过 php.ini 文件进行设置或者通过调用 ini_set() 函数进行设置。</p><p>注释：当使用该函数时，整个文件都将被显示，包括密码和其他敏感信息！</p><p><strong>语法：highlight_file(filename,return)</strong><br><strong>filename    必需。规定要显示的文件。</strong><br><strong>return    可选。</strong><br>如果该参数设置为 TRUE，该函数将以字符串形式返回高亮显示的代码，而不是直接进行输出。<br>默认是 FALSE。<br>返回值<br>如果 return 参数设置为 TRUE，该函数将以字符串形式返回高亮显示的代码，而不是直接进行输出。<br>否则，如果成功则返回 TRUE，如果失败则返回 FALSE。<br><strong>If条件：$money的长度&lt;=4；同时&gt;time()；同时不是数组</strong><br>{<br>time() 函数返回自 Unix 纪元（January 1 1970 00:00:00 GMT）起的当前时间的秒数。<strong>此处我们直接将其理解为一个很大的数</strong><br>}<br>==PHP中，字符串开头以xex开头，x代表数字。会被转换成科学计数法。  如1e9 == 1×10^9==<br><strong>解决：直接用xex格式如：<a href="http://119.23.73.3:5001/web6/?money=10e9" target="_blank" rel="noopener">http://119.23.73.3:5001/web6/?money=10e9</a>  直接得到flag</strong></p><hr><h1 id="Experiment-2"><a href="#Experiment-2" class="headerlink" title="Experiment 2"></a>Experiment 2</h1><p>打开链接页面中只有一句话“好像少了点什么”，试着在url后添加<strong>index.php~</strong><br>即<a href="http://119.23.73.3:5001/web5/index.php~。" target="_blank" rel="noopener">http://119.23.73.3:5001/web5/index.php~。</a><br>打开页面发现什么都没有，查看源文件发现果然有PHP文件：</p><p><img src="https://img-blog.csdnimg.cn/20190903230150990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="分析代码："><a href="#分析代码：" class="headerlink" title="分析代码："></a>分析代码：</h2><p>9：给出$flag的值为我们最终需要的结果</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">moctf&#123;**************&#125;</span><br></pre></td></tr></table></figure><p>11：<br>{<br>PHP的isset()函数 一般用来检测变量是否设置<br>格式：bool isset ( mixed var [, mixed var [, …]] )<br>功能：检测变量是否设置<br>返回值：<br>若变量不存在则返回 FALSE<br>若变量存在且其值为NULL，也返回 FALSE<br>若变量存在且值不为NULL，则返回 TURE<br>同时检查多个变量时，每个单项都符合上一条要求时才返回 TRUE，否则结果为 FALSE<br>版本：PHP 3, PHP 4, PHP 5<br>更多说明：<br>使用 unset() 释放变量之后，它将不再是 isset()。<br>PHP函数isset()只能用于变量，传递任何其它参数都将造成解析错误。<br>检测常量是否已设置可使用 defined() 函数。<br>}</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">If</span>条件下对变量$_GET[<span class="string">'a'</span>]和$_GET[<span class="string">'b'</span>]赋值，并将其赋值给$a,$b.</span><br><span class="line">若$a等于$b则打印Wrong Answer!</span><br><span class="line">否则在条件md5($a)==md5($b)下给出$flag，否则打印Wrong Answer！</span><br><span class="line">**即此代码的意思时要我们对提供$a,$b使得其值不同，但MD5值相同。**</span><br></pre></td></tr></table></figure><p><strong>***弱类型比较——“==”类型转换的规则<br>1、字符串和数字比较，字符串会被转换成数字。  “admin”==0 (true)  admin被转换成数字，由于admin是字符串，转换失败，int(admin)=0，所以 比较结果是true。<br>2、混合字符串转换成数字，看字符串的第一个。  “1admin”==1      “2admin”==2<br>3、字符串开头以xex开头，x代表数字。会被转换成科学计数法。  1e9 == 1×10^9</strong></p><p>注：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"admin1"</span>==<span class="number">1</span> <span class="comment">//false</span></span><br><span class="line"><span class="string">"admin1"</span>==<span class="number">0</span> <span class="comment">//true</span></span><br></pre></td></tr></table></figure><p>参考网上资料：<strong>当一个字符串当作一个数值来取值，其结果和类型如下:<br>如果该字符串没有包含’.’,’e’,’E’并且其数值值在整形的范围之内<br>则：该字符串被当作int来取值，其他所有情况下都被作为float来取值，该字符串的开始部分决定了它的值，如果该字符串以合法的数值开始，则使用该数值，否则其值为0。</strong></p><p><strong>所以我们可以直接找符合xex格式的MD5原参</strong><br>{MD5 算法自诞生之日起，就有很多人试图证明和发现它的不安全之处，即存在碰撞（在对两个不同的内容使用 MD5算法运算的时候，有可能得到一对相同的结果值）–百科}<br>md5的碰撞，在PHP的数的处理中，类似0开头的字符串会被转换成0，因此有md5碰撞。</p><p>MD5值(哈希值)相等的问题可以用哈希值碰撞，也可以用数组绕过，如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`username[]=<span class="number">1</span>&amp;password[]=<span class="number">2.</span></span><br></pre></td></tr></table></figure><p>解决：<a href="http://119.23.73.3:5001/web5/**?a=QNKCDZO&amp;b=s878926199a" target="_blank" rel="noopener">http://119.23.73.3:5001/web5/**?a=QNKCDZO&amp;b=s878926199a</a>** ,直接得到flag。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">md5(<span class="string">'**QNKCDZO**'</span>)==md5(<span class="string">'**s878926199a** '</span>)---&gt;True</span><br></pre></td></tr></table></figure><hr><h1 id="Experiment-2-1"><a href="#Experiment-2-1" class="headerlink" title="Experiment 2.1"></a>Experiment 2.1</h1><p>题目给出了php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$flag = <span class="string">'flag&#123;test&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'username'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'username'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line"><span class="keyword">print</span> <span class="string">'Your password can not be your username.'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (md5($_GET[<span class="string">'username'</span>]) === md5($_GET[<span class="string">'password'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析代码：-1"><a href="#分析代码：-1" class="headerlink" title="分析代码："></a>分析代码：</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们得构造$_GET[‘username’]和$GET[‘password’]的值不相等，同时它们的md5的值相等才能得到flag</span><br></pre></td></tr></table></figure><p>因为md5不能处理数组，可以使用数组绕过，md5(数组)会返回FALSE，username[]=1,password[]=2这样弱==下可以实现username!=password,同时会得到FALSE===FALSE使得md5(username)===md5(password)成立。<br>解决：<a href="http://123.206.87.240:9009/18.php?username[]=1&amp;password[]=2" target="_blank" rel="noopener">http://123.206.87.240:9009/18.php?username[]=1&amp;password[]=2</a> 直接得到flag。</p><hr><h1 id="Experiment-3"><a href="#Experiment-3" class="headerlink" title="Experiment 3"></a>Experiment 3</h1><p>打开链接得到：<br><img src="https://img-blog.csdnimg.cn/20190903231726221.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>细细品味后发现“链接”下真有一个链接。点开得到php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">$v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">$v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">$v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line"><span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line"><span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析代码：-2"><a href="#分析代码：-2" class="headerlink" title="分析代码："></a>分析代码：</h2><p>v1不等于v2同时两者的MD5值相等<br><strong>&lt;此处既可以用MD5的0e漏洞也可以利用数组绕过&gt;</strong><br>由if(!strcmp(v3,flag))需要v3和flag值相同才返回flag的值</p><h3 id="strcmp漏洞"><a href="#strcmp漏洞" class="headerlink" title="strcmp漏洞"></a>strcmp漏洞</h3><p>int strcmp ( string str1,stringstr2 )<br>str1是第一个字符串，str2是第二个字符串。如果 str1 小于 str2 返回 &lt; 0； 如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0。</p><p>但是如果我们传入非字符串类型的数据的时候，这个函数将发生错误，在5.3之前的php中，显示了报错的警告信息后，将return 0 ! 也就是虽然报了错，但却判定其相等了。</p><p>因此，解这道题，就只要传入一个非字符串类型的变量使其报错，又由于前面的否定“！”得到true。<br>解决：<a href="http://123.206.31.85:49162/?v1[]=1&amp;v2[]=2&amp;v3[]=1" target="_blank" rel="noopener">http://123.206.31.85:49162/?v1[]=1&amp;v2[]=2&amp;v3[]=1</a> </p><hr><h1 id="Experiment-3-2"><a href="#Experiment-3-2" class="headerlink" title="Experiment 3.2"></a>Experiment 3.2</h1><p>打开链接得到空页，根据给出的php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag&#123;xxxxx&#125;"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (strcmp($_GET[<span class="string">'a'</span>], $flag) == <span class="number">0</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'No'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析代码：-3"><a href="#分析代码：-3" class="headerlink" title="分析代码："></a>分析代码：</h2><p>  第一行，flag变量被设置为flag{xxxxx}。这并不是我们要提交的flag，真实运行的后端中的flag变量才是真的flag。<br>  第二行，isset函数判断HTTP GET请求中的参数a是否已设置并且非NULL。strcmp函数将a参数与flag相比较，如果一致，则调用die函数。die函数的作用是打印die函数的参数，并立即停止该php后端的运行。那么我们的目标很明显，就是要让php执行到die函数，显示flag。<br>根据上题<strong>strcmp漏洞</strong>，我们可以直接利用数组绕过比如用<strong>”a[]=”</strong><br>解决：<a href="http://123.206.87.240:9009/6.php?a[]=" target="_blank" rel="noopener">http://123.206.87.240:9009/6.php?a[]=</a> </p><hr><h1 id="ereg截断"><a href="#ereg截断" class="headerlink" title="ereg截断"></a>ereg截断</h1><p>打开链接同样是一个空白页面，根据给出的php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"flag"</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'You password must be alphanumeric'</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Invalid password'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分析代码：-4"><a href="#分析代码：-4" class="headerlink" title="分析代码："></a>分析代码：</h2><p>flag变量被设置为flag，即最终我们需要得到flag变量的内容从而达到真正的flag。<br>isset函数判断HTTP GET请求中的参数password是否已设置并且非NULL</p><h3 id="ereg-函数"><a href="#ereg-函数" class="headerlink" title="ereg()函数"></a>ereg()函数</h3> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> ereg ( string $pattern , string $string [, <span class="keyword">array</span> &amp;$regs ] ) : int</span><br><span class="line">函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回<span class="keyword">true</span>,否则,则返回<span class="keyword">false</span>。</span><br><span class="line">搜索字母的字符是大小写敏感的。</span><br><span class="line">&#125;</span><br><span class="line">ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) !== <span class="keyword">FALSE</span></span><br><span class="line">由第一个参数正则表达式可知该字符串从头到尾只允许出现字母与数字即a-z、A-Z、<span class="number">0</span><span class="number">-9.</span></span><br></pre></td></tr></table></figure><h3 id="strpos-函数"><a href="#strpos-函数" class="headerlink" title="strpos()函数"></a>strpos()函数</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> strpos ( string $haystack , mixed $needle [, int $offset = <span class="number">0</span> ] ) : int</span><br><span class="line">查找字符串在另一字符串中第一次出现的位置。</span><br><span class="line">&#125;</span><br><span class="line">strpos ($_GET[<span class="string">'password'</span>], <span class="string">'--'</span>) !== <span class="keyword">FALSE</span></span><br><span class="line">该字符串必须有“*--*”字符。</span><br></pre></td></tr></table></figure><p>这两个条件明显发生冲突，<em>由于ereg()函数存在%00截断，即ereg()读取字符串时，当遇到%00会默认已经读完，不再读取后面的内容，这样我们就可以利用此漏洞在%00后添加“–”从而绕过正则检测。</em></p><p>解决：<a href="http://123.206.87.240:9009/19.php?password=12%00--" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php?password=12%00--</a><br>同时，ereg()只能处理字符串，遇到数组做参数返回NULL，条件用强 === （要求两边类型相同），而NULL跟FALSE类型不同,顺利进入下一个条件；strpos()的参数也不能为数组，否则返回NULL，与FALSE类型不同，满足！==条件，故也可以直接传入一个数组。<br>解决：<a href="http://123.206.87.240:9009/19.php?password[]=" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php?password[]=</a><br>（或<a href="http://123.206.87.240:9009/19.php?password[]=1只是一个为空值一个给了个值。）" target="_blank" rel="noopener">http://123.206.87.240:9009/19.php?password[]=1只是一个为空值一个给了个值。）</a></p><hr><h1 id="Extract"><a href="#Extract" class="headerlink" title="Extract"></a>Extract</h1><p>打开链接空白页面，分析给出的php代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;extract($_GET); </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($shiyan))</span><br><span class="line">&#123; </span><br><span class="line">$content=trim(file_get_contents($flag)); </span><br><span class="line"><span class="keyword">if</span>($shiyan==$content)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">'flag&#123;xxx&#125;'</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span><span class="string">'Oh.no'</span>; &#125; &#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="extract-函数"><a href="#extract-函数" class="headerlink" title="extract()函数"></a>extract()函数</h3><p>{<br>extract() 函数从数组中将变量导入到当前的符号表。<br>该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。<br>该函数返回成功设置的变量数目。<br><strong>但是当变量中有同名的元素时，该函数默认将原有的值给覆盖掉，这就造成了变量覆盖漏洞。</strong><br>}</p><h2 id="代码分析：-1"><a href="#代码分析：-1" class="headerlink" title="代码分析："></a>代码分析：</h2><p>将flag变量设置为xxx；<br>将GET 方法传输进来的值通过extract()函数处理；<br>isset函数判断HTTP GET请求中的参数shiyan是否已设置并且非NULL;<br>if 判断shiyan这个变量和content这个变量是否相等。content 的值是通过读取 flag 变量的值来获取的。如果这个两个变量相等输出 flag 。<br>file_get_contents() — 将整个文件读入一个字符串。<br>trim() — 去除字符串首尾处的空白字符（或者其他字符）。<br>解决：<br>由于我们不知道flag的值是什么？所以我们需要利用extract()函数漏洞，进行变量覆盖，重新给flag变量赋值。<br>只要我们构造的payload使得 $shiyan = $content ，其中 $content 的值又取决于 flag 变量，所以只要 shiyan变量相等于flag变量即可。由于file_get_contents($flag) 中的$flag是一个参数，导致$content的值是空值，所以我们可以构造如下payload：<br><a href="http://123.206.87.240:9009/1.php?shiyan=" target="_blank" rel="noopener">http://123.206.87.240:9009/1.php?shiyan=</a> </p><hr><p><em>这里再引一位大佬的解答：（代码稍有不同）<a href="https://zhouxinan.github.io/" target="_blank" rel="noopener">https://zhouxinan.github.io/</a></em></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag=<span class="string">'xxx'</span>;</span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($sixstars)) &#123;</span><br><span class="line">    $content=trim(file_get_contents($flag));</span><br><span class="line">    <span class="keyword">if</span> ($sixstars==$content) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Oh.no'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先，flag变量被设置为’xxx’，一个简单的字符串。<br>接着，后端运行了extract函数，从<code>$_GET</code>数组中将变量导入到当前的符号表。什么意思呢？其实很简单。比如如果我们访问了<a href="http://139.224.220.67:23900/dmsj/level2/?sixstars=1，那么`$_GET[&quot;sixstars&quot;]`的值为字符串1。执行`extract($_GET)`;时，就相当于执行了`$sixstars=&#39;1&#39;`。" target="_blank" rel="noopener">http://139.224.220.67:23900/dmsj/level2/?sixstars=1，那么`$_GET[&quot;sixstars&quot;]`的值为字符串1。执行`extract($_GET)`;时，就相当于执行了`$sixstars=&#39;1&#39;`。</a><br>然后，程序将会执行<code>isset($sixstars)</code>。我们看到，为了获取flag，必须执行到echo ‘flag{xxx}’;，所以<code>isset($sixstars)</code>的返回值必须为 TRUE。所以，我们必须通过<code>extract($_GET)</code>;将sixstars变量设置为任意值，即使是空字符串也可以。也就是说，即使访问<a href="http://139.224.220.67:23900/dmsj/level2/?sixstars=也是可以的。但绝对不能不包含sixstars参数。" target="_blank" rel="noopener">http://139.224.220.67:23900/dmsj/level2/?sixstars=也是可以的。但绝对不能不包含sixstars参数。</a><br>接着，程序将会执行<code>$content=trim(file_get_contents($flag));</code>。我们分步看。首先会执行<code>file_get_contents($flag)</code>。正常情况下，如果你不通过URL传入flag参数，那么，因为程序的最开始已经执行过<code>$flag=&#39;xxx&#39;</code>;，所以到了这里将会执行file_get_contents(‘xxx’)。file_get_contents函数可以“将整个文件读入一个字符串”。比如如下代码可以将<a href="http://www.example.com/网站的源代码读取到homepage变量中并显示出来。" target="_blank" rel="noopener">http://www.example.com/网站的源代码读取到homepage变量中并显示出来。</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$homepage = file_get_contents(<span class="string">'http://www.example.com/'</span>);</span><br><span class="line"><span class="keyword">echo</span> $homepage;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>接着，php又会执行trim函数，它将会“去除字符串首尾处的空白字符（或者其他字符）”。<br>最后，php将会执行<code>if ($sixstars==$content)，</code>如果为TRUE，那么将会显示flag。<br>读到这里，你想必已经知道了我们该怎么做：首先，给sixstars变量传入一个值，比如1。然后，给flag变量传入一个我们能控制的网站的地址，并让这个我们能控制的网站的源代码设置为1。由于extract能起到“变量覆盖”的作用，在extract后，flag变量就会被覆盖为我们能控制的网站的地址，而不再是’xxx’，这样当执行到file_get_contents时php后端将会从我们能控制的网站上读取到1，并将其和sixstars变量比较，并返回TRUE，然后就能打印flag。<br>虽然这个方法是可行的，但是今天我要教你一个更简单的方法，那就是php伪协议。我们可以直接给flag变量传入data://text/plain,1。意思是明文1。这样file_get_contents(‘data://text/plain,1’)将会直接返回1，就不需要我们在公网上开一台服务器了。<br>所以，最后我们的payload是：<br>1    <a href="http://139.224.220.67:23900/dmsj/level2/?sixstars=1&amp;flag=data://text/plain,1" target="_blank" rel="noopener">http://139.224.220.67:23900/dmsj/level2/?sixstars=1&amp;flag=data://text/plain,1</a><br>这里再强调一下，给后端传参的方法是：在?后跟变量名字，不同的变量之间用&amp;隔开。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PHP大法&quot;&gt;&lt;a href=&quot;#PHP大法&quot; class=&quot;headerlink&quot; title=&quot;PHP大法&quot;&gt;&lt;/a&gt;PHP大法&lt;/h1&gt;&lt;p&gt;（来源：实验吧  解题链接： &lt;a href=&quot;http://ctf5.shiyanbar.com/DUTCTF/i
      
    
    </summary>
    
    
      <category term="php" scheme="https://singlemindedt.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>加密算法</title>
    <link href="https://singlemindedt.github.io/2019/09/01/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/"/>
    <id>https://singlemindedt.github.io/2019/09/01/加密算法/</id>
    <published>2019-09-01T14:50:25.000Z</published>
    <updated>2019-09-01T14:50:25.208Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>反序列化</title>
    <link href="https://singlemindedt.github.io/2019/09/01/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://singlemindedt.github.io/2019/09/01/反序列化/</id>
    <published>2019-09-01T14:49:34.000Z</published>
    <updated>2019-09-01T14:49:35.039Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>xxe</title>
    <link href="https://singlemindedt.github.io/2019/09/01/xxe/"/>
    <id>https://singlemindedt.github.io/2019/09/01/xxe/</id>
    <published>2019-09-01T14:49:06.000Z</published>
    <updated>2019-09-01T14:49:06.023Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>VPS</title>
    <link href="https://singlemindedt.github.io/2019/09/01/VPS/"/>
    <id>https://singlemindedt.github.io/2019/09/01/VPS/</id>
    <published>2019-09-01T14:47:52.000Z</published>
    <updated>2019-09-01T14:47:52.634Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>newpapername</title>
    <link href="https://singlemindedt.github.io/2019/08/31/newpapername/"/>
    <id>https://singlemindedt.github.io/2019/08/31/newpapername/</id>
    <published>2019-08-31T00:49:55.000Z</published>
    <updated>2019-08-31T00:49:55.129Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://singlemindedt.github.io/2019/08/31/hello-world/"/>
    <id>https://singlemindedt.github.io/2019/08/31/hello-world/</id>
    <published>2019-08-30T17:02:28.962Z</published>
    <updated>2019-08-31T02:45:06.183Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://singlemindedt.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>小雏鸟的成人式2</title>
    <link href="https://singlemindedt.github.io/1970/01/01/%E7%AE%97%E6%B3%95%E4%BD%9C%E4%B8%9Aone/"/>
    <id>https://singlemindedt.github.io/1970/01/01/算法作业one/</id>
    <published>1970-01-01T00:00:00.001Z</published>
    <updated>2019-09-04T05:29:56.136Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>陶行知先生说：“我们要活的书，不要死的书 ”。</p><p>小雏鸟们从书上都是对的到现在能去伪存真的去使用书籍，证明你们长大了。总之就是要有自己的主见，自己的思考。</p><p>大白希望大家都能拿到一百分，所以对100这个数以及他的倍数很喜欢。</p><p>大白发现，从1开始，一定能找出一个序列从小到大排列，使得每一项都是 恰好能且仅能 被100整除D次。</p><p>请你编写程序，找到这个数列里第N个数。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>多行。每行输入两个整数，表示D和N，N范围[1,100]，D范围[0,2]</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>每行对应输入，给出一个符合题意的整数</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">11</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">85</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1100</span></span><br><span class="line"><span class="number">850000</span></span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>###思路：很容易想到计算方法，其中N=100的情况需要注意，在下面带代码中给出。</p><h2 id="题解："><a href="#题解：" class="headerlink" title="题解："></a><strong>题解：</strong></h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> D,N;<span class="comment">//pow(double,double)</span></span><br><span class="line"><span class="keyword">double</span> n;  <span class="comment">//避免损失精度 </span></span><br><span class="line">                 <span class="comment">//int s;//最后由于要得到整数而非科学记数法，故需要强制转换一下</span></span><br><span class="line">           <span class="comment">//如：2 100 得到1.01e+006转化之后为1010000 </span></span><br><span class="line">           <span class="comment">//***也可以直接cout&lt;&lt;int(n)转化输出结果 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;D&gt;&gt;N)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1</span>&lt;=N&amp;&amp;N&lt;<span class="number">100</span>&amp;&amp;<span class="number">0</span>&lt;=D&amp;&amp;D&lt;=<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">n=N*(<span class="built_in">pow</span>(<span class="number">100</span>,D));</span><br><span class="line">               <span class="comment">//s=n;</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="keyword">int</span>(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(N=<span class="number">100</span>&amp;&amp;<span class="number">0</span>&lt;=D&amp;&amp;D&lt;=<span class="number">2</span>)<span class="comment">//当N=100用原来的算法会使结果整除次数加1</span></span><br><span class="line">    &#123;</span><br><span class="line">    n=<span class="number">101</span>*(<span class="built_in">pow</span>(<span class="number">100</span>,D));</span><br><span class="line">    <span class="comment">//s=n;</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="keyword">int</span>(n)&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://dev.tencent.com/u/Single-minded_T/p/daerduotutu/git/raw/master/%E5%B0%8F%E9%9B%8F%E9%B8%9F%E7%9A%84%E6%88%90%E4%BA%BA%E5%BC%8F2.PNG" alt="Demo"><br><img src="https://wx3.sinaimg.cn/mw1024/0070Pzw7gy1g6jcpu3y3mj30im087glg.jpg" alt="Demo"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;陶行知先生说：“我们要活的书，不要死的书 ”。&lt;/p&gt;
&lt;p&gt;小雏鸟们从书上都是对的到现在能去伪存真的去使用书籍，证明你们长
      
    
    </summary>
    
      <category term="算法" scheme="https://singlemindedt.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://singlemindedt.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
